id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
items:
- id: Global
  language: CSharp
  name:
    CSharp: ''
    VB: ''
  nameWithType:
    CSharp: ''
    VB: ''
  qualifiedName:
    CSharp: ''
    VB: ''
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: Global.AnswerCorrect1
    commentId: T:Global.AnswerCorrect1
    language: CSharp
    name:
      CSharp: AnswerCorrect1
      VB: AnswerCorrect1
    nameWithType:
      CSharp: AnswerCorrect1
      VB: AnswerCorrect1
    qualifiedName:
      CSharp: AnswerCorrect1
      VB: AnswerCorrect1
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AnswerCorrect1
      path: ''
      startLine: 6
    syntax:
      content:
        CSharp: 'public class AnswerCorrect1 : MonoBehaviour'
        VB: Public Class AnswerCorrect1 Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.AnswerCorrect1.correct
      commentId: F:Global.AnswerCorrect1.correct
      language: CSharp
      name:
        CSharp: correct
        VB: correct
      nameWithType:
        CSharp: AnswerCorrect1.correct
        VB: AnswerCorrect1.correct
      qualifiedName:
        CSharp: AnswerCorrect1.correct
        VB: AnswerCorrect1.correct
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: correct
        path: ''
        startLine: 13
      syntax:
        content:
          CSharp: public UIDocument correct
          VB: Public correct As UIDocument
        return:
          type: Global.UIDocument
    - id: Global.AnswerCorrect1.wrong
      commentId: F:Global.AnswerCorrect1.wrong
      language: CSharp
      name:
        CSharp: wrong
        VB: wrong
      nameWithType:
        CSharp: AnswerCorrect1.wrong
        VB: AnswerCorrect1.wrong
      qualifiedName:
        CSharp: AnswerCorrect1.wrong
        VB: AnswerCorrect1.wrong
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: wrong
        path: ''
        startLine: 14
      syntax:
        content:
          CSharp: public UIDocument wrong
          VB: Public wrong As UIDocument
        return:
          type: Global.UIDocument
    - id: Global.AnswerCorrect1.OnCorrectClick
      commentId: M:Global.AnswerCorrect1.OnCorrectClick
      language: CSharp
      name:
        CSharp: OnCorrectClick()
        VB: OnCorrectClick()
      nameWithType:
        CSharp: AnswerCorrect1.OnCorrectClick()
        VB: AnswerCorrect1.OnCorrectClick()
      qualifiedName:
        CSharp: AnswerCorrect1.OnCorrectClick()
        VB: AnswerCorrect1.OnCorrectClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnCorrectClick
        path: ''
        startLine: 40
      syntax:
        content:
          CSharp: public void OnCorrectClick()
          VB: Public Sub OnCorrectClick()
      overload: Global.AnswerCorrect1.OnCorrectClick*
    - id: Global.AnswerCorrect1.OnWrongAClick
      commentId: M:Global.AnswerCorrect1.OnWrongAClick
      language: CSharp
      name:
        CSharp: OnWrongAClick()
        VB: OnWrongAClick()
      nameWithType:
        CSharp: AnswerCorrect1.OnWrongAClick()
        VB: AnswerCorrect1.OnWrongAClick()
      qualifiedName:
        CSharp: AnswerCorrect1.OnWrongAClick()
        VB: AnswerCorrect1.OnWrongAClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnWrongAClick
        path: ''
        startLine: 46
      syntax:
        content:
          CSharp: public void OnWrongAClick()
          VB: Public Sub OnWrongAClick()
      overload: Global.AnswerCorrect1.OnWrongAClick*
    - id: Global.AnswerCorrect1.OnWrongCClick
      commentId: M:Global.AnswerCorrect1.OnWrongCClick
      language: CSharp
      name:
        CSharp: OnWrongCClick()
        VB: OnWrongCClick()
      nameWithType:
        CSharp: AnswerCorrect1.OnWrongCClick()
        VB: AnswerCorrect1.OnWrongCClick()
      qualifiedName:
        CSharp: AnswerCorrect1.OnWrongCClick()
        VB: AnswerCorrect1.OnWrongCClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnWrongCClick
        path: ''
        startLine: 51
      syntax:
        content:
          CSharp: public void OnWrongCClick()
          VB: Public Sub OnWrongCClick()
      overload: Global.AnswerCorrect1.OnWrongCClick*
    - id: Global.AnswerCorrect1.OnWrongDClick
      commentId: M:Global.AnswerCorrect1.OnWrongDClick
      language: CSharp
      name:
        CSharp: OnWrongDClick()
        VB: OnWrongDClick()
      nameWithType:
        CSharp: AnswerCorrect1.OnWrongDClick()
        VB: AnswerCorrect1.OnWrongDClick()
      qualifiedName:
        CSharp: AnswerCorrect1.OnWrongDClick()
        VB: AnswerCorrect1.OnWrongDClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnWrongDClick
        path: ''
        startLine: 56
      syntax:
        content:
          CSharp: public void OnWrongDClick()
          VB: Public Sub OnWrongDClick()
      overload: Global.AnswerCorrect1.OnWrongDClick*
  - id: Global.Assessment2
    commentId: T:Global.Assessment2
    language: CSharp
    name:
      CSharp: Assessment2
      VB: Assessment2
    nameWithType:
      CSharp: Assessment2
      VB: Assessment2
    qualifiedName:
      CSharp: Assessment2
      VB: Assessment2
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Assessment2
      path: ''
      startLine: 68
    syntax:
      content:
        CSharp: 'public class Assessment2 : MonoBehaviour'
        VB: Public Class Assessment2 Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.Assessment2.correct
      commentId: F:Global.Assessment2.correct
      language: CSharp
      name:
        CSharp: correct
        VB: correct
      nameWithType:
        CSharp: Assessment2.correct
        VB: Assessment2.correct
      qualifiedName:
        CSharp: Assessment2.correct
        VB: Assessment2.correct
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: correct
        path: ''
        startLine: 77
      syntax:
        content:
          CSharp: public UIDocument correct
          VB: Public correct As UIDocument
        return:
          type: Global.UIDocument
    - id: Global.Assessment2.wrong
      commentId: F:Global.Assessment2.wrong
      language: CSharp
      name:
        CSharp: wrong
        VB: wrong
      nameWithType:
        CSharp: Assessment2.wrong
        VB: Assessment2.wrong
      qualifiedName:
        CSharp: Assessment2.wrong
        VB: Assessment2.wrong
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: wrong
        path: ''
        startLine: 78
      syntax:
        content:
          CSharp: public UIDocument wrong
          VB: Public wrong As UIDocument
        return:
          type: Global.UIDocument
    - id: Global.Assessment2.OnCorrectClick
      commentId: M:Global.Assessment2.OnCorrectClick
      language: CSharp
      name:
        CSharp: OnCorrectClick()
        VB: OnCorrectClick()
      nameWithType:
        CSharp: Assessment2.OnCorrectClick()
        VB: Assessment2.OnCorrectClick()
      qualifiedName:
        CSharp: Assessment2.OnCorrectClick()
        VB: Assessment2.OnCorrectClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnCorrectClick
        path: ''
        startLine: 112
      syntax:
        content:
          CSharp: public void OnCorrectClick()
          VB: Public Sub OnCorrectClick()
      overload: Global.Assessment2.OnCorrectClick*
    - id: Global.Assessment2.OnWrongAClick
      commentId: M:Global.Assessment2.OnWrongAClick
      language: CSharp
      name:
        CSharp: OnWrongAClick()
        VB: OnWrongAClick()
      nameWithType:
        CSharp: Assessment2.OnWrongAClick()
        VB: Assessment2.OnWrongAClick()
      qualifiedName:
        CSharp: Assessment2.OnWrongAClick()
        VB: Assessment2.OnWrongAClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnWrongAClick
        path: ''
        startLine: 118
      syntax:
        content:
          CSharp: public void OnWrongAClick()
          VB: Public Sub OnWrongAClick()
      overload: Global.Assessment2.OnWrongAClick*
    - id: Global.Assessment2.OnWrongBClick
      commentId: M:Global.Assessment2.OnWrongBClick
      language: CSharp
      name:
        CSharp: OnWrongBClick()
        VB: OnWrongBClick()
      nameWithType:
        CSharp: Assessment2.OnWrongBClick()
        VB: Assessment2.OnWrongBClick()
      qualifiedName:
        CSharp: Assessment2.OnWrongBClick()
        VB: Assessment2.OnWrongBClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnWrongBClick
        path: ''
        startLine: 123
      syntax:
        content:
          CSharp: public void OnWrongBClick()
          VB: Public Sub OnWrongBClick()
      overload: Global.Assessment2.OnWrongBClick*
    - id: Global.Assessment2.OnWrongCClick
      commentId: M:Global.Assessment2.OnWrongCClick
      language: CSharp
      name:
        CSharp: OnWrongCClick()
        VB: OnWrongCClick()
      nameWithType:
        CSharp: Assessment2.OnWrongCClick()
        VB: Assessment2.OnWrongCClick()
      qualifiedName:
        CSharp: Assessment2.OnWrongCClick()
        VB: Assessment2.OnWrongCClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnWrongCClick
        path: ''
        startLine: 128
      syntax:
        content:
          CSharp: public void OnWrongCClick()
          VB: Public Sub OnWrongCClick()
      overload: Global.Assessment2.OnWrongCClick*
    - id: Global.Assessment2.OnWrongDClick
      commentId: M:Global.Assessment2.OnWrongDClick
      language: CSharp
      name:
        CSharp: OnWrongDClick()
        VB: OnWrongDClick()
      nameWithType:
        CSharp: Assessment2.OnWrongDClick()
        VB: Assessment2.OnWrongDClick()
      qualifiedName:
        CSharp: Assessment2.OnWrongDClick()
        VB: Assessment2.OnWrongDClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnWrongDClick
        path: ''
        startLine: 133
      syntax:
        content:
          CSharp: public void OnWrongDClick()
          VB: Public Sub OnWrongDClick()
      overload: Global.Assessment2.OnWrongDClick*
    - id: Global.Assessment2.OnWrongFClick
      commentId: M:Global.Assessment2.OnWrongFClick
      language: CSharp
      name:
        CSharp: OnWrongFClick()
        VB: OnWrongFClick()
      nameWithType:
        CSharp: Assessment2.OnWrongFClick()
        VB: Assessment2.OnWrongFClick()
      qualifiedName:
        CSharp: Assessment2.OnWrongFClick()
        VB: Assessment2.OnWrongFClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnWrongFClick
        path: ''
        startLine: 138
      syntax:
        content:
          CSharp: public void OnWrongFClick()
          VB: Public Sub OnWrongFClick()
      overload: Global.Assessment2.OnWrongFClick*
  - id: Global.Assessment3
    commentId: T:Global.Assessment3
    language: CSharp
    name:
      CSharp: Assessment3
      VB: Assessment3
    nameWithType:
      CSharp: Assessment3
      VB: Assessment3
    qualifiedName:
      CSharp: Assessment3
      VB: Assessment3
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Assessment3
      path: ''
      startLine: 150
    syntax:
      content:
        CSharp: 'public class Assessment3 : MonoBehaviour'
        VB: Public Class Assessment3 Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.Assessment3.correct
      commentId: F:Global.Assessment3.correct
      language: CSharp
      name:
        CSharp: correct
        VB: correct
      nameWithType:
        CSharp: Assessment3.correct
        VB: Assessment3.correct
      qualifiedName:
        CSharp: Assessment3.correct
        VB: Assessment3.correct
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: correct
        path: ''
        startLine: 159
      syntax:
        content:
          CSharp: public UIDocument correct
          VB: Public correct As UIDocument
        return:
          type: Global.UIDocument
    - id: Global.Assessment3.wrong
      commentId: F:Global.Assessment3.wrong
      language: CSharp
      name:
        CSharp: wrong
        VB: wrong
      nameWithType:
        CSharp: Assessment3.wrong
        VB: Assessment3.wrong
      qualifiedName:
        CSharp: Assessment3.wrong
        VB: Assessment3.wrong
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: wrong
        path: ''
        startLine: 160
      syntax:
        content:
          CSharp: public UIDocument wrong
          VB: Public wrong As UIDocument
        return:
          type: Global.UIDocument
    - id: Global.Assessment3.OnCorrectClick
      commentId: M:Global.Assessment3.OnCorrectClick
      language: CSharp
      name:
        CSharp: OnCorrectClick()
        VB: OnCorrectClick()
      nameWithType:
        CSharp: Assessment3.OnCorrectClick()
        VB: Assessment3.OnCorrectClick()
      qualifiedName:
        CSharp: Assessment3.OnCorrectClick()
        VB: Assessment3.OnCorrectClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnCorrectClick
        path: ''
        startLine: 194
      syntax:
        content:
          CSharp: public void OnCorrectClick()
          VB: Public Sub OnCorrectClick()
      overload: Global.Assessment3.OnCorrectClick*
    - id: Global.Assessment3.OnWrongAClick
      commentId: M:Global.Assessment3.OnWrongAClick
      language: CSharp
      name:
        CSharp: OnWrongAClick()
        VB: OnWrongAClick()
      nameWithType:
        CSharp: Assessment3.OnWrongAClick()
        VB: Assessment3.OnWrongAClick()
      qualifiedName:
        CSharp: Assessment3.OnWrongAClick()
        VB: Assessment3.OnWrongAClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnWrongAClick
        path: ''
        startLine: 200
      syntax:
        content:
          CSharp: public void OnWrongAClick()
          VB: Public Sub OnWrongAClick()
      overload: Global.Assessment3.OnWrongAClick*
    - id: Global.Assessment3.OnWrongBClick
      commentId: M:Global.Assessment3.OnWrongBClick
      language: CSharp
      name:
        CSharp: OnWrongBClick()
        VB: OnWrongBClick()
      nameWithType:
        CSharp: Assessment3.OnWrongBClick()
        VB: Assessment3.OnWrongBClick()
      qualifiedName:
        CSharp: Assessment3.OnWrongBClick()
        VB: Assessment3.OnWrongBClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnWrongBClick
        path: ''
        startLine: 205
      syntax:
        content:
          CSharp: public void OnWrongBClick()
          VB: Public Sub OnWrongBClick()
      overload: Global.Assessment3.OnWrongBClick*
    - id: Global.Assessment3.OnWrongCClick
      commentId: M:Global.Assessment3.OnWrongCClick
      language: CSharp
      name:
        CSharp: OnWrongCClick()
        VB: OnWrongCClick()
      nameWithType:
        CSharp: Assessment3.OnWrongCClick()
        VB: Assessment3.OnWrongCClick()
      qualifiedName:
        CSharp: Assessment3.OnWrongCClick()
        VB: Assessment3.OnWrongCClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnWrongCClick
        path: ''
        startLine: 210
      syntax:
        content:
          CSharp: public void OnWrongCClick()
          VB: Public Sub OnWrongCClick()
      overload: Global.Assessment3.OnWrongCClick*
    - id: Global.Assessment3.OnWrongDClick
      commentId: M:Global.Assessment3.OnWrongDClick
      language: CSharp
      name:
        CSharp: OnWrongDClick()
        VB: OnWrongDClick()
      nameWithType:
        CSharp: Assessment3.OnWrongDClick()
        VB: Assessment3.OnWrongDClick()
      qualifiedName:
        CSharp: Assessment3.OnWrongDClick()
        VB: Assessment3.OnWrongDClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnWrongDClick
        path: ''
        startLine: 215
      syntax:
        content:
          CSharp: public void OnWrongDClick()
          VB: Public Sub OnWrongDClick()
      overload: Global.Assessment3.OnWrongDClick*
    - id: Global.Assessment3.OnWrongEClick
      commentId: M:Global.Assessment3.OnWrongEClick
      language: CSharp
      name:
        CSharp: OnWrongEClick()
        VB: OnWrongEClick()
      nameWithType:
        CSharp: Assessment3.OnWrongEClick()
        VB: Assessment3.OnWrongEClick()
      qualifiedName:
        CSharp: Assessment3.OnWrongEClick()
        VB: Assessment3.OnWrongEClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnWrongEClick
        path: ''
        startLine: 220
      syntax:
        content:
          CSharp: public void OnWrongEClick()
          VB: Public Sub OnWrongEClick()
      overload: Global.Assessment3.OnWrongEClick*
  - id: Global.PopupButton
    commentId: T:Global.PopupButton
    language: CSharp
    name:
      CSharp: PopupButton
      VB: PopupButton
    nameWithType:
      CSharp: PopupButton
      VB: PopupButton
    qualifiedName:
      CSharp: PopupButton
      VB: PopupButton
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PopupButton
      path: ''
      startLine: 233
    syntax:
      content:
        CSharp: 'public class PopupButton : MonoBehaviour'
        VB: Public Class PopupButton Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.PopupButton.OnButtonClick(ClickEvent)
      commentId: M:Global.PopupButton.OnButtonClick(ClickEvent)
      language: CSharp
      name:
        CSharp: OnButtonClick(ClickEvent)
        VB: OnButtonClick(ClickEvent)
      nameWithType:
        CSharp: PopupButton.OnButtonClick(ClickEvent)
        VB: PopupButton.OnButtonClick(ClickEvent)
      qualifiedName:
        CSharp: PopupButton.OnButtonClick(ClickEvent)
        VB: PopupButton.OnButtonClick(ClickEvent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnButtonClick
        path: ''
        startLine: 243
      syntax:
        content:
          CSharp: public void OnButtonClick(ClickEvent evt)
          VB: Public Sub OnButtonClick(evt As ClickEvent)
        parameters:
        - id: evt
          type: Global.ClickEvent
      overload: Global.PopupButton.OnButtonClick*
  - id: Global.Result
    commentId: T:Global.Result
    language: CSharp
    name:
      CSharp: Result
      VB: Result
    nameWithType:
      CSharp: Result
      VB: Result
    qualifiedName:
      CSharp: Result
      VB: Result
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Result
      path: ''
      startLine: 256
    syntax:
      content:
        CSharp: 'public class Result : MonoBehaviour'
        VB: Public Class Result Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.URLButtons
    commentId: T:Global.URLButtons
    language: CSharp
    name:
      CSharp: URLButtons
      VB: URLButtons
    nameWithType:
      CSharp: URLButtons
      VB: URLButtons
    qualifiedName:
      CSharp: URLButtons
      VB: URLButtons
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: URLButtons
      path: ''
      startLine: 317
    syntax:
      content:
        CSharp: 'public class URLButtons : MonoBehaviour'
        VB: Public Class URLButtons Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.URLButtons.OnEwbClick
      commentId: M:Global.URLButtons.OnEwbClick
      language: CSharp
      name:
        CSharp: OnEwbClick()
        VB: OnEwbClick()
      nameWithType:
        CSharp: URLButtons.OnEwbClick()
        VB: URLButtons.OnEwbClick()
      qualifiedName:
        CSharp: URLButtons.OnEwbClick()
        VB: URLButtons.OnEwbClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEwbClick
        path: ''
        startLine: 344
      syntax:
        content:
          CSharp: public void OnEwbClick()
          VB: Public Sub OnEwbClick()
      overload: Global.URLButtons.OnEwbClick*
    - id: Global.URLButtons.OnFbClick
      commentId: M:Global.URLButtons.OnFbClick
      language: CSharp
      name:
        CSharp: OnFbClick()
        VB: OnFbClick()
      nameWithType:
        CSharp: URLButtons.OnFbClick()
        VB: URLButtons.OnFbClick()
      qualifiedName:
        CSharp: URLButtons.OnFbClick()
        VB: URLButtons.OnFbClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnFbClick
        path: ''
        startLine: 349
      syntax:
        content:
          CSharp: public void OnFbClick()
          VB: Public Sub OnFbClick()
      overload: Global.URLButtons.OnFbClick*
    - id: Global.URLButtons.OnInsClick
      commentId: M:Global.URLButtons.OnInsClick
      language: CSharp
      name:
        CSharp: OnInsClick()
        VB: OnInsClick()
      nameWithType:
        CSharp: URLButtons.OnInsClick()
        VB: URLButtons.OnInsClick()
      qualifiedName:
        CSharp: URLButtons.OnInsClick()
        VB: URLButtons.OnInsClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInsClick
        path: ''
        startLine: 354
      syntax:
        content:
          CSharp: public void OnInsClick()
          VB: Public Sub OnInsClick()
      overload: Global.URLButtons.OnInsClick*
    - id: Global.URLButtons.OnLinkedinClick
      commentId: M:Global.URLButtons.OnLinkedinClick
      language: CSharp
      name:
        CSharp: OnLinkedinClick()
        VB: OnLinkedinClick()
      nameWithType:
        CSharp: URLButtons.OnLinkedinClick()
        VB: URLButtons.OnLinkedinClick()
      qualifiedName:
        CSharp: URLButtons.OnLinkedinClick()
        VB: URLButtons.OnLinkedinClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnLinkedinClick
        path: ''
        startLine: 358
      syntax:
        content:
          CSharp: public void OnLinkedinClick()
          VB: Public Sub OnLinkedinClick()
      overload: Global.URLButtons.OnLinkedinClick*
    - id: Global.URLButtons.OnTwitterClick
      commentId: M:Global.URLButtons.OnTwitterClick
      language: CSharp
      name:
        CSharp: OnTwitterClick()
        VB: OnTwitterClick()
      nameWithType:
        CSharp: URLButtons.OnTwitterClick()
        VB: URLButtons.OnTwitterClick()
      qualifiedName:
        CSharp: URLButtons.OnTwitterClick()
        VB: URLButtons.OnTwitterClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnTwitterClick
        path: ''
        startLine: 362
      syntax:
        content:
          CSharp: public void OnTwitterClick()
          VB: Public Sub OnTwitterClick()
      overload: Global.URLButtons.OnTwitterClick*
    - id: Global.URLButtons.OnPrivacyPolicyClick
      commentId: M:Global.URLButtons.OnPrivacyPolicyClick
      language: CSharp
      name:
        CSharp: OnPrivacyPolicyClick()
        VB: OnPrivacyPolicyClick()
      nameWithType:
        CSharp: URLButtons.OnPrivacyPolicyClick()
        VB: URLButtons.OnPrivacyPolicyClick()
      qualifiedName:
        CSharp: URLButtons.OnPrivacyPolicyClick()
        VB: URLButtons.OnPrivacyPolicyClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPrivacyPolicyClick
        path: ''
        startLine: 366
      syntax:
        content:
          CSharp: public void OnPrivacyPolicyClick()
          VB: Public Sub OnPrivacyPolicyClick()
      overload: Global.URLButtons.OnPrivacyPolicyClick*
  - id: Global.AdvancePhaseOnClick
    commentId: T:Global.AdvancePhaseOnClick
    language: CSharp
    name:
      CSharp: AdvancePhaseOnClick
      VB: AdvancePhaseOnClick
    nameWithType:
      CSharp: AdvancePhaseOnClick
      VB: AdvancePhaseOnClick
    qualifiedName:
      CSharp: AdvancePhaseOnClick
      VB: AdvancePhaseOnClick
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AdvancePhaseOnClick
      path: ''
      startLine: 1641
    syntax:
      content:
        CSharp: 'public class AdvancePhaseOnClick : MonoBehaviour'
        VB: Public Class AdvancePhaseOnClick Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.AdvancePhaseOnClick.OnClick
      commentId: M:Global.AdvancePhaseOnClick.OnClick
      language: CSharp
      name:
        CSharp: OnClick()
        VB: OnClick()
      nameWithType:
        CSharp: AdvancePhaseOnClick.OnClick()
        VB: AdvancePhaseOnClick.OnClick()
      qualifiedName:
        CSharp: AdvancePhaseOnClick.OnClick()
        VB: AdvancePhaseOnClick.OnClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnClick
        path: ''
        startLine: 1655
      syntax:
        content:
          CSharp: public void OnClick()
          VB: Public Sub OnClick()
      overload: Global.AdvancePhaseOnClick.OnClick*
  - id: Global.AvailableLabourDisplayer
    commentId: T:Global.AvailableLabourDisplayer
    language: CSharp
    name:
      CSharp: AvailableLabourDisplayer
      VB: AvailableLabourDisplayer
    nameWithType:
      CSharp: AvailableLabourDisplayer
      VB: AvailableLabourDisplayer
    qualifiedName:
      CSharp: AvailableLabourDisplayer
      VB: AvailableLabourDisplayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AvailableLabourDisplayer
      path: ''
      startLine: 1681
    syntax:
      content:
        CSharp: 'public class AvailableLabourDisplayer : MonoBehaviour'
        VB: Public Class AvailableLabourDisplayer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.BuyButton
    commentId: T:Global.BuyButton
    language: CSharp
    name:
      CSharp: BuyButton
      VB: BuyButton
    nameWithType:
      CSharp: BuyButton
      VB: BuyButton
    qualifiedName:
      CSharp: BuyButton
      VB: BuyButton
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BuyButton
      path: ''
      startLine: 1708
    syntax:
      content:
        CSharp: 'public class BuyButton : MonoBehaviour'
        VB: Public Class BuyButton Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.BuyButton.OnClick
      commentId: M:Global.BuyButton.OnClick
      language: CSharp
      name:
        CSharp: OnClick()
        VB: OnClick()
      nameWithType:
        CSharp: BuyButton.OnClick()
        VB: BuyButton.OnClick()
      qualifiedName:
        CSharp: BuyButton.OnClick()
        VB: BuyButton.OnClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnClick
        path: ''
        startLine: 1723
      syntax:
        content:
          CSharp: public void OnClick()
          VB: Public Sub OnClick()
      overload: Global.BuyButton.OnClick*
  - id: Global.ChildPopulator
    commentId: T:Global.ChildPopulator
    language: CSharp
    name:
      CSharp: ChildPopulator
      VB: ChildPopulator
    nameWithType:
      CSharp: ChildPopulator
      VB: ChildPopulator
    qualifiedName:
      CSharp: ChildPopulator
      VB: ChildPopulator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ChildPopulator
      path: ''
      startLine: 1735
    syntax:
      content:
        CSharp: 'public class ChildPopulator : MonoBehaviour'
        VB: Public Class ChildPopulator Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.ClosePopUpOnClick
    commentId: T:Global.ClosePopUpOnClick
    language: CSharp
    name:
      CSharp: ClosePopUpOnClick
      VB: ClosePopUpOnClick
    nameWithType:
      CSharp: ClosePopUpOnClick
      VB: ClosePopUpOnClick
    qualifiedName:
      CSharp: ClosePopUpOnClick
      VB: ClosePopUpOnClick
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ClosePopUpOnClick
      path: ''
      startLine: 1765
    syntax:
      content:
        CSharp: 'public class ClosePopUpOnClick : MonoBehaviour'
        VB: Public Class ClosePopUpOnClick Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.ClosePopUpOnClick.OnClick
      commentId: M:Global.ClosePopUpOnClick.OnClick
      language: CSharp
      name:
        CSharp: OnClick()
        VB: OnClick()
      nameWithType:
        CSharp: ClosePopUpOnClick.OnClick()
        VB: ClosePopUpOnClick.OnClick()
      qualifiedName:
        CSharp: ClosePopUpOnClick.OnClick()
        VB: ClosePopUpOnClick.OnClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnClick
        path: ''
        startLine: 1777
      syntax:
        content:
          CSharp: public void OnClick()
          VB: Public Sub OnClick()
      overload: Global.ClosePopUpOnClick.OnClick*
  - id: Global.CloseYieldTable
    commentId: T:Global.CloseYieldTable
    language: CSharp
    name:
      CSharp: CloseYieldTable
      VB: CloseYieldTable
    nameWithType:
      CSharp: CloseYieldTable
      VB: CloseYieldTable
    qualifiedName:
      CSharp: CloseYieldTable
      VB: CloseYieldTable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CloseYieldTable
      path: ''
      startLine: 1785
    syntax:
      content:
        CSharp: 'public class CloseYieldTable : MonoBehaviour'
        VB: Public Class CloseYieldTable Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.CloseYieldTable.yieldTable
      commentId: F:Global.CloseYieldTable.yieldTable
      language: CSharp
      name:
        CSharp: yieldTable
        VB: yieldTable
      nameWithType:
        CSharp: CloseYieldTable.yieldTable
        VB: CloseYieldTable.yieldTable
      qualifiedName:
        CSharp: CloseYieldTable.yieldTable
        VB: CloseYieldTable.yieldTable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: yieldTable
        path: ''
        startLine: 1787
      syntax:
        content:
          CSharp: public Image yieldTable
          VB: Public yieldTable As Image
        return:
          type: Global.Image
    - id: Global.CloseYieldTable.closeYieldTableButton
      commentId: F:Global.CloseYieldTable.closeYieldTableButton
      language: CSharp
      name:
        CSharp: closeYieldTableButton
        VB: closeYieldTableButton
      nameWithType:
        CSharp: CloseYieldTable.closeYieldTableButton
        VB: CloseYieldTable.closeYieldTableButton
      qualifiedName:
        CSharp: CloseYieldTable.closeYieldTableButton
        VB: CloseYieldTable.closeYieldTableButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: closeYieldTableButton
        path: ''
        startLine: 1788
      syntax:
        content:
          CSharp: public Button closeYieldTableButton
          VB: Public closeYieldTableButton As Button
        return:
          type: Global.Button
    - id: Global.CloseYieldTable.showYieldTableButton
      commentId: F:Global.CloseYieldTable.showYieldTableButton
      language: CSharp
      name:
        CSharp: showYieldTableButton
        VB: showYieldTableButton
      nameWithType:
        CSharp: CloseYieldTable.showYieldTableButton
        VB: CloseYieldTable.showYieldTableButton
      qualifiedName:
        CSharp: CloseYieldTable.showYieldTableButton
        VB: CloseYieldTable.showYieldTableButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: showYieldTableButton
        path: ''
        startLine: 1789
      syntax:
        content:
          CSharp: public Button showYieldTableButton
          VB: Public showYieldTableButton As Button
        return:
          type: Global.Button
  - id: Global.CollectAllWheat
    commentId: T:Global.CollectAllWheat
    language: CSharp
    name:
      CSharp: CollectAllWheat
      VB: CollectAllWheat
    nameWithType:
      CSharp: CollectAllWheat
      VB: CollectAllWheat
    qualifiedName:
      CSharp: CollectAllWheat
      VB: CollectAllWheat
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CollectAllWheat
      path: ''
      startLine: 1814
    syntax:
      content:
        CSharp: 'public class CollectAllWheat : MonoBehaviour'
        VB: Public Class CollectAllWheat Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.CollectAllWheat.collectAllButton
      commentId: F:Global.CollectAllWheat.collectAllButton
      language: CSharp
      name:
        CSharp: collectAllButton
        VB: collectAllButton
      nameWithType:
        CSharp: CollectAllWheat.collectAllButton
        VB: CollectAllWheat.collectAllButton
      qualifiedName:
        CSharp: CollectAllWheat.collectAllButton
        VB: CollectAllWheat.collectAllButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: collectAllButton
        path: ''
        startLine: 1816
      syntax:
        content:
          CSharp: public Button collectAllButton
          VB: Public collectAllButton As Button
        return:
          type: Global.Button
    - id: Global.CollectAllWheat.nextPhaseButton
      commentId: F:Global.CollectAllWheat.nextPhaseButton
      language: CSharp
      name:
        CSharp: nextPhaseButton
        VB: nextPhaseButton
      nameWithType:
        CSharp: CollectAllWheat.nextPhaseButton
        VB: CollectAllWheat.nextPhaseButton
      qualifiedName:
        CSharp: CollectAllWheat.nextPhaseButton
        VB: CollectAllWheat.nextPhaseButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: nextPhaseButton
        path: ''
        startLine: 1817
      syntax:
        content:
          CSharp: public Button nextPhaseButton
          VB: Public nextPhaseButton As Button
        return:
          type: Global.Button
    - id: Global.CollectAllWheat.wheatField
      commentId: F:Global.CollectAllWheat.wheatField
      language: CSharp
      name:
        CSharp: wheatField
        VB: wheatField
      nameWithType:
        CSharp: CollectAllWheat.wheatField
        VB: CollectAllWheat.wheatField
      qualifiedName:
        CSharp: CollectAllWheat.wheatField
        VB: CollectAllWheat.wheatField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: wheatField
        path: ''
        startLine: 1818
      syntax:
        content:
          CSharp: public Image wheatField
          VB: Public wheatField As Image
        return:
          type: Global.Image
  - id: Global.DisplayTotalWheat
    commentId: T:Global.DisplayTotalWheat
    language: CSharp
    name:
      CSharp: DisplayTotalWheat
      VB: DisplayTotalWheat
    nameWithType:
      CSharp: DisplayTotalWheat
      VB: DisplayTotalWheat
    qualifiedName:
      CSharp: DisplayTotalWheat
      VB: DisplayTotalWheat
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: DisplayTotalWheat
      path: ''
      startLine: 1851
    syntax:
      content:
        CSharp: 'public class DisplayTotalWheat : MonoBehaviour'
        VB: Public Class DisplayTotalWheat Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.DisplayWeather
    commentId: T:Global.DisplayWeather
    language: CSharp
    name:
      CSharp: DisplayWeather
      VB: DisplayWeather
    nameWithType:
      CSharp: DisplayWeather
      VB: DisplayWeather
    qualifiedName:
      CSharp: DisplayWeather
      VB: DisplayWeather
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: DisplayWeather
      path: ''
      startLine: 1873
    syntax:
      content:
        CSharp: 'public class DisplayWeather : MonoBehaviour'
        VB: Public Class DisplayWeather Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.EnableBasedOnPhase
    commentId: T:Global.EnableBasedOnPhase
    language: CSharp
    name:
      CSharp: EnableBasedOnPhase
      VB: EnableBasedOnPhase
    nameWithType:
      CSharp: EnableBasedOnPhase
      VB: EnableBasedOnPhase
    qualifiedName:
      CSharp: EnableBasedOnPhase
      VB: EnableBasedOnPhase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: EnableBasedOnPhase
      path: ''
      startLine: 1897
    syntax:
      content:
        CSharp: 'public class EnableBasedOnPhase : MonoBehaviour'
        VB: Public Class EnableBasedOnPhase Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.FamilyMemberPopulator
    commentId: T:Global.FamilyMemberPopulator
    language: CSharp
    name:
      CSharp: FamilyMemberPopulator
      VB: FamilyMemberPopulator
    nameWithType:
      CSharp: FamilyMemberPopulator
      VB: FamilyMemberPopulator
    qualifiedName:
      CSharp: FamilyMemberPopulator
      VB: FamilyMemberPopulator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FamilyMemberPopulator
      path: ''
      startLine: 1915
    syntax:
      content:
        CSharp: 'public class FamilyMemberPopulator : MonoBehaviour'
        VB: Public Class FamilyMemberPopulator Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.FarmManager
    commentId: T:Global.FarmManager
    language: CSharp
    name:
      CSharp: FarmManager
      VB: FarmManager
    nameWithType:
      CSharp: FarmManager
      VB: FarmManager
    qualifiedName:
      CSharp: FarmManager
      VB: FarmManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FarmManager
      path: ''
      startLine: 1995
    syntax:
      content:
        CSharp: 'public class FarmManager : MonoBehaviour'
        VB: Public Class FarmManager Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.FarmManager.SelectedTool
      commentId: P:Global.FarmManager.SelectedTool
      language: CSharp
      name:
        CSharp: SelectedTool
        VB: SelectedTool
      nameWithType:
        CSharp: FarmManager.SelectedTool
        VB: FarmManager.SelectedTool
      qualifiedName:
        CSharp: FarmManager.SelectedTool
        VB: FarmManager.SelectedTool
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SelectedTool
        path: ''
        startLine: 1997
      syntax:
        content:
          CSharp: public static string SelectedTool { get; set; }
          VB: Public Shared Property SelectedTool As String
        parameters: []
        return:
          type: System.String
      overload: Global.FarmManager.SelectedTool*
    - id: Global.FarmManager.SelectedCells
      commentId: F:Global.FarmManager.SelectedCells
      language: CSharp
      name:
        CSharp: SelectedCells
        VB: SelectedCells
      nameWithType:
        CSharp: FarmManager.SelectedCells
        VB: FarmManager.SelectedCells
      qualifiedName:
        CSharp: FarmManager.SelectedCells
        VB: FarmManager.SelectedCells
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SelectedCells
        path: ''
        startLine: 1999
      syntax:
        content:
          CSharp: public static List<FarmPlotCell> SelectedCells
          VB: Public Shared SelectedCells As List(Of FarmPlotCell)
        return:
          type: System.Collections.Generic.List{FarmPlotCell}
    - id: Global.FarmManager.IrrigationLabour
      commentId: F:Global.FarmManager.IrrigationLabour
      language: CSharp
      name:
        CSharp: IrrigationLabour
        VB: IrrigationLabour
      nameWithType:
        CSharp: FarmManager.IrrigationLabour
        VB: FarmManager.IrrigationLabour
      qualifiedName:
        CSharp: FarmManager.IrrigationLabour
        VB: FarmManager.IrrigationLabour
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: IrrigationLabour
        path: ''
        startLine: 2001
      syntax:
        content:
          CSharp: public const int IrrigationLabour = 2
          VB: Public Const IrrigationLabour As Integer = 2
        return:
          type: System.Int32
    - id: Global.FarmManager.HarvestLabour
      commentId: F:Global.FarmManager.HarvestLabour
      language: CSharp
      name:
        CSharp: HarvestLabour
        VB: HarvestLabour
      nameWithType:
        CSharp: FarmManager.HarvestLabour
        VB: FarmManager.HarvestLabour
      qualifiedName:
        CSharp: FarmManager.HarvestLabour
        VB: FarmManager.HarvestLabour
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HarvestLabour
        path: ''
        startLine: 2002
      syntax:
        content:
          CSharp: public const int HarvestLabour = 1
          VB: Public Const HarvestLabour As Integer = 1
        return:
          type: System.Int32
    - id: Global.FarmManager.LabourPoints
      commentId: P:Global.FarmManager.LabourPoints
      language: CSharp
      name:
        CSharp: LabourPoints
        VB: LabourPoints
      nameWithType:
        CSharp: FarmManager.LabourPoints
        VB: FarmManager.LabourPoints
      qualifiedName:
        CSharp: FarmManager.LabourPoints
        VB: FarmManager.LabourPoints
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LabourPoints
        path: ''
        startLine: 2004
      syntax:
        content:
          CSharp: public static int LabourPoints { get; set; }
          VB: Public Shared Property LabourPoints As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Global.FarmManager.LabourPoints*
    - id: Global.FarmManager.HarvestSelectedCells
      commentId: M:Global.FarmManager.HarvestSelectedCells
      language: CSharp
      name:
        CSharp: HarvestSelectedCells()
        VB: HarvestSelectedCells()
      nameWithType:
        CSharp: FarmManager.HarvestSelectedCells()
        VB: FarmManager.HarvestSelectedCells()
      qualifiedName:
        CSharp: FarmManager.HarvestSelectedCells()
        VB: FarmManager.HarvestSelectedCells()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HarvestSelectedCells
        path: ''
        startLine: 2017
      syntax:
        content:
          CSharp: public static void HarvestSelectedCells()
          VB: Public Shared Sub HarvestSelectedCells()
      overload: Global.FarmManager.HarvestSelectedCells*
    - id: Global.FarmManager.IrrigateSelectedCells
      commentId: M:Global.FarmManager.IrrigateSelectedCells
      language: CSharp
      name:
        CSharp: IrrigateSelectedCells()
        VB: IrrigateSelectedCells()
      nameWithType:
        CSharp: FarmManager.IrrigateSelectedCells()
        VB: FarmManager.IrrigateSelectedCells()
      qualifiedName:
        CSharp: FarmManager.IrrigateSelectedCells()
        VB: FarmManager.IrrigateSelectedCells()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: IrrigateSelectedCells
        path: ''
        startLine: 2047
      syntax:
        content:
          CSharp: public static void IrrigateSelectedCells()
          VB: Public Shared Sub IrrigateSelectedCells()
      overload: Global.FarmManager.IrrigateSelectedCells*
    - id: Global.FarmManager.ClearSelectedCells
      commentId: M:Global.FarmManager.ClearSelectedCells
      language: CSharp
      name:
        CSharp: ClearSelectedCells()
        VB: ClearSelectedCells()
      nameWithType:
        CSharp: FarmManager.ClearSelectedCells()
        VB: FarmManager.ClearSelectedCells()
      qualifiedName:
        CSharp: FarmManager.ClearSelectedCells()
        VB: FarmManager.ClearSelectedCells()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ClearSelectedCells
        path: ''
        startLine: 2057
      syntax:
        content:
          CSharp: public static void ClearSelectedCells()
          VB: Public Shared Sub ClearSelectedCells()
      overload: Global.FarmManager.ClearSelectedCells*
  - id: Global.FarmPlotCell
    commentId: T:Global.FarmPlotCell
    language: CSharp
    name:
      CSharp: FarmPlotCell
      VB: FarmPlotCell
    nameWithType:
      CSharp: FarmPlotCell
      VB: FarmPlotCell
    qualifiedName:
      CSharp: FarmPlotCell
      VB: FarmPlotCell
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FarmPlotCell
      path: ''
      startLine: 2072
    syntax:
      content:
        CSharp: 'public class FarmPlotCell : MonoBehaviour'
        VB: Public Class FarmPlotCell Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.FarmPlotCell.Plot
      commentId: P:Global.FarmPlotCell.Plot
      language: CSharp
      name:
        CSharp: Plot
        VB: Plot
      nameWithType:
        CSharp: FarmPlotCell.Plot
        VB: FarmPlotCell.Plot
      qualifiedName:
        CSharp: FarmPlotCell.Plot
        VB: FarmPlotCell.Plot
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Plot
        path: ''
        startLine: 2086
      syntax:
        content:
          CSharp: public FarmPlot Plot { get; set; }
          VB: Public Property Plot As FarmPlot
        parameters: []
        return:
          type: Global.FarmPlot
      overload: Global.FarmPlotCell.Plot*
    - id: Global.FarmPlotCell.RefreshVisuals
      commentId: M:Global.FarmPlotCell.RefreshVisuals
      language: CSharp
      name:
        CSharp: RefreshVisuals()
        VB: RefreshVisuals()
      nameWithType:
        CSharp: FarmPlotCell.RefreshVisuals()
        VB: FarmPlotCell.RefreshVisuals()
      qualifiedName:
        CSharp: FarmPlotCell.RefreshVisuals()
        VB: FarmPlotCell.RefreshVisuals()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RefreshVisuals
        path: ''
        startLine: 2108
      syntax:
        content:
          CSharp: public void RefreshVisuals()
          VB: Public Sub RefreshVisuals()
      overload: Global.FarmPlotCell.RefreshVisuals*
    - id: Global.FarmPlotCell.RefreshStatus
      commentId: M:Global.FarmPlotCell.RefreshStatus
      language: CSharp
      name:
        CSharp: RefreshStatus()
        VB: RefreshStatus()
      nameWithType:
        CSharp: FarmPlotCell.RefreshStatus()
        VB: FarmPlotCell.RefreshStatus()
      qualifiedName:
        CSharp: FarmPlotCell.RefreshStatus()
        VB: FarmPlotCell.RefreshStatus()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RefreshStatus
        path: ''
        startLine: 2134
      syntax:
        content:
          CSharp: public void RefreshStatus()
          VB: Public Sub RefreshStatus()
      overload: Global.FarmPlotCell.RefreshStatus*
  - id: Global.FarmPlotCellPopulator
    commentId: T:Global.FarmPlotCellPopulator
    language: CSharp
    name:
      CSharp: FarmPlotCellPopulator
      VB: FarmPlotCellPopulator
    nameWithType:
      CSharp: FarmPlotCellPopulator
      VB: FarmPlotCellPopulator
    qualifiedName:
      CSharp: FarmPlotCellPopulator
      VB: FarmPlotCellPopulator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FarmPlotCellPopulator
      path: ''
      startLine: 2243
    syntax:
      content:
        CSharp: 'public class FarmPlotCellPopulator : MonoBehaviour'
        VB: Public Class FarmPlotCellPopulator Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.GameStateInfoDisplayer
    commentId: T:Global.GameStateInfoDisplayer
    language: CSharp
    name:
      CSharp: GameStateInfoDisplayer
      VB: GameStateInfoDisplayer
    nameWithType:
      CSharp: GameStateInfoDisplayer
      VB: GameStateInfoDisplayer
    qualifiedName:
      CSharp: GameStateInfoDisplayer
      VB: GameStateInfoDisplayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: GameStateInfoDisplayer
      path: ''
      startLine: 2276
    syntax:
      content:
        CSharp: 'public class GameStateInfoDisplayer : MonoBehaviour'
        VB: Public Class GameStateInfoDisplayer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.GiveOxButton
    commentId: T:Global.GiveOxButton
    language: CSharp
    name:
      CSharp: GiveOxButton
      VB: GiveOxButton
    nameWithType:
      CSharp: GiveOxButton
      VB: GiveOxButton
    qualifiedName:
      CSharp: GiveOxButton
      VB: GiveOxButton
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: GiveOxButton
      path: ''
      startLine: 2312
    syntax:
      content:
        CSharp: 'public class GiveOxButton : MonoBehaviour'
        VB: Public Class GiveOxButton Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.GiveOxButton.Adult
      commentId: P:Global.GiveOxButton.Adult
      language: CSharp
      name:
        CSharp: Adult
        VB: Adult
      nameWithType:
        CSharp: GiveOxButton.Adult
        VB: GiveOxButton.Adult
      qualifiedName:
        CSharp: GiveOxButton.Adult
        VB: GiveOxButton.Adult
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Adult
        path: ''
        startLine: 2314
      syntax:
        content:
          CSharp: public Adult Adult { get; set; }
          VB: Public Property Adult As Adult
        parameters: []
        return:
          type: Global.Adult
      overload: Global.GiveOxButton.Adult*
  - id: Global.HouseholdOption
    commentId: T:Global.HouseholdOption
    language: CSharp
    name:
      CSharp: HouseholdOption
      VB: HouseholdOption
    nameWithType:
      CSharp: HouseholdOption
      VB: HouseholdOption
    qualifiedName:
      CSharp: HouseholdOption
      VB: HouseholdOption
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: HouseholdOption
      path: ''
      startLine: 2374
    syntax:
      content:
        CSharp: 'public class HouseholdOption : MonoBehaviour'
        VB: Public Class HouseholdOption Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.HouseholdOption.Household
      commentId: P:Global.HouseholdOption.Household
      language: CSharp
      name:
        CSharp: Household
        VB: Household
      nameWithType:
        CSharp: HouseholdOption.Household
        VB: HouseholdOption.Household
      qualifiedName:
        CSharp: HouseholdOption.Household
        VB: HouseholdOption.Household
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Household
        path: ''
        startLine: 2376
      syntax:
        content:
          CSharp: public Household Household { get; set; }
          VB: Public Property Household As Household
        parameters: []
        return:
          type: Global.Household
      overload: Global.HouseholdOption.Household*
  - id: Global.HouseholdSelectionPopulator
    commentId: T:Global.HouseholdSelectionPopulator
    language: CSharp
    name:
      CSharp: HouseholdSelectionPopulator
      VB: HouseholdSelectionPopulator
    nameWithType:
      CSharp: HouseholdSelectionPopulator
      VB: HouseholdSelectionPopulator
    qualifiedName:
      CSharp: HouseholdSelectionPopulator
      VB: HouseholdSelectionPopulator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: HouseholdSelectionPopulator
      path: ''
      startLine: 2398
    syntax:
      content:
        CSharp: 'public class HouseholdSelectionPopulator : MonoBehaviour'
        VB: Public Class HouseholdSelectionPopulator Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.LabourDisplayer
    commentId: T:Global.LabourDisplayer
    language: CSharp
    name:
      CSharp: LabourDisplayer
      VB: LabourDisplayer
    nameWithType:
      CSharp: LabourDisplayer
      VB: LabourDisplayer
    qualifiedName:
      CSharp: LabourDisplayer
      VB: LabourDisplayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: LabourDisplayer
      path: ''
      startLine: 2436
    syntax:
      content:
        CSharp: 'public class LabourDisplayer : MonoBehaviour'
        VB: Public Class LabourDisplayer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.LoadSceneOnClick
    commentId: T:Global.LoadSceneOnClick
    language: CSharp
    name:
      CSharp: LoadSceneOnClick
      VB: LoadSceneOnClick
    nameWithType:
      CSharp: LoadSceneOnClick
      VB: LoadSceneOnClick
    qualifiedName:
      CSharp: LoadSceneOnClick
      VB: LoadSceneOnClick
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: LoadSceneOnClick
      path: ''
      startLine: 2453
    syntax:
      content:
        CSharp: 'public class LoadSceneOnClick : MonoBehaviour'
        VB: Public Class LoadSceneOnClick Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.LoadSceneOnClick.OnClick
      commentId: M:Global.LoadSceneOnClick.OnClick
      language: CSharp
      name:
        CSharp: OnClick()
        VB: OnClick()
      nameWithType:
        CSharp: LoadSceneOnClick.OnClick()
        VB: LoadSceneOnClick.OnClick()
      qualifiedName:
        CSharp: LoadSceneOnClick.OnClick()
        VB: LoadSceneOnClick.OnClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnClick
        path: ''
        startLine: 2466
      syntax:
        content:
          CSharp: public void OnClick()
          VB: Public Sub OnClick()
      overload: Global.LoadSceneOnClick.OnClick*
  - id: Global.MaxIrrigationDisplayer
    commentId: T:Global.MaxIrrigationDisplayer
    language: CSharp
    name:
      CSharp: MaxIrrigationDisplayer
      VB: MaxIrrigationDisplayer
    nameWithType:
      CSharp: MaxIrrigationDisplayer
      VB: MaxIrrigationDisplayer
    qualifiedName:
      CSharp: MaxIrrigationDisplayer
      VB: MaxIrrigationDisplayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MaxIrrigationDisplayer
      path: ''
      startLine: 2477
    syntax:
      content:
        CSharp: 'public class MaxIrrigationDisplayer : MonoBehaviour'
        VB: Public Class MaxIrrigationDisplayer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.NumFamilyMembersDisplayer
    commentId: T:Global.NumFamilyMembersDisplayer
    language: CSharp
    name:
      CSharp: NumFamilyMembersDisplayer
      VB: NumFamilyMembersDisplayer
    nameWithType:
      CSharp: NumFamilyMembersDisplayer
      VB: NumFamilyMembersDisplayer
    qualifiedName:
      CSharp: NumFamilyMembersDisplayer
      VB: NumFamilyMembersDisplayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: NumFamilyMembersDisplayer
      path: ''
      startLine: 2495
    syntax:
      content:
        CSharp: 'public class NumFamilyMembersDisplayer : MonoBehaviour'
        VB: Public Class NumFamilyMembersDisplayer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.PlayerFarmSizeDisplayer
    commentId: T:Global.PlayerFarmSizeDisplayer
    language: CSharp
    name:
      CSharp: PlayerFarmSizeDisplayer
      VB: PlayerFarmSizeDisplayer
    nameWithType:
      CSharp: PlayerFarmSizeDisplayer
      VB: PlayerFarmSizeDisplayer
    qualifiedName:
      CSharp: PlayerFarmSizeDisplayer
      VB: PlayerFarmSizeDisplayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayerFarmSizeDisplayer
      path: ''
      startLine: 2516
    syntax:
      content:
        CSharp: 'public class PlayerFarmSizeDisplayer : MonoBehaviour'
        VB: Public Class PlayerFarmSizeDisplayer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.PlayerMoneyDisplayer
    commentId: T:Global.PlayerMoneyDisplayer
    language: CSharp
    name:
      CSharp: PlayerMoneyDisplayer
      VB: PlayerMoneyDisplayer
    nameWithType:
      CSharp: PlayerMoneyDisplayer
      VB: PlayerMoneyDisplayer
    qualifiedName:
      CSharp: PlayerMoneyDisplayer
      VB: PlayerMoneyDisplayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayerMoneyDisplayer
      path: ''
      startLine: 2533
    syntax:
      content:
        CSharp: 'public class PlayerMoneyDisplayer : MonoBehaviour'
        VB: Public Class PlayerMoneyDisplayer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.PlayerWheatDisplayer
    commentId: T:Global.PlayerWheatDisplayer
    language: CSharp
    name:
      CSharp: PlayerWheatDisplayer
      VB: PlayerWheatDisplayer
    nameWithType:
      CSharp: PlayerWheatDisplayer
      VB: PlayerWheatDisplayer
    qualifiedName:
      CSharp: PlayerWheatDisplayer
      VB: PlayerWheatDisplayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayerWheatDisplayer
      path: ''
      startLine: 2559
    syntax:
      content:
        CSharp: 'public class PlayerWheatDisplayer : MonoBehaviour'
        VB: Public Class PlayerWheatDisplayer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.PopupManager
    commentId: T:Global.PopupManager
    language: CSharp
    name:
      CSharp: PopupManager
      VB: PopupManager
    nameWithType:
      CSharp: PopupManager
      VB: PopupManager
    qualifiedName:
      CSharp: PopupManager
      VB: PopupManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PopupManager
      path: ''
      startLine: 2586
    syntax:
      content:
        CSharp: 'public class PopupManager : MonoBehaviour'
        VB: Public Class PopupManager Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.PopupManager.QueuePopup(System.String,System.String,System.String,System.Boolean)
      commentId: M:Global.PopupManager.QueuePopup(System.String,System.String,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: QueuePopup(string, string, string, bool)
        VB: QueuePopup(String, String, String, Boolean)
      nameWithType:
        CSharp: PopupManager.QueuePopup(string, string, string, bool)
        VB: PopupManager.QueuePopup(String, String, String, Boolean)
      qualifiedName:
        CSharp: PopupManager.QueuePopup(string, string, string, bool)
        VB: PopupManager.QueuePopup(String, String, String, Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: QueuePopup
        path: ''
        startLine: 2634
      syntax:
        content:
          CSharp: public static void QueuePopup(string title, string description, string closeText, bool immediate = false)
          VB: Public Shared Sub QueuePopup(title As String, description As String, closeText As String, immediate As Boolean = False)
        parameters:
        - id: title
          type: System.String
        - id: description
          type: System.String
        - id: closeText
          type: System.String
        - id: immediate
          type: System.Boolean
      overload: Global.PopupManager.QueuePopup*
  - id: Global.ProductAmountDisplayer
    commentId: T:Global.ProductAmountDisplayer
    language: CSharp
    name:
      CSharp: ProductAmountDisplayer
      VB: ProductAmountDisplayer
    nameWithType:
      CSharp: ProductAmountDisplayer
      VB: ProductAmountDisplayer
    qualifiedName:
      CSharp: ProductAmountDisplayer
      VB: ProductAmountDisplayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ProductAmountDisplayer
      path: ''
      startLine: 2665
    syntax:
      content:
        CSharp: 'public class ProductAmountDisplayer : MonoBehaviour'
        VB: Public Class ProductAmountDisplayer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.ProductDescriptionDisplayer
    commentId: T:Global.ProductDescriptionDisplayer
    language: CSharp
    name:
      CSharp: ProductDescriptionDisplayer
      VB: ProductDescriptionDisplayer
    nameWithType:
      CSharp: ProductDescriptionDisplayer
      VB: ProductDescriptionDisplayer
    qualifiedName:
      CSharp: ProductDescriptionDisplayer
      VB: ProductDescriptionDisplayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ProductDescriptionDisplayer
      path: ''
      startLine: 2684
    syntax:
      content:
        CSharp: 'public class ProductDescriptionDisplayer : MonoBehaviour'
        VB: Public Class ProductDescriptionDisplayer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.ProductPriceDisplayer
    commentId: T:Global.ProductPriceDisplayer
    language: CSharp
    name:
      CSharp: ProductPriceDisplayer
      VB: ProductPriceDisplayer
    nameWithType:
      CSharp: ProductPriceDisplayer
      VB: ProductPriceDisplayer
    qualifiedName:
      CSharp: ProductPriceDisplayer
      VB: ProductPriceDisplayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ProductPriceDisplayer
      path: ''
      startLine: 2703
    syntax:
      content:
        CSharp: 'public class ProductPriceDisplayer : MonoBehaviour'
        VB: Public Class ProductPriceDisplayer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.SceneUtils
    commentId: T:Global.SceneUtils
    language: CSharp
    name:
      CSharp: SceneUtils
      VB: SceneUtils
    nameWithType:
      CSharp: SceneUtils
      VB: SceneUtils
    qualifiedName:
      CSharp: SceneUtils
      VB: SceneUtils
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SceneUtils
      path: ''
      startLine: 2721
    syntax:
      content:
        CSharp: 'public class SceneUtils : MonoBehaviour'
        VB: Public Class SceneUtils Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.SceneUtils.LoadScene(System.String)
      commentId: M:Global.SceneUtils.LoadScene(System.String)
      language: CSharp
      name:
        CSharp: LoadScene(string)
        VB: LoadScene(String)
      nameWithType:
        CSharp: SceneUtils.LoadScene(string)
        VB: SceneUtils.LoadScene(String)
      qualifiedName:
        CSharp: SceneUtils.LoadScene(string)
        VB: SceneUtils.LoadScene(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LoadScene
        path: ''
        startLine: 2724
      syntax:
        content:
          CSharp: public static void LoadScene(string sceneName)
          VB: Public Shared Sub LoadScene(sceneName As String)
        parameters:
        - id: sceneName
          type: System.String
      overload: Global.SceneUtils.LoadScene*
  - id: Global.SellButton
    commentId: T:Global.SellButton
    language: CSharp
    name:
      CSharp: SellButton
      VB: SellButton
    nameWithType:
      CSharp: SellButton
      VB: SellButton
    qualifiedName:
      CSharp: SellButton
      VB: SellButton
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SellButton
      path: ''
      startLine: 2734
    syntax:
      content:
        CSharp: 'public class SellButton : MonoBehaviour'
        VB: Public Class SellButton Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.SellButton.OnClick
      commentId: M:Global.SellButton.OnClick
      language: CSharp
      name:
        CSharp: OnClick()
        VB: OnClick()
      nameWithType:
        CSharp: SellButton.OnClick()
        VB: SellButton.OnClick()
      qualifiedName:
        CSharp: SellButton.OnClick()
        VB: SellButton.OnClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnClick
        path: ''
        startLine: 2757
      syntax:
        content:
          CSharp: public void OnClick()
          VB: Public Sub OnClick()
      overload: Global.SellButton.OnClick*
  - id: Global.ShowFamilyMembers
    commentId: T:Global.ShowFamilyMembers
    language: CSharp
    name:
      CSharp: ShowFamilyMembers
      VB: ShowFamilyMembers
    nameWithType:
      CSharp: ShowFamilyMembers
      VB: ShowFamilyMembers
    qualifiedName:
      CSharp: ShowFamilyMembers
      VB: ShowFamilyMembers
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ShowFamilyMembers
      path: ''
      startLine: 2768
    syntax:
      content:
        CSharp: 'public class ShowFamilyMembers : MonoBehaviour'
        VB: Public Class ShowFamilyMembers Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.ShowPopupOnClick
    commentId: T:Global.ShowPopupOnClick
    language: CSharp
    name:
      CSharp: ShowPopupOnClick
      VB: ShowPopupOnClick
    nameWithType:
      CSharp: ShowPopupOnClick
      VB: ShowPopupOnClick
    qualifiedName:
      CSharp: ShowPopupOnClick
      VB: ShowPopupOnClick
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ShowPopupOnClick
      path: ''
      startLine: 2792
    syntax:
      content:
        CSharp: 'public class ShowPopupOnClick : MonoBehaviour'
        VB: Public Class ShowPopupOnClick Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.ShowWheatPrice
    commentId: T:Global.ShowWheatPrice
    language: CSharp
    name:
      CSharp: ShowWheatPrice
      VB: ShowWheatPrice
    nameWithType:
      CSharp: ShowWheatPrice
      VB: ShowWheatPrice
    qualifiedName:
      CSharp: ShowWheatPrice
      VB: ShowWheatPrice
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ShowWheatPrice
      path: ''
      startLine: 2813
    syntax:
      content:
        CSharp: 'public class ShowWheatPrice : MonoBehaviour'
        VB: Public Class ShowWheatPrice Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.ShowWheatPrice.wheatPriceText
      commentId: F:Global.ShowWheatPrice.wheatPriceText
      language: CSharp
      name:
        CSharp: wheatPriceText
        VB: wheatPriceText
      nameWithType:
        CSharp: ShowWheatPrice.wheatPriceText
        VB: ShowWheatPrice.wheatPriceText
      qualifiedName:
        CSharp: ShowWheatPrice.wheatPriceText
        VB: ShowWheatPrice.wheatPriceText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: wheatPriceText
        path: ''
        startLine: 2815
      syntax:
        content:
          CSharp: public TextMeshProUGUI wheatPriceText
          VB: Public wheatPriceText As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
  - id: Global.ShowYieldTable
    commentId: T:Global.ShowYieldTable
    language: CSharp
    name:
      CSharp: ShowYieldTable
      VB: ShowYieldTable
    nameWithType:
      CSharp: ShowYieldTable
      VB: ShowYieldTable
    qualifiedName:
      CSharp: ShowYieldTable
      VB: ShowYieldTable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ShowYieldTable
      path: ''
      startLine: 2828
    syntax:
      content:
        CSharp: 'public class ShowYieldTable : MonoBehaviour'
        VB: Public Class ShowYieldTable Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.ShowYieldTable.yieldTable
      commentId: F:Global.ShowYieldTable.yieldTable
      language: CSharp
      name:
        CSharp: yieldTable
        VB: yieldTable
      nameWithType:
        CSharp: ShowYieldTable.yieldTable
        VB: ShowYieldTable.yieldTable
      qualifiedName:
        CSharp: ShowYieldTable.yieldTable
        VB: ShowYieldTable.yieldTable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: yieldTable
        path: ''
        startLine: 2830
      syntax:
        content:
          CSharp: public Image yieldTable
          VB: Public yieldTable As Image
        return:
          type: Global.Image
    - id: Global.ShowYieldTable.showYieldTableButton
      commentId: F:Global.ShowYieldTable.showYieldTableButton
      language: CSharp
      name:
        CSharp: showYieldTableButton
        VB: showYieldTableButton
      nameWithType:
        CSharp: ShowYieldTable.showYieldTableButton
        VB: ShowYieldTable.showYieldTableButton
      qualifiedName:
        CSharp: ShowYieldTable.showYieldTableButton
        VB: ShowYieldTable.showYieldTableButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: showYieldTableButton
        path: ''
        startLine: 2831
      syntax:
        content:
          CSharp: public Button showYieldTableButton
          VB: Public showYieldTableButton As Button
        return:
          type: Global.Button
    - id: Global.ShowYieldTable.closeYieldTableButton
      commentId: F:Global.ShowYieldTable.closeYieldTableButton
      language: CSharp
      name:
        CSharp: closeYieldTableButton
        VB: closeYieldTableButton
      nameWithType:
        CSharp: ShowYieldTable.closeYieldTableButton
        VB: ShowYieldTable.closeYieldTableButton
      qualifiedName:
        CSharp: ShowYieldTable.closeYieldTableButton
        VB: ShowYieldTable.closeYieldTableButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: closeYieldTableButton
        path: ''
        startLine: 2832
      syntax:
        content:
          CSharp: public Button closeYieldTableButton
          VB: Public closeYieldTableButton As Button
        return:
          type: Global.Button
  - id: Global.TabToggler
    commentId: T:Global.TabToggler
    language: CSharp
    name:
      CSharp: TabToggler
      VB: TabToggler
    nameWithType:
      CSharp: TabToggler
      VB: TabToggler
    qualifiedName:
      CSharp: TabToggler
      VB: TabToggler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TabToggler
      path: ''
      startLine: 2859
    syntax:
      content:
        CSharp: 'public class TabToggler : MonoBehaviour'
        VB: Public Class TabToggler Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: Global.TabToggler.Toggle
      commentId: M:Global.TabToggler.Toggle
      language: CSharp
      name:
        CSharp: Toggle()
        VB: Toggle()
      nameWithType:
        CSharp: TabToggler.Toggle()
        VB: TabToggler.Toggle()
      qualifiedName:
        CSharp: TabToggler.Toggle()
        VB: TabToggler.Toggle()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Toggle
        path: ''
        startLine: 2874
      syntax:
        content:
          CSharp: public void Toggle()
          VB: Public Sub Toggle()
      overload: Global.TabToggler.Toggle*
  - id: Global.ToggleIfHasProduct
    commentId: T:Global.ToggleIfHasProduct
    language: CSharp
    name:
      CSharp: ToggleIfHasProduct
      VB: ToggleIfHasProduct
    nameWithType:
      CSharp: ToggleIfHasProduct
      VB: ToggleIfHasProduct
    qualifiedName:
      CSharp: ToggleIfHasProduct
      VB: ToggleIfHasProduct
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ToggleIfHasProduct
      path: ''
      startLine: 2895
    syntax:
      content:
        CSharp: 'public class ToggleIfHasProduct : MonoBehaviour'
        VB: Public Class ToggleIfHasProduct Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.ToolToggle
    commentId: T:Global.ToolToggle
    language: CSharp
    name:
      CSharp: ToolToggle
      VB: ToolToggle
    nameWithType:
      CSharp: ToolToggle
      VB: ToolToggle
    qualifiedName:
      CSharp: ToolToggle
      VB: ToolToggle
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ToolToggle
      path: ''
      startLine: 2921
    syntax:
      content:
        CSharp: 'public class ToolToggle : MonoBehaviour'
        VB: Public Class ToolToggle Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: Global.UIDocumentLoadSceneButton
    commentId: T:Global.UIDocumentLoadSceneButton
    language: CSharp
    name:
      CSharp: UIDocumentLoadSceneButton
      VB: UIDocumentLoadSceneButton
    nameWithType:
      CSharp: UIDocumentLoadSceneButton
      VB: UIDocumentLoadSceneButton
    qualifiedName:
      CSharp: UIDocumentLoadSceneButton
      VB: UIDocumentLoadSceneButton
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: UIDocumentLoadSceneButton
      path: ''
      startLine: 2947
    syntax:
      content:
        CSharp: 'public class UIDocumentLoadSceneButton : MonoBehaviour'
        VB: Public Class UIDocumentLoadSceneButton Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
- id: Backend
  commentId: N:Backend
  language: CSharp
  name:
    CSharp: Backend
    VB: Backend
  nameWithType:
    CSharp: Backend
    VB: Backend
  qualifiedName:
    CSharp: Backend
    VB: Backend
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: Backend.Adult
    commentId: T:Backend.Adult
    language: CSharp
    name:
      CSharp: Adult
      VB: Adult
    nameWithType:
      CSharp: Adult
      VB: Adult
    qualifiedName:
      CSharp: Backend.Adult
      VB: Backend.Adult
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: Adult
      path: ''
      startLine: 381
    summary: "\nRepresents an adult worker in a family.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Adult : FamilyMember'
        VB: Public Class Adult Inherits FamilyMember
    inheritance:
    - System.Object
    - Backend.FamilyMember
    inheritedMembers:
    - Backend.FamilyMember.FirstName
    - Backend.FamilyMember.LastName
    - Backend.FamilyMember.s_FirstNames
    - Backend.FamilyMember.GetRandomFirstName
    items:
    - id: Backend.Adult.Consumption
      commentId: F:Backend.Adult.Consumption
      language: CSharp
      name:
        CSharp: Consumption
        VB: Consumption
      nameWithType:
        CSharp: Adult.Consumption
        VB: Adult.Consumption
      qualifiedName:
        CSharp: Backend.Adult.Consumption
        VB: Backend.Adult.Consumption
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Consumption
        path: ''
        startLine: 386
      summary: "\nWheat consumption per year.\n"
      example: []
      syntax:
        content:
          CSharp: public const int Consumption = 10
          VB: Public Const Consumption As Integer = 10
        return:
          type: System.Int32
    - id: Backend.Adult.BaseLabourPoints
      commentId: F:Backend.Adult.BaseLabourPoints
      language: CSharp
      name:
        CSharp: BaseLabourPoints
        VB: BaseLabourPoints
      nameWithType:
        CSharp: Adult.BaseLabourPoints
        VB: Adult.BaseLabourPoints
      qualifiedName:
        CSharp: Backend.Adult.BaseLabourPoints
        VB: Backend.Adult.BaseLabourPoints
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: BaseLabourPoints
        path: ''
        startLine: 391
      summary: "\nBase labour points contributed.\n"
      example: []
      syntax:
        content:
          CSharp: public const int BaseLabourPoints = 2
          VB: Public Const BaseLabourPoints As Integer = 2
        return:
          type: System.Int32
    - id: Backend.Adult.HasOx
      commentId: P:Backend.Adult.HasOx
      language: CSharp
      name:
        CSharp: HasOx
        VB: HasOx
      nameWithType:
        CSharp: Adult.HasOx
        VB: Adult.HasOx
      qualifiedName:
        CSharp: Backend.Adult.HasOx
        VB: Backend.Adult.HasOx
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: HasOx
        path: ''
        startLine: 396
      summary: "\nWhether the adult has an ox.\n"
      example: []
      syntax:
        content:
          CSharp: public bool HasOx { get; }
          VB: Public Property HasOx As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Backend.Adult.HasOx*
    - id: Backend.Adult.#ctor(System.String,System.String)
      commentId: M:Backend.Adult.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: Adult(string, string)
        VB: New(String, String)
      nameWithType:
        CSharp: Adult.Adult(string, string)
        VB: Adult.New(String, String)
      qualifiedName:
        CSharp: Backend.Adult.Adult(string, string)
        VB: Backend.Adult.New(String, String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: .ctor
        path: ''
        startLine: 403
      summary: "\nCreates an adult.\n"
      example: []
      syntax:
        content:
          CSharp: public Adult(string First, string Last)
          VB: Public Sub New(First As String, Last As String)
        parameters:
        - id: First
          type: System.String
          description: First name.
        - id: Last
          type: System.String
          description: Last name.
      overload: Backend.Adult.#ctor*
    - id: Backend.Adult.AssignOx(System.Boolean)
      commentId: M:Backend.Adult.AssignOx(System.Boolean)
      language: CSharp
      name:
        CSharp: AssignOx(bool)
        VB: AssignOx(Boolean)
      nameWithType:
        CSharp: Adult.AssignOx(bool)
        VB: Adult.AssignOx(Boolean)
      qualifiedName:
        CSharp: Backend.Adult.AssignOx(bool)
        VB: Backend.Adult.AssignOx(Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: AssignOx
        path: ''
        startLine: 414
      summary: "\nAssign or unassign an ox to this adult.\n"
      example: []
      syntax:
        content:
          CSharp: public void AssignOx(bool assigned)
          VB: Public Sub AssignOx(assigned As Boolean)
        parameters:
        - id: assigned
          type: System.Boolean
          description: Whether to assign or unassign.
      overload: Backend.Adult.AssignOx*
    - id: Backend.Adult.GetLabourPoints
      commentId: M:Backend.Adult.GetLabourPoints
      language: CSharp
      name:
        CSharp: GetLabourPoints()
        VB: GetLabourPoints()
      nameWithType:
        CSharp: Adult.GetLabourPoints()
        VB: Adult.GetLabourPoints()
      qualifiedName:
        CSharp: Backend.Adult.GetLabourPoints()
        VB: Backend.Adult.GetLabourPoints()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: GetLabourPoints
        path: ''
        startLine: 423
      summary: "\nCalculate how many labour points this adult contributes. Doubled if adult has an ox.\n"
      example: []
      syntax:
        content:
          CSharp: public int GetLabourPoints()
          VB: Public Function GetLabourPoints() As Integer
        return:
          type: System.Int32
          description: Labour points contributed.
      overload: Backend.Adult.GetLabourPoints*
  - id: Backend.Child
    commentId: T:Backend.Child
    language: CSharp
    name:
      CSharp: Child
      VB: Child
    nameWithType:
      CSharp: Child
      VB: Child
    qualifiedName:
      CSharp: Backend.Child
      VB: Backend.Child
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: Child
      path: ''
      startLine: 439
    summary: "\nRepresents a child in a family.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Child : FamilyMember'
        VB: Public Class Child Inherits FamilyMember
    inheritance:
    - System.Object
    - Backend.FamilyMember
    inheritedMembers:
    - Backend.FamilyMember.FirstName
    - Backend.FamilyMember.LastName
    - Backend.FamilyMember.s_FirstNames
    - Backend.FamilyMember.GetRandomFirstName
    items:
    - id: Backend.Child.Consumption
      commentId: F:Backend.Child.Consumption
      language: CSharp
      name:
        CSharp: Consumption
        VB: Consumption
      nameWithType:
        CSharp: Child.Consumption
        VB: Child.Consumption
      qualifiedName:
        CSharp: Backend.Child.Consumption
        VB: Backend.Child.Consumption
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Consumption
        path: ''
        startLine: 444
      summary: "\nAnnual wheat consumption of a child.\n"
      example: []
      syntax:
        content:
          CSharp: public const int Consumption = 5
          VB: Public Const Consumption As Integer = 5
        return:
          type: System.Int32
    - id: Backend.Child.Age
      commentId: P:Backend.Child.Age
      language: CSharp
      name:
        CSharp: Age
        VB: Age
      nameWithType:
        CSharp: Child.Age
        VB: Child.Age
      qualifiedName:
        CSharp: Backend.Child.Age
        VB: Backend.Child.Age
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Age
        path: ''
        startLine: 449
      summary: "\nChild&apos;s age.\n"
      example: []
      syntax:
        content:
          CSharp: public int Age { get; }
          VB: Public Property Age As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Backend.Child.Age*
    - id: Backend.Child.#ctor(System.String,System.String,System.Int32)
      commentId: M:Backend.Child.#ctor(System.String,System.String,System.Int32)
      language: CSharp
      name:
        CSharp: Child(string, string, int)
        VB: New(String, String, Integer)
      nameWithType:
        CSharp: Child.Child(string, string, int)
        VB: Child.New(String, String, Integer)
      qualifiedName:
        CSharp: Backend.Child.Child(string, string, int)
        VB: Backend.Child.New(String, String, Integer)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: .ctor
        path: ''
        startLine: 458
      summary: "\nCreate a child.\n"
      example: []
      syntax:
        content:
          CSharp: public Child(string FirstName, string LastName, int Age)
          VB: Public Sub New(FirstName As String, LastName As String, Age As Integer)
        parameters:
        - id: FirstName
          type: System.String
          description: First name.
        - id: LastName
          type: System.String
          description: Last name.
        - id: Age
          type: System.Int32
          description: Age.
      overload: Backend.Child.#ctor*
    - id: Backend.Child.ToAdult
      commentId: M:Backend.Child.ToAdult
      language: CSharp
      name:
        CSharp: ToAdult()
        VB: ToAdult()
      nameWithType:
        CSharp: Child.ToAdult()
        VB: Child.ToAdult()
      qualifiedName:
        CSharp: Backend.Child.ToAdult()
        VB: Backend.Child.ToAdult()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: ToAdult
        path: ''
        startLine: 470
      summary: "\nCreate an adult version of this child with the same name. Should be invoked when the child turns 13.\n"
      example: []
      syntax:
        content:
          CSharp: public Adult ToAdult()
          VB: Public Function ToAdult() As Adult
        return:
          type: Backend.Adult
          description: An adult with the same name as the child.
      overload: Backend.Child.ToAdult*
    - id: Backend.Child.IncrementAge
      commentId: M:Backend.Child.IncrementAge
      language: CSharp
      name:
        CSharp: IncrementAge()
        VB: IncrementAge()
      nameWithType:
        CSharp: Child.IncrementAge()
        VB: Child.IncrementAge()
      qualifiedName:
        CSharp: Backend.Child.IncrementAge()
        VB: Backend.Child.IncrementAge()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: IncrementAge
        path: ''
        startLine: 481
      summary: "\nIncrement age of child. This does NOT handle growing up into an adult.\n"
      example: []
      syntax:
        content:
          CSharp: public void IncrementAge()
          VB: Public Sub IncrementAge()
      overload: Backend.Child.IncrementAge*
  - id: Backend.Family
    commentId: T:Backend.Family
    language: CSharp
    name:
      CSharp: Family
      VB: Family
    nameWithType:
      CSharp: Family
      VB: Family
    qualifiedName:
      CSharp: Backend.Family
      VB: Backend.Family
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: Family
      path: ''
      startLine: 498
    syntax:
      content:
        CSharp: 'public class Family : HouseholdAsset'
        VB: Public Class Family Inherits HouseholdAsset
    inheritance:
    - System.Object
    - Backend.HouseholdAsset
    inheritedMembers:
    - Backend.HouseholdAsset.Owner
    - Backend.HouseholdAsset.SetOwner(Backend.Household)
    items:
    - id: Backend.Family.Name
      commentId: P:Backend.Family.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: Family.Name
        VB: Family.Name
      qualifiedName:
        CSharp: Backend.Family.Name
        VB: Backend.Family.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Name
        path: ''
        startLine: 500
      syntax:
        content:
          CSharp: public string Name { get; }
          VB: Public ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Backend.Family.Name*
    - id: Backend.Family.Adults
      commentId: P:Backend.Family.Adults
      language: CSharp
      name:
        CSharp: Adults
        VB: Adults
      nameWithType:
        CSharp: Family.Adults
        VB: Family.Adults
      qualifiedName:
        CSharp: Backend.Family.Adults
        VB: Backend.Family.Adults
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Adults
        path: ''
        startLine: 502
      syntax:
        content:
          CSharp: public List<Adult> Adults { get; }
          VB: Public ReadOnly Property Adults As List(Of Adult)
        parameters: []
        return:
          type: System.Collections.Generic.List{Backend.Adult}
      overload: Backend.Family.Adults*
    - id: Backend.Family.Children
      commentId: P:Backend.Family.Children
      language: CSharp
      name:
        CSharp: Children
        VB: Children
      nameWithType:
        CSharp: Family.Children
        VB: Family.Children
      qualifiedName:
        CSharp: Backend.Family.Children
        VB: Backend.Family.Children
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Children
        path: ''
        startLine: 503
      syntax:
        content:
          CSharp: public List<Child> Children { get; }
          VB: Public ReadOnly Property Children As List(Of Child)
        parameters: []
        return:
          type: System.Collections.Generic.List{Backend.Child}
      overload: Backend.Family.Children*
    - id: Backend.Family.HiredWorkers
      commentId: P:Backend.Family.HiredWorkers
      language: CSharp
      name:
        CSharp: HiredWorkers
        VB: HiredWorkers
      nameWithType:
        CSharp: Family.HiredWorkers
        VB: Family.HiredWorkers
      qualifiedName:
        CSharp: Backend.Family.HiredWorkers
        VB: Backend.Family.HiredWorkers
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: HiredWorkers
        path: ''
        startLine: 504
      syntax:
        content:
          CSharp: public List<Adult> HiredWorkers { get; }
          VB: Public ReadOnly Property HiredWorkers As List(Of Adult)
        parameters: []
        return:
          type: System.Collections.Generic.List{Backend.Adult}
      overload: Backend.Family.HiredWorkers*
    - id: Backend.Family.#ctor(System.String,System.Int32,System.Int32)
      commentId: M:Backend.Family.#ctor(System.String,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Family(string, int, int)
        VB: New(String, Integer, Integer)
      nameWithType:
        CSharp: Family.Family(string, int, int)
        VB: Family.New(String, Integer, Integer)
      qualifiedName:
        CSharp: Backend.Family.Family(string, int, int)
        VB: Backend.Family.New(String, Integer, Integer)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: .ctor
        path: ''
        startLine: 507
      syntax:
        content:
          CSharp: public Family(string FamilyName, int NumChildren, int numAdults)
          VB: Public Sub New(FamilyName As String, NumChildren As Integer, numAdults As Integer)
        parameters:
        - id: FamilyName
          type: System.String
        - id: NumChildren
          type: System.Int32
        - id: numAdults
          type: System.Int32
      overload: Backend.Family.#ctor*
    - id: Backend.Family.CreateChild(System.Int32)
      commentId: M:Backend.Family.CreateChild(System.Int32)
      language: CSharp
      name:
        CSharp: CreateChild(int)
        VB: CreateChild(Integer)
      nameWithType:
        CSharp: Family.CreateChild(int)
        VB: Family.CreateChild(Integer)
      qualifiedName:
        CSharp: Backend.Family.CreateChild(int)
        VB: Backend.Family.CreateChild(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: CreateChild
        path: ''
        startLine: 522
      syntax:
        content:
          CSharp: public void CreateChild(int age = -1)
          VB: Public Sub CreateChild(age As Integer = -1)
        parameters:
        - id: age
          type: System.Int32
      overload: Backend.Family.CreateChild*
    - id: Backend.Family.CreateAdult
      commentId: M:Backend.Family.CreateAdult
      language: CSharp
      name:
        CSharp: CreateAdult()
        VB: CreateAdult()
      nameWithType:
        CSharp: Family.CreateAdult()
        VB: Family.CreateAdult()
      qualifiedName:
        CSharp: Backend.Family.CreateAdult()
        VB: Backend.Family.CreateAdult()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: CreateAdult
        path: ''
        startLine: 529
      syntax:
        content:
          CSharp: public void CreateAdult()
          VB: Public Sub CreateAdult()
      overload: Backend.Family.CreateAdult*
    - id: Backend.Family.GetTotalConsumption
      commentId: M:Backend.Family.GetTotalConsumption
      language: CSharp
      name:
        CSharp: GetTotalConsumption()
        VB: GetTotalConsumption()
      nameWithType:
        CSharp: Family.GetTotalConsumption()
        VB: Family.GetTotalConsumption()
      qualifiedName:
        CSharp: Backend.Family.GetTotalConsumption()
        VB: Backend.Family.GetTotalConsumption()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: GetTotalConsumption
        path: ''
        startLine: 536
      syntax:
        content:
          CSharp: public int GetTotalConsumption()
          VB: Public Function GetTotalConsumption() As Integer
        return:
          type: System.Int32
      overload: Backend.Family.GetTotalConsumption*
    - id: Backend.Family.GetAdultAmount
      commentId: M:Backend.Family.GetAdultAmount
      language: CSharp
      name:
        CSharp: GetAdultAmount()
        VB: GetAdultAmount()
      nameWithType:
        CSharp: Family.GetAdultAmount()
        VB: Family.GetAdultAmount()
      qualifiedName:
        CSharp: Backend.Family.GetAdultAmount()
        VB: Backend.Family.GetAdultAmount()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: GetAdultAmount
        path: ''
        startLine: 542
      syntax:
        content:
          CSharp: public int GetAdultAmount()
          VB: Public Function GetAdultAmount() As Integer
        return:
          type: System.Int32
      overload: Backend.Family.GetAdultAmount*
    - id: Backend.Family.GetChildrenAmount
      commentId: M:Backend.Family.GetChildrenAmount
      language: CSharp
      name:
        CSharp: GetChildrenAmount()
        VB: GetChildrenAmount()
      nameWithType:
        CSharp: Family.GetChildrenAmount()
        VB: Family.GetChildrenAmount()
      qualifiedName:
        CSharp: Backend.Family.GetChildrenAmount()
        VB: Backend.Family.GetChildrenAmount()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: GetChildrenAmount
        path: ''
        startLine: 548
      syntax:
        content:
          CSharp: public int GetChildrenAmount()
          VB: Public Function GetChildrenAmount() As Integer
        return:
          type: System.Int32
      overload: Backend.Family.GetChildrenAmount*
    - id: Backend.Family.GetHiredWorkerAmount
      commentId: M:Backend.Family.GetHiredWorkerAmount
      language: CSharp
      name:
        CSharp: GetHiredWorkerAmount()
        VB: GetHiredWorkerAmount()
      nameWithType:
        CSharp: Family.GetHiredWorkerAmount()
        VB: Family.GetHiredWorkerAmount()
      qualifiedName:
        CSharp: Backend.Family.GetHiredWorkerAmount()
        VB: Backend.Family.GetHiredWorkerAmount()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: GetHiredWorkerAmount
        path: ''
        startLine: 553
      syntax:
        content:
          CSharp: public int GetHiredWorkerAmount()
          VB: Public Function GetHiredWorkerAmount() As Integer
        return:
          type: System.Int32
      overload: Backend.Family.GetHiredWorkerAmount*
    - id: Backend.Family.GetLabourPoints
      commentId: M:Backend.Family.GetLabourPoints
      language: CSharp
      name:
        CSharp: GetLabourPoints()
        VB: GetLabourPoints()
      nameWithType:
        CSharp: Family.GetLabourPoints()
        VB: Family.GetLabourPoints()
      qualifiedName:
        CSharp: Backend.Family.GetLabourPoints()
        VB: Backend.Family.GetLabourPoints()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: GetLabourPoints
        path: ''
        startLine: 559
      syntax:
        content:
          CSharp: public int GetLabourPoints()
          VB: Public Function GetLabourPoints() As Integer
        return:
          type: System.Int32
      overload: Backend.Family.GetLabourPoints*
  - id: Backend.FamilyMember
    commentId: T:Backend.FamilyMember
    language: CSharp
    name:
      CSharp: FamilyMember
      VB: FamilyMember
    nameWithType:
      CSharp: FamilyMember
      VB: FamilyMember
    qualifiedName:
      CSharp: Backend.FamilyMember
      VB: Backend.FamilyMember
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: FamilyMember
      path: ''
      startLine: 579
    summary: "\nBase class for a family member.\n"
    example: []
    syntax:
      content:
        CSharp: public class FamilyMember
        VB: Public Class FamilyMember
    inheritance:
    - System.Object
    items:
    - id: Backend.FamilyMember.FirstName
      commentId: P:Backend.FamilyMember.FirstName
      language: CSharp
      name:
        CSharp: FirstName
        VB: FirstName
      nameWithType:
        CSharp: FamilyMember.FirstName
        VB: FamilyMember.FirstName
      qualifiedName:
        CSharp: Backend.FamilyMember.FirstName
        VB: Backend.FamilyMember.FirstName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: FirstName
        path: ''
        startLine: 584
      summary: "\nFirst name.\n"
      example: []
      syntax:
        content:
          CSharp: public string FirstName { get; protected set; }
          VB: Public Property FirstName As String
        parameters: []
        return:
          type: System.String
      overload: Backend.FamilyMember.FirstName*
    - id: Backend.FamilyMember.LastName
      commentId: P:Backend.FamilyMember.LastName
      language: CSharp
      name:
        CSharp: LastName
        VB: LastName
      nameWithType:
        CSharp: FamilyMember.LastName
        VB: FamilyMember.LastName
      qualifiedName:
        CSharp: Backend.FamilyMember.LastName
        VB: Backend.FamilyMember.LastName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: LastName
        path: ''
        startLine: 589
      summary: "\nLast name.\n"
      example: []
      syntax:
        content:
          CSharp: public string LastName { get; protected set; }
          VB: Public Property LastName As String
        parameters: []
        return:
          type: System.String
      overload: Backend.FamilyMember.LastName*
    - id: Backend.FamilyMember.s_FirstNames
      commentId: F:Backend.FamilyMember.s_FirstNames
      language: CSharp
      name:
        CSharp: s_FirstNames
        VB: s_FirstNames
      nameWithType:
        CSharp: FamilyMember.s_FirstNames
        VB: FamilyMember.s_FirstNames
      qualifiedName:
        CSharp: Backend.FamilyMember.s_FirstNames
        VB: Backend.FamilyMember.s_FirstNames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: s_FirstNames
        path: ''
        startLine: 594
      summary: "\nStatic array of Punjab first names. Adapted from <a href=\"https://www.in.pampers.com/pregnancy/baby-names/article/50-punjabi-baby-names-of-2021\">here.</a>\n"
      example: []
      syntax:
        content:
          CSharp: public static string[] s_FirstNames
          VB: Public Shared s_FirstNames As String()
        return:
          type: System.String[]
    - id: Backend.FamilyMember.GetRandomFirstName
      commentId: M:Backend.FamilyMember.GetRandomFirstName
      language: CSharp
      name:
        CSharp: GetRandomFirstName()
        VB: GetRandomFirstName()
      nameWithType:
        CSharp: FamilyMember.GetRandomFirstName()
        VB: FamilyMember.GetRandomFirstName()
      qualifiedName:
        CSharp: Backend.FamilyMember.GetRandomFirstName()
        VB: Backend.FamilyMember.GetRandomFirstName()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: GetRandomFirstName
        path: ''
        startLine: 697
      summary: "\nGets a random first name from s_FirstNames.\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetRandomFirstName()
          VB: Public Shared Function GetRandomFirstName() As String
        return:
          type: System.String
          description: A random first name.
      overload: Backend.FamilyMember.GetRandomFirstName*
  - id: Backend.Farmland
    commentId: T:Backend.Farmland
    language: CSharp
    name:
      CSharp: Farmland
      VB: Farmland
    nameWithType:
      CSharp: Farmland
      VB: Farmland
    qualifiedName:
      CSharp: Backend.Farmland
      VB: Backend.Farmland
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: Farmland
      path: ''
      startLine: 713
    summary: "\nA player&apos;s farmland.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Farmland : HouseholdAsset'
        VB: Public Class Farmland Inherits HouseholdAsset
    inheritance:
    - System.Object
    - Backend.HouseholdAsset
    inheritedMembers:
    - Backend.HouseholdAsset.Owner
    items:
    - id: Backend.Farmland.MaxPlots
      commentId: F:Backend.Farmland.MaxPlots
      language: CSharp
      name:
        CSharp: MaxPlots
        VB: MaxPlots
      nameWithType:
        CSharp: Farmland.MaxPlots
        VB: Farmland.MaxPlots
      qualifiedName:
        CSharp: Backend.Farmland.MaxPlots
        VB: Backend.Farmland.MaxPlots
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: MaxPlots
        path: ''
        startLine: 718
      summary: "\nThe maximum number of plots a player can have.\n"
      example: []
      syntax:
        content:
          CSharp: public const int MaxPlots = 16
          VB: Public Const MaxPlots As Integer = 16
        return:
          type: System.Int32
    - id: Backend.Farmland.Plots
      commentId: F:Backend.Farmland.Plots
      language: CSharp
      name:
        CSharp: Plots
        VB: Plots
      nameWithType:
        CSharp: Farmland.Plots
        VB: Farmland.Plots
      qualifiedName:
        CSharp: Backend.Farmland.Plots
        VB: Backend.Farmland.Plots
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Plots
        path: ''
        startLine: 723
      summary: "\nThe list of farm plots.\n"
      example: []
      syntax:
        content:
          CSharp: public List<FarmPlot> Plots
          VB: Public Plots As List(Of FarmPlot)
        return:
          type: System.Collections.Generic.List{Backend.FarmPlot}
    - id: Backend.Farmland.#ctor(System.Int32)
      commentId: M:Backend.Farmland.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: Farmland(int)
        VB: New(Integer)
      nameWithType:
        CSharp: Farmland.Farmland(int)
        VB: Farmland.New(Integer)
      qualifiedName:
        CSharp: Backend.Farmland.Farmland(int)
        VB: Backend.Farmland.New(Integer)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: .ctor
        path: ''
        startLine: 729
      summary: "\nInitializes a farmland with <code data-dev-comment-type=\"paramref\" class=\"paramref\">numPlots</code> plots.\n"
      example: []
      syntax:
        content:
          CSharp: public Farmland(int numPlots)
          VB: Public Sub New(numPlots As Integer)
        parameters:
        - id: numPlots
          type: System.Int32
          description: Number of farm plots.
      overload: Backend.Farmland.#ctor*
    - id: Backend.Farmland.SetOwner(Backend.Household)
      commentId: M:Backend.Farmland.SetOwner(Backend.Household)
      language: CSharp
      name:
        CSharp: SetOwner(Household)
        VB: SetOwner(Household)
      nameWithType:
        CSharp: Farmland.SetOwner(Household)
        VB: Farmland.SetOwner(Household)
      qualifiedName:
        CSharp: Backend.Farmland.SetOwner(Backend.Household)
        VB: Backend.Farmland.SetOwner(Backend.Household)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: SetOwner
        path: ''
        startLine: 743
      summary: "\nSet the owner of this land and its plots.\n"
      example: []
      syntax:
        content:
          CSharp: public override void SetOwner(Household owner)
          VB: Public Overrides Sub SetOwner(owner As Household)
        parameters:
        - id: owner
          type: Backend.Household
          description: The owner.
      overload: Backend.Farmland.SetOwner*
      overridden: Backend.HouseholdAsset.SetOwner(Backend.Household)
    - id: Backend.Farmland.GetTotalYield
      commentId: M:Backend.Farmland.GetTotalYield
      language: CSharp
      name:
        CSharp: GetTotalYield()
        VB: GetTotalYield()
      nameWithType:
        CSharp: Farmland.GetTotalYield()
        VB: Farmland.GetTotalYield()
      qualifiedName:
        CSharp: Backend.Farmland.GetTotalYield()
        VB: Backend.Farmland.GetTotalYield()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: GetTotalYield
        path: ''
        startLine: 756
      summary: "\nGets the total wheat yield of this land.\n"
      example: []
      syntax:
        content:
          CSharp: public int GetTotalYield()
          VB: Public Function GetTotalYield() As Integer
        return:
          type: System.Int32
          description: Total wheat yield.
      overload: Backend.Farmland.GetTotalYield*
    - id: Backend.Farmland.AddPlot
      commentId: M:Backend.Farmland.AddPlot
      language: CSharp
      name:
        CSharp: AddPlot()
        VB: AddPlot()
      nameWithType:
        CSharp: Farmland.AddPlot()
        VB: Farmland.AddPlot()
      qualifiedName:
        CSharp: Backend.Farmland.AddPlot()
        VB: Backend.Farmland.AddPlot()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: AddPlot
        path: ''
        startLine: 772
      summary: "\nAdds a farm plot to this land.\n"
      example: []
      syntax:
        content:
          CSharp: public void AddPlot()
          VB: Public Sub AddPlot()
      overload: Backend.Farmland.AddPlot*
    - id: Backend.Farmland.ResetIrrigation
      commentId: M:Backend.Farmland.ResetIrrigation
      language: CSharp
      name:
        CSharp: ResetIrrigation()
        VB: ResetIrrigation()
      nameWithType:
        CSharp: Farmland.ResetIrrigation()
        VB: Farmland.ResetIrrigation()
      qualifiedName:
        CSharp: Backend.Farmland.ResetIrrigation()
        VB: Backend.Farmland.ResetIrrigation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: ResetIrrigation
        path: ''
        startLine: 787
      summary: "\nReset irrigation status for every plot.\n"
      example: []
      syntax:
        content:
          CSharp: public void ResetIrrigation()
          VB: Public Sub ResetIrrigation()
      overload: Backend.Farmland.ResetIrrigation*
    - id: Backend.Farmland.ClearPlots
      commentId: M:Backend.Farmland.ClearPlots
      language: CSharp
      name:
        CSharp: ClearPlots()
        VB: ClearPlots()
      nameWithType:
        CSharp: Farmland.ClearPlots()
        VB: Farmland.ClearPlots()
      qualifiedName:
        CSharp: Backend.Farmland.ClearPlots()
        VB: Backend.Farmland.ClearPlots()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: ClearPlots
        path: ''
        startLine: 801
      summary: "\nClear seed and fertilizer type for all plots.\n"
      example: []
      syntax:
        content:
          CSharp: public void ClearPlots()
          VB: Public Sub ClearPlots()
      overload: Backend.Farmland.ClearPlots*
    - id: Backend.Farmland.SetYieldMultiplier(System.Single)
      commentId: M:Backend.Farmland.SetYieldMultiplier(System.Single)
      language: CSharp
      name:
        CSharp: SetYieldMultiplier(float)
        VB: SetYieldMultiplier(Single)
      nameWithType:
        CSharp: Farmland.SetYieldMultiplier(float)
        VB: Farmland.SetYieldMultiplier(Single)
      qualifiedName:
        CSharp: Backend.Farmland.SetYieldMultiplier(float)
        VB: Backend.Farmland.SetYieldMultiplier(Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: SetYieldMultiplier
        path: ''
        startLine: 813
      summary: "\nSet yield multiplier of all plots.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetYieldMultiplier(float val)
          VB: Public Sub SetYieldMultiplier(val As Single)
        parameters:
        - id: val
          type: System.Single
          description: The multiplier.
      overload: Backend.Farmland.SetYieldMultiplier*
  - id: Backend.FertilizerType
    commentId: T:Backend.FertilizerType
    language: CSharp
    name:
      CSharp: FertilizerType
      VB: FertilizerType
    nameWithType:
      CSharp: FertilizerType
      VB: FertilizerType
    qualifiedName:
      CSharp: Backend.FertilizerType
      VB: Backend.FertilizerType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: FertilizerType
      path: ''
      startLine: 829
    summary: "\nType of fertilizer.\n"
    example: []
    syntax:
      content:
        CSharp: public enum FertilizerType
        VB: Public Enum FertilizerType
    items:
    - id: Backend.FertilizerType.None
      commentId: F:Backend.FertilizerType.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: FertilizerType.None
        VB: FertilizerType.None
      qualifiedName:
        CSharp: Backend.FertilizerType.None
        VB: Backend.FertilizerType.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: None
        path: ''
        startLine: 831
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: Backend.FertilizerType
    - id: Backend.FertilizerType.Low
      commentId: F:Backend.FertilizerType.Low
      language: CSharp
      name:
        CSharp: Low
        VB: Low
      nameWithType:
        CSharp: FertilizerType.Low
        VB: FertilizerType.Low
      qualifiedName:
        CSharp: Backend.FertilizerType.Low
        VB: Backend.FertilizerType.Low
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Low
        path: ''
        startLine: 832
      syntax:
        content:
          CSharp: Low = 1
          VB: Low = 1
        return:
          type: Backend.FertilizerType
    - id: Backend.FertilizerType.High
      commentId: F:Backend.FertilizerType.High
      language: CSharp
      name:
        CSharp: High
        VB: High
      nameWithType:
        CSharp: FertilizerType.High
        VB: FertilizerType.High
      qualifiedName:
        CSharp: Backend.FertilizerType.High
        VB: Backend.FertilizerType.High
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: High
        path: ''
        startLine: 833
      syntax:
        content:
          CSharp: High = 2
          VB: High = 2
        return:
          type: Backend.FertilizerType
  - id: Backend.SeedType
    commentId: T:Backend.SeedType
    language: CSharp
    name:
      CSharp: SeedType
      VB: SeedType
    nameWithType:
      CSharp: SeedType
      VB: SeedType
    qualifiedName:
      CSharp: Backend.SeedType
      VB: Backend.SeedType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: SeedType
      path: ''
      startLine: 840
    summary: "\nType of seed.\n"
    example: []
    syntax:
      content:
        CSharp: public enum SeedType
        VB: Public Enum SeedType
    items:
    - id: Backend.SeedType.Regular
      commentId: F:Backend.SeedType.Regular
      language: CSharp
      name:
        CSharp: Regular
        VB: Regular
      nameWithType:
        CSharp: SeedType.Regular
        VB: SeedType.Regular
      qualifiedName:
        CSharp: Backend.SeedType.Regular
        VB: Backend.SeedType.Regular
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Regular
        path: ''
        startLine: 842
      syntax:
        content:
          CSharp: Regular = 0
          VB: Regular = 0
        return:
          type: Backend.SeedType
    - id: Backend.SeedType.HYC
      commentId: F:Backend.SeedType.HYC
      language: CSharp
      name:
        CSharp: HYC
        VB: HYC
      nameWithType:
        CSharp: SeedType.HYC
        VB: SeedType.HYC
      qualifiedName:
        CSharp: Backend.SeedType.HYC
        VB: Backend.SeedType.HYC
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: HYC
        path: ''
        startLine: 843
      syntax:
        content:
          CSharp: HYC = 1
          VB: HYC = 1
        return:
          type: Backend.SeedType
  - id: Backend.FarmPlot
    commentId: T:Backend.FarmPlot
    language: CSharp
    name:
      CSharp: FarmPlot
      VB: FarmPlot
    nameWithType:
      CSharp: FarmPlot
      VB: FarmPlot
    qualifiedName:
      CSharp: Backend.FarmPlot
      VB: Backend.FarmPlot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: FarmPlot
      path: ''
      startLine: 850
    summary: "\nA plot of land.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FarmPlot : HouseholdAsset'
        VB: Public Class FarmPlot Inherits HouseholdAsset
    inheritance:
    - System.Object
    - Backend.HouseholdAsset
    inheritedMembers:
    - Backend.HouseholdAsset.Owner
    - Backend.HouseholdAsset.SetOwner(Backend.Household)
    items:
    - id: Backend.FarmPlot.SeedType
      commentId: P:Backend.FarmPlot.SeedType
      language: CSharp
      name:
        CSharp: SeedType
        VB: SeedType
      nameWithType:
        CSharp: FarmPlot.SeedType
        VB: FarmPlot.SeedType
      qualifiedName:
        CSharp: Backend.FarmPlot.SeedType
        VB: Backend.FarmPlot.SeedType
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: SeedType
        path: ''
        startLine: 855
      summary: "\nWhat type of seed is planted currently.\n"
      example: []
      syntax:
        content:
          CSharp: public SeedType SeedType { get; set; }
          VB: Public Property SeedType As SeedType
        parameters: []
        return:
          type: Backend.SeedType
      overload: Backend.FarmPlot.SeedType*
    - id: Backend.FarmPlot.FertilizerType
      commentId: P:Backend.FarmPlot.FertilizerType
      language: CSharp
      name:
        CSharp: FertilizerType
        VB: FertilizerType
      nameWithType:
        CSharp: FarmPlot.FertilizerType
        VB: FarmPlot.FertilizerType
      qualifiedName:
        CSharp: Backend.FarmPlot.FertilizerType
        VB: Backend.FarmPlot.FertilizerType
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: FertilizerType
        path: ''
        startLine: 860
      summary: "\nWhat type of fertilizer is currently on the land.\n"
      example: []
      syntax:
        content:
          CSharp: public FertilizerType FertilizerType { get; set; }
          VB: Public Property FertilizerType As FertilizerType
        parameters: []
        return:
          type: Backend.FertilizerType
      overload: Backend.FarmPlot.FertilizerType*
    - id: Backend.FarmPlot.YieldMultiplier
      commentId: P:Backend.FarmPlot.YieldMultiplier
      language: CSharp
      name:
        CSharp: YieldMultiplier
        VB: YieldMultiplier
      nameWithType:
        CSharp: FarmPlot.YieldMultiplier
        VB: FarmPlot.YieldMultiplier
      qualifiedName:
        CSharp: Backend.FarmPlot.YieldMultiplier
        VB: Backend.FarmPlot.YieldMultiplier
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: YieldMultiplier
        path: ''
        startLine: 865
      summary: "\nA value that the yield of this plot is multiplied by.\n"
      example: []
      syntax:
        content:
          CSharp: public float YieldMultiplier { get; set; }
          VB: Public Property YieldMultiplier As Single
        parameters: []
        return:
          type: System.Single
      overload: Backend.FarmPlot.YieldMultiplier*
    - id: Backend.FarmPlot.Irrigated
      commentId: P:Backend.FarmPlot.Irrigated
      language: CSharp
      name:
        CSharp: Irrigated
        VB: Irrigated
      nameWithType:
        CSharp: FarmPlot.Irrigated
        VB: FarmPlot.Irrigated
      qualifiedName:
        CSharp: Backend.FarmPlot.Irrigated
        VB: Backend.FarmPlot.Irrigated
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Irrigated
        path: ''
        startLine: 870
      summary: "\nWhether the plot is irrigated.\n"
      example: []
      syntax:
        content:
          CSharp: public bool Irrigated { get; set; }
          VB: Public Property Irrigated As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Backend.FarmPlot.Irrigated*
    - id: Backend.FarmPlot.#ctor(Backend.SeedType,Backend.FertilizerType)
      commentId: M:Backend.FarmPlot.#ctor(Backend.SeedType,Backend.FertilizerType)
      language: CSharp
      name:
        CSharp: FarmPlot(SeedType, FertilizerType)
        VB: New(SeedType, FertilizerType)
      nameWithType:
        CSharp: FarmPlot.FarmPlot(SeedType, FertilizerType)
        VB: FarmPlot.New(SeedType, FertilizerType)
      qualifiedName:
        CSharp: Backend.FarmPlot.FarmPlot(Backend.SeedType, Backend.FertilizerType)
        VB: Backend.FarmPlot.New(Backend.SeedType, Backend.FertilizerType)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: .ctor
        path: ''
        startLine: 877
      summary: "\nCreate a new farm plot with <code data-dev-comment-type=\"paramref\" class=\"paramref\">seedType</code> seed type and <code data-dev-comment-type=\"paramref\" class=\"paramref\">fertilizerType</code> fertilizer type.\n"
      example: []
      syntax:
        content:
          CSharp: public FarmPlot(SeedType seedType, FertilizerType fertilizerType)
          VB: Public Sub New(seedType As SeedType, fertilizerType As FertilizerType)
        parameters:
        - id: seedType
          type: Backend.SeedType
          description: Seed type.
        - id: fertilizerType
          type: Backend.FertilizerType
          description: Fertilizer type.
      overload: Backend.FarmPlot.#ctor*
    - id: Backend.FarmPlot.GetWeatherEffect
      commentId: M:Backend.FarmPlot.GetWeatherEffect
      language: CSharp
      name:
        CSharp: GetWeatherEffect()
        VB: GetWeatherEffect()
      nameWithType:
        CSharp: FarmPlot.GetWeatherEffect()
        VB: FarmPlot.GetWeatherEffect()
      qualifiedName:
        CSharp: Backend.FarmPlot.GetWeatherEffect()
        VB: Backend.FarmPlot.GetWeatherEffect()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: GetWeatherEffect
        path: ''
        startLine: 887
      summary: "\nReturns game&apos;s weather index or 1 (the best weather) if irrigated.\n"
      example: []
      syntax:
        content:
          CSharp: public int GetWeatherEffect()
          VB: Public Function GetWeatherEffect() As Integer
        return:
          type: System.Int32
          description: Game&apos;s weather index or 1 (the best weather) if irrigated.
      overload: Backend.FarmPlot.GetWeatherEffect*
    - id: Backend.FarmPlot.GetYield
      commentId: M:Backend.FarmPlot.GetYield
      language: CSharp
      name:
        CSharp: GetYield()
        VB: GetYield()
      nameWithType:
        CSharp: FarmPlot.GetYield()
        VB: FarmPlot.GetYield()
      qualifiedName:
        CSharp: Backend.FarmPlot.GetYield()
        VB: Backend.FarmPlot.GetYield()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: GetYield
        path: ''
        startLine: 896
      summary: "\nReturns the yield of this plot multiplied by the yield multiplier.\n"
      example: []
      syntax:
        content:
          CSharp: public int GetYield()
          VB: Public Function GetYield() As Integer
        return:
          type: System.Int32
          description: Plot&apos;s wheat yield.
      overload: Backend.FarmPlot.GetYield*
    - id: Backend.FarmPlot.ClearPlot
      commentId: M:Backend.FarmPlot.ClearPlot
      language: CSharp
      name:
        CSharp: ClearPlot()
        VB: ClearPlot()
      nameWithType:
        CSharp: FarmPlot.ClearPlot()
        VB: FarmPlot.ClearPlot()
      qualifiedName:
        CSharp: Backend.FarmPlot.ClearPlot()
        VB: Backend.FarmPlot.ClearPlot()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: ClearPlot
        path: ''
        startLine: 904
      summary: "\nSets seed type to regular and fertilizer to none.\n"
      example: []
      syntax:
        content:
          CSharp: public void ClearPlot()
          VB: Public Sub ClearPlot()
      overload: Backend.FarmPlot.ClearPlot*
  - id: Backend.Fate
    commentId: T:Backend.Fate
    language: CSharp
    name:
      CSharp: Fate
      VB: Fate
    nameWithType:
      CSharp: Fate
      VB: Fate
    qualifiedName:
      CSharp: Backend.Fate
      VB: Backend.Fate
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: Fate
      path: ''
      startLine: 923
    summary: "\nHandles random village and family events.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Fate
        VB: Public Module Fate
    inheritance:
    - System.Object
    items:
    - id: Backend.Fate.TriggerYearlyEvents
      commentId: M:Backend.Fate.TriggerYearlyEvents
      language: CSharp
      name:
        CSharp: TriggerYearlyEvents()
        VB: TriggerYearlyEvents()
      nameWithType:
        CSharp: Fate.TriggerYearlyEvents()
        VB: Fate.TriggerYearlyEvents()
      qualifiedName:
        CSharp: Backend.Fate.TriggerYearlyEvents()
        VB: Backend.Fate.TriggerYearlyEvents()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: TriggerYearlyEvents
        path: ''
        startLine: 927
      syntax:
        content:
          CSharp: public static void TriggerYearlyEvents()
          VB: Public Shared Sub TriggerYearlyEvents()
      overload: Backend.Fate.TriggerYearlyEvents*
  - id: Backend.GameState
    commentId: T:Backend.GameState
    language: CSharp
    name:
      CSharp: GameState
      VB: GameState
    nameWithType:
      CSharp: GameState
      VB: GameState
    qualifiedName:
      CSharp: Backend.GameState
      VB: Backend.GameState
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: GameState
      path: ''
      startLine: 989
    syntax:
      content:
        CSharp: public static class GameState
        VB: Public Module GameState
    inheritance:
    - System.Object
    items:
    - id: Backend.GameState.StartMoney
      commentId: F:Backend.GameState.StartMoney
      language: CSharp
      name:
        CSharp: StartMoney
        VB: StartMoney
      nameWithType:
        CSharp: GameState.StartMoney
        VB: GameState.StartMoney
      qualifiedName:
        CSharp: Backend.GameState.StartMoney
        VB: Backend.GameState.StartMoney
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: StartMoney
        path: ''
        startLine: 991
      syntax:
        content:
          CSharp: public const int StartMoney = 500
          VB: Public Const StartMoney As Integer = 500
        return:
          type: System.Int32
    - id: Backend.GameState.s_Year
      commentId: F:Backend.GameState.s_Year
      language: CSharp
      name:
        CSharp: s_Year
        VB: s_Year
      nameWithType:
        CSharp: GameState.s_Year
        VB: GameState.s_Year
      qualifiedName:
        CSharp: Backend.GameState.s_Year
        VB: Backend.GameState.s_Year
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: s_Year
        path: ''
        startLine: 992
      syntax:
        content:
          CSharp: public static int s_Year
          VB: Public Shared s_Year As Integer
        return:
          type: System.Int32
    - id: Backend.GameState.s_Phase
      commentId: F:Backend.GameState.s_Phase
      language: CSharp
      name:
        CSharp: s_Phase
        VB: s_Phase
      nameWithType:
        CSharp: GameState.s_Phase
        VB: GameState.s_Phase
      qualifiedName:
        CSharp: Backend.GameState.s_Phase
        VB: Backend.GameState.s_Phase
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: s_Phase
        path: ''
        startLine: 993
      syntax:
        content:
          CSharp: public static int s_Phase
          VB: Public Shared s_Phase As Integer
        return:
          type: System.Int32
    - id: Backend.GameState.s_WeatherIndex
      commentId: F:Backend.GameState.s_WeatherIndex
      language: CSharp
      name:
        CSharp: s_WeatherIndex
        VB: s_WeatherIndex
      nameWithType:
        CSharp: GameState.s_WeatherIndex
        VB: GameState.s_WeatherIndex
      qualifiedName:
        CSharp: Backend.GameState.s_WeatherIndex
        VB: Backend.GameState.s_WeatherIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: s_WeatherIndex
        path: ''
        startLine: 994
      syntax:
        content:
          CSharp: public static int s_WeatherIndex
          VB: Public Shared s_WeatherIndex As Integer
        return:
          type: System.Int32
    - id: Backend.GameState.s_Player
      commentId: F:Backend.GameState.s_Player
      language: CSharp
      name:
        CSharp: s_Player
        VB: s_Player
      nameWithType:
        CSharp: GameState.s_Player
        VB: GameState.s_Player
      qualifiedName:
        CSharp: Backend.GameState.s_Player
        VB: Backend.GameState.s_Player
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: s_Player
        path: ''
        startLine: 995
      syntax:
        content:
          CSharp: public static Household s_Player
          VB: Public Shared s_Player As Household
        return:
          type: Backend.Household
    - id: Backend.GameState.s_Households
      commentId: F:Backend.GameState.s_Households
      language: CSharp
      name:
        CSharp: s_Households
        VB: s_Households
      nameWithType:
        CSharp: GameState.s_Households
        VB: GameState.s_Households
      qualifiedName:
        CSharp: Backend.GameState.s_Households
        VB: Backend.GameState.s_Households
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: s_Households
        path: ''
        startLine: 996
      syntax:
        content:
          CSharp: public static Household[] s_Households
          VB: Public Shared s_Households As Household()
        return:
          type: Backend.Household[]
    - id: Backend.GameState.PopupManagerInstance
      commentId: P:Backend.GameState.PopupManagerInstance
      language: CSharp
      name:
        CSharp: PopupManagerInstance
        VB: PopupManagerInstance
      nameWithType:
        CSharp: GameState.PopupManagerInstance
        VB: GameState.PopupManagerInstance
      qualifiedName:
        CSharp: Backend.GameState.PopupManagerInstance
        VB: Backend.GameState.PopupManagerInstance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: PopupManagerInstance
        path: ''
        startLine: 997
      syntax:
        content:
          CSharp: public static PopupManager PopupManagerInstance { get; }
          VB: Public Shared Property PopupManagerInstance As PopupManager
        parameters: []
        return:
          type: Global.PopupManager
      overload: Backend.GameState.PopupManagerInstance*
    - id: Backend.GameState.s_PredefinedHouseholds
      commentId: F:Backend.GameState.s_PredefinedHouseholds
      language: CSharp
      name:
        CSharp: s_PredefinedHouseholds
        VB: s_PredefinedHouseholds
      nameWithType:
        CSharp: GameState.s_PredefinedHouseholds
        VB: GameState.s_PredefinedHouseholds
      qualifiedName:
        CSharp: Backend.GameState.s_PredefinedHouseholds
        VB: Backend.GameState.s_PredefinedHouseholds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: s_PredefinedHouseholds
        path: ''
        startLine: 998
      syntax:
        content:
          CSharp: public static Household[] s_PredefinedHouseholds
          VB: Public Shared s_PredefinedHouseholds As Household()
        return:
          type: Backend.Household[]
    - id: Backend.GameState.Initialize(Backend.Household)
      commentId: M:Backend.GameState.Initialize(Backend.Household)
      language: CSharp
      name:
        CSharp: Initialize(Household)
        VB: Initialize(Household)
      nameWithType:
        CSharp: GameState.Initialize(Household)
        VB: GameState.Initialize(Household)
      qualifiedName:
        CSharp: Backend.GameState.Initialize(Backend.Household)
        VB: Backend.GameState.Initialize(Backend.Household)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Initialize
        path: ''
        startLine: 1022
      syntax:
        content:
          CSharp: public static void Initialize(Household Player)
          VB: Public Shared Sub Initialize(Player As Household)
        parameters:
        - id: Player
          type: Backend.Household
      overload: Backend.GameState.Initialize*
    - id: Backend.GameState.AdvanceToPhaseOne
      commentId: M:Backend.GameState.AdvanceToPhaseOne
      language: CSharp
      name:
        CSharp: AdvanceToPhaseOne()
        VB: AdvanceToPhaseOne()
      nameWithType:
        CSharp: GameState.AdvanceToPhaseOne()
        VB: GameState.AdvanceToPhaseOne()
      qualifiedName:
        CSharp: Backend.GameState.AdvanceToPhaseOne()
        VB: Backend.GameState.AdvanceToPhaseOne()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: AdvanceToPhaseOne
        path: ''
        startLine: 1047
      syntax:
        content:
          CSharp: public static void AdvanceToPhaseOne()
          VB: Public Shared Sub AdvanceToPhaseOne()
      overload: Backend.GameState.AdvanceToPhaseOne*
    - id: Backend.GameState.AdvanceToPhaseTwo
      commentId: M:Backend.GameState.AdvanceToPhaseTwo
      language: CSharp
      name:
        CSharp: AdvanceToPhaseTwo()
        VB: AdvanceToPhaseTwo()
      nameWithType:
        CSharp: GameState.AdvanceToPhaseTwo()
        VB: GameState.AdvanceToPhaseTwo()
      qualifiedName:
        CSharp: Backend.GameState.AdvanceToPhaseTwo()
        VB: Backend.GameState.AdvanceToPhaseTwo()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: AdvanceToPhaseTwo
        path: ''
        startLine: 1143
      syntax:
        content:
          CSharp: public static void AdvanceToPhaseTwo()
          VB: Public Shared Sub AdvanceToPhaseTwo()
      overload: Backend.GameState.AdvanceToPhaseTwo*
    - id: Backend.GameState.AdvanceToPhaseThree
      commentId: M:Backend.GameState.AdvanceToPhaseThree
      language: CSharp
      name:
        CSharp: AdvanceToPhaseThree()
        VB: AdvanceToPhaseThree()
      nameWithType:
        CSharp: GameState.AdvanceToPhaseThree()
        VB: GameState.AdvanceToPhaseThree()
      qualifiedName:
        CSharp: Backend.GameState.AdvanceToPhaseThree()
        VB: Backend.GameState.AdvanceToPhaseThree()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: AdvanceToPhaseThree
        path: ''
        startLine: 1149
      syntax:
        content:
          CSharp: public static void AdvanceToPhaseThree()
          VB: Public Shared Sub AdvanceToPhaseThree()
      overload: Backend.GameState.AdvanceToPhaseThree*
    - id: Backend.GameState.ResultReport
      commentId: M:Backend.GameState.ResultReport
      language: CSharp
      name:
        CSharp: ResultReport()
        VB: ResultReport()
      nameWithType:
        CSharp: GameState.ResultReport()
        VB: GameState.ResultReport()
      qualifiedName:
        CSharp: Backend.GameState.ResultReport()
        VB: Backend.GameState.ResultReport()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: ResultReport
        path: ''
        startLine: 1170
      syntax:
        content:
          CSharp: public static Dictionary<string, int> ResultReport()
          VB: Public Shared Function ResultReport() As Dictionary(Of String, Integer)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Int32}
      overload: Backend.GameState.ResultReport*
  - id: Backend.Household
    commentId: T:Backend.Household
    language: CSharp
    name:
      CSharp: Household
      VB: Household
    nameWithType:
      CSharp: Household
      VB: Household
    qualifiedName:
      CSharp: Backend.Household
      VB: Backend.Household
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: Household
      path: ''
      startLine: 1242
    syntax:
      content:
        CSharp: public class Household
        VB: Public Class Household
    inheritance:
    - System.Object
    items:
    - id: Backend.Household.Land
      commentId: P:Backend.Household.Land
      language: CSharp
      name:
        CSharp: Land
        VB: Land
      nameWithType:
        CSharp: Household.Land
        VB: Household.Land
      qualifiedName:
        CSharp: Backend.Household.Land
        VB: Backend.Household.Land
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Land
        path: ''
        startLine: 1244
      syntax:
        content:
          CSharp: public Farmland Land { get; }
          VB: Public ReadOnly Property Land As Farmland
        parameters: []
        return:
          type: Backend.Farmland
      overload: Backend.Household.Land*
    - id: Backend.Household.Money
      commentId: P:Backend.Household.Money
      language: CSharp
      name:
        CSharp: Money
        VB: Money
      nameWithType:
        CSharp: Household.Money
        VB: Household.Money
      qualifiedName:
        CSharp: Backend.Household.Money
        VB: Backend.Household.Money
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Money
        path: ''
        startLine: 1245
      syntax:
        content:
          CSharp: public int Money { get; set; }
          VB: Public Property Money As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Backend.Household.Money*
    - id: Backend.Household.Family
      commentId: P:Backend.Household.Family
      language: CSharp
      name:
        CSharp: Family
        VB: Family
      nameWithType:
        CSharp: Household.Family
        VB: Household.Family
      qualifiedName:
        CSharp: Backend.Household.Family
        VB: Backend.Household.Family
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Family
        path: ''
        startLine: 1246
      syntax:
        content:
          CSharp: public Family Family { get; }
          VB: Public ReadOnly Property Family As Family
        parameters: []
        return:
          type: Backend.Family
      overload: Backend.Household.Family*
    - id: Backend.Household.Inventory
      commentId: P:Backend.Household.Inventory
      language: CSharp
      name:
        CSharp: Inventory
        VB: Inventory
      nameWithType:
        CSharp: Household.Inventory
        VB: Household.Inventory
      qualifiedName:
        CSharp: Backend.Household.Inventory
        VB: Backend.Household.Inventory
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Inventory
        path: ''
        startLine: 1247
      syntax:
        content:
          CSharp: public Inventory Inventory { get; }
          VB: Public ReadOnly Property Inventory As Inventory
        parameters: []
        return:
          type: Backend.Inventory
      overload: Backend.Household.Inventory*
    - id: Backend.Household.Wheat
      commentId: P:Backend.Household.Wheat
      language: CSharp
      name:
        CSharp: Wheat
        VB: Wheat
      nameWithType:
        CSharp: Household.Wheat
        VB: Household.Wheat
      qualifiedName:
        CSharp: Backend.Household.Wheat
        VB: Backend.Household.Wheat
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Wheat
        path: ''
        startLine: 1248
      syntax:
        content:
          CSharp: public int Wheat { get; set; }
          VB: Public Property Wheat As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Backend.Household.Wheat*
    - id: Backend.Household.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.Int32)
      commentId: M:Backend.Household.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Household(int, string, int, int, int)
        VB: New(Integer, String, Integer, Integer, Integer)
      nameWithType:
        CSharp: Household.Household(int, string, int, int, int)
        VB: Household.New(Integer, String, Integer, Integer, Integer)
      qualifiedName:
        CSharp: Backend.Household.Household(int, string, int, int, int)
        VB: Backend.Household.New(Integer, String, Integer, Integer, Integer)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: .ctor
        path: ''
        startLine: 1251
      syntax:
        content:
          CSharp: public Household(int startMoney, string familyName, int numChildren, int numAdults, int numPlots)
          VB: Public Sub New(startMoney As Integer, familyName As String, numChildren As Integer, numAdults As Integer, numPlots As Integer)
        parameters:
        - id: startMoney
          type: System.Int32
        - id: familyName
          type: System.String
        - id: numChildren
          type: System.Int32
        - id: numAdults
          type: System.Int32
        - id: numPlots
          type: System.Int32
      overload: Backend.Household.#ctor*
    - id: Backend.Household.CalculateRemainingYield
      commentId: M:Backend.Household.CalculateRemainingYield
      language: CSharp
      name:
        CSharp: CalculateRemainingYield()
        VB: CalculateRemainingYield()
      nameWithType:
        CSharp: Household.CalculateRemainingYield()
        VB: Household.CalculateRemainingYield()
      qualifiedName:
        CSharp: Backend.Household.CalculateRemainingYield()
        VB: Backend.Household.CalculateRemainingYield()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: CalculateRemainingYield
        path: ''
        startLine: 1268
      syntax:
        content:
          CSharp: public void CalculateRemainingYield()
          VB: Public Sub CalculateRemainingYield()
      overload: Backend.Household.CalculateRemainingYield*
    - id: Backend.Household.HarvestCrops
      commentId: M:Backend.Household.HarvestCrops
      language: CSharp
      name:
        CSharp: HarvestCrops()
        VB: HarvestCrops()
      nameWithType:
        CSharp: Household.HarvestCrops()
        VB: Household.HarvestCrops()
      qualifiedName:
        CSharp: Backend.Household.HarvestCrops()
        VB: Backend.Household.HarvestCrops()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: HarvestCrops
        path: ''
        startLine: 1278
      syntax:
        content:
          CSharp: public void HarvestCrops()
          VB: Public Sub HarvestCrops()
      overload: Backend.Household.HarvestCrops*
    - id: Backend.Household.HireLabour
      commentId: M:Backend.Household.HireLabour
      language: CSharp
      name:
        CSharp: HireLabour()
        VB: HireLabour()
      nameWithType:
        CSharp: Household.HireLabour()
        VB: Household.HireLabour()
      qualifiedName:
        CSharp: Backend.Household.HireLabour()
        VB: Backend.Household.HireLabour()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: HireLabour
        path: ''
        startLine: 1284
      syntax:
        content:
          CSharp: public void HireLabour()
          VB: Public Sub HireLabour()
      overload: Backend.Household.HireLabour*
    - id: Backend.Household.RemoveLabour
      commentId: M:Backend.Household.RemoveLabour
      language: CSharp
      name:
        CSharp: RemoveLabour()
        VB: RemoveLabour()
      nameWithType:
        CSharp: Household.RemoveLabour()
        VB: Household.RemoveLabour()
      qualifiedName:
        CSharp: Backend.Household.RemoveLabour()
        VB: Backend.Household.RemoveLabour()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: RemoveLabour
        path: ''
        startLine: 1291
      syntax:
        content:
          CSharp: public void RemoveLabour()
          VB: Public Sub RemoveLabour()
      overload: Backend.Household.RemoveLabour*
  - id: Backend.HouseholdAsset
    commentId: T:Backend.HouseholdAsset
    language: CSharp
    name:
      CSharp: HouseholdAsset
      VB: HouseholdAsset
    nameWithType:
      CSharp: HouseholdAsset
      VB: HouseholdAsset
    qualifiedName:
      CSharp: Backend.HouseholdAsset
      VB: Backend.HouseholdAsset
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: HouseholdAsset
      path: ''
      startLine: 1309
    syntax:
      content:
        CSharp: public class HouseholdAsset
        VB: Public Class HouseholdAsset
    inheritance:
    - System.Object
    items:
    - id: Backend.HouseholdAsset.Owner
      commentId: P:Backend.HouseholdAsset.Owner
      language: CSharp
      name:
        CSharp: Owner
        VB: Owner
      nameWithType:
        CSharp: HouseholdAsset.Owner
        VB: HouseholdAsset.Owner
      qualifiedName:
        CSharp: Backend.HouseholdAsset.Owner
        VB: Backend.HouseholdAsset.Owner
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Owner
        path: ''
        startLine: 1311
      syntax:
        content:
          CSharp: public Household Owner { get; }
          VB: Public Property Owner As Household
        parameters: []
        return:
          type: Backend.Household
      overload: Backend.HouseholdAsset.Owner*
    - id: Backend.HouseholdAsset.SetOwner(Backend.Household)
      commentId: M:Backend.HouseholdAsset.SetOwner(Backend.Household)
      language: CSharp
      name:
        CSharp: SetOwner(Household)
        VB: SetOwner(Household)
      nameWithType:
        CSharp: HouseholdAsset.SetOwner(Household)
        VB: HouseholdAsset.SetOwner(Household)
      qualifiedName:
        CSharp: Backend.HouseholdAsset.SetOwner(Backend.Household)
        VB: Backend.HouseholdAsset.SetOwner(Backend.Household)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: SetOwner
        path: ''
        startLine: 1313
      syntax:
        content:
          CSharp: public virtual void SetOwner(Household owner)
          VB: Public Overridable Sub SetOwner(owner As Household)
        parameters:
        - id: owner
          type: Backend.Household
      overload: Backend.HouseholdAsset.SetOwner*
  - id: Backend.Inventory
    commentId: T:Backend.Inventory
    language: CSharp
    name:
      CSharp: Inventory
      VB: Inventory
    nameWithType:
      CSharp: Inventory
      VB: Inventory
    qualifiedName:
      CSharp: Backend.Inventory
      VB: Backend.Inventory
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: Inventory
      path: ''
      startLine: 1326
    syntax:
      content:
        CSharp: 'public class Inventory : HouseholdAsset'
        VB: Public Class Inventory Inherits HouseholdAsset
    inheritance:
    - System.Object
    - Backend.HouseholdAsset
    inheritedMembers:
    - Backend.HouseholdAsset.Owner
    - Backend.HouseholdAsset.SetOwner(Backend.Household)
    items:
    - id: Backend.Inventory.#ctor
      commentId: M:Backend.Inventory.#ctor
      language: CSharp
      name:
        CSharp: Inventory()
        VB: New()
      nameWithType:
        CSharp: Inventory.Inventory()
        VB: Inventory.New()
      qualifiedName:
        CSharp: Backend.Inventory.Inventory()
        VB: Backend.Inventory.New()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: .ctor
        path: ''
        startLine: 1331
      syntax:
        content:
          CSharp: public Inventory()
          VB: Public Sub New()
      overload: Backend.Inventory.#ctor*
    - id: Backend.Inventory.AddItem(System.String)
      commentId: M:Backend.Inventory.AddItem(System.String)
      language: CSharp
      name:
        CSharp: AddItem(string)
        VB: AddItem(String)
      nameWithType:
        CSharp: Inventory.AddItem(string)
        VB: Inventory.AddItem(String)
      qualifiedName:
        CSharp: Backend.Inventory.AddItem(string)
        VB: Backend.Inventory.AddItem(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: AddItem
        path: ''
        startLine: 1337
      syntax:
        content:
          CSharp: public void AddItem(string newItem)
          VB: Public Sub AddItem(newItem As String)
        parameters:
        - id: newItem
          type: System.String
      overload: Backend.Inventory.AddItem*
    - id: Backend.Inventory.RemoveItem(System.String)
      commentId: M:Backend.Inventory.RemoveItem(System.String)
      language: CSharp
      name:
        CSharp: RemoveItem(string)
        VB: RemoveItem(String)
      nameWithType:
        CSharp: Inventory.RemoveItem(string)
        VB: Inventory.RemoveItem(String)
      qualifiedName:
        CSharp: Backend.Inventory.RemoveItem(string)
        VB: Backend.Inventory.RemoveItem(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: RemoveItem
        path: ''
        startLine: 1350
      syntax:
        content:
          CSharp: public void RemoveItem(string item)
          VB: Public Sub RemoveItem(item As String)
        parameters:
        - id: item
          type: System.String
      overload: Backend.Inventory.RemoveItem*
    - id: Backend.Inventory.GetAmount(System.String)
      commentId: M:Backend.Inventory.GetAmount(System.String)
      language: CSharp
      name:
        CSharp: GetAmount(string)
        VB: GetAmount(String)
      nameWithType:
        CSharp: Inventory.GetAmount(string)
        VB: Inventory.GetAmount(String)
      qualifiedName:
        CSharp: Backend.Inventory.GetAmount(string)
        VB: Backend.Inventory.GetAmount(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: GetAmount
        path: ''
        startLine: 1368
      syntax:
        content:
          CSharp: public int GetAmount(string item)
          VB: Public Function GetAmount(item As String) As Integer
        parameters:
        - id: item
          type: System.String
        return:
          type: System.Int32
      overload: Backend.Inventory.GetAmount*
    - id: Backend.Inventory.Contains(System.String)
      commentId: M:Backend.Inventory.Contains(System.String)
      language: CSharp
      name:
        CSharp: Contains(string)
        VB: Contains(String)
      nameWithType:
        CSharp: Inventory.Contains(string)
        VB: Inventory.Contains(String)
      qualifiedName:
        CSharp: Backend.Inventory.Contains(string)
        VB: Backend.Inventory.Contains(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Contains
        path: ''
        startLine: 1379
      syntax:
        content:
          CSharp: public bool Contains(string item)
          VB: Public Function Contains(item As String) As Boolean
        parameters:
        - id: item
          type: System.String
        return:
          type: System.Boolean
      overload: Backend.Inventory.Contains*
  - id: Backend.ProductType
    commentId: T:Backend.ProductType
    language: CSharp
    name:
      CSharp: ProductType
      VB: ProductType
    nameWithType:
      CSharp: ProductType
      VB: ProductType
    qualifiedName:
      CSharp: Backend.ProductType
      VB: Backend.ProductType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: ProductType
      path: ''
      startLine: 1392
    syntax:
      content:
        CSharp: public enum ProductType
        VB: Public Enum ProductType
    items:
    - id: Backend.ProductType.Seed
      commentId: F:Backend.ProductType.Seed
      language: CSharp
      name:
        CSharp: Seed
        VB: Seed
      nameWithType:
        CSharp: ProductType.Seed
        VB: ProductType.Seed
      qualifiedName:
        CSharp: Backend.ProductType.Seed
        VB: Backend.ProductType.Seed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Seed
        path: ''
        startLine: 1394
      syntax:
        content:
          CSharp: Seed = 0
          VB: Seed = 0
        return:
          type: Backend.ProductType
    - id: Backend.ProductType.Fertilizer
      commentId: F:Backend.ProductType.Fertilizer
      language: CSharp
      name:
        CSharp: Fertilizer
        VB: Fertilizer
      nameWithType:
        CSharp: ProductType.Fertilizer
        VB: ProductType.Fertilizer
      qualifiedName:
        CSharp: Backend.ProductType.Fertilizer
        VB: Backend.ProductType.Fertilizer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Fertilizer
        path: ''
        startLine: 1395
      syntax:
        content:
          CSharp: Fertilizer = 1
          VB: Fertilizer = 1
        return:
          type: Backend.ProductType
    - id: Backend.ProductType.Tool
      commentId: F:Backend.ProductType.Tool
      language: CSharp
      name:
        CSharp: Tool
        VB: Tool
      nameWithType:
        CSharp: ProductType.Tool
        VB: ProductType.Tool
      qualifiedName:
        CSharp: Backend.ProductType.Tool
        VB: Backend.ProductType.Tool
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Tool
        path: ''
        startLine: 1396
      syntax:
        content:
          CSharp: Tool = 2
          VB: Tool = 2
        return:
          type: Backend.ProductType
    - id: Backend.ProductType.Food
      commentId: F:Backend.ProductType.Food
      language: CSharp
      name:
        CSharp: Food
        VB: Food
      nameWithType:
        CSharp: ProductType.Food
        VB: ProductType.Food
      qualifiedName:
        CSharp: Backend.ProductType.Food
        VB: Backend.ProductType.Food
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Food
        path: ''
        startLine: 1397
      syntax:
        content:
          CSharp: Food = 3
          VB: Food = 3
        return:
          type: Backend.ProductType
    - id: Backend.ProductType.Land
      commentId: F:Backend.ProductType.Land
      language: CSharp
      name:
        CSharp: Land
        VB: Land
      nameWithType:
        CSharp: ProductType.Land
        VB: ProductType.Land
      qualifiedName:
        CSharp: Backend.ProductType.Land
        VB: Backend.ProductType.Land
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Land
        path: ''
        startLine: 1398
      syntax:
        content:
          CSharp: Land = 4
          VB: Land = 4
        return:
          type: Backend.ProductType
    - id: Backend.ProductType.Labour
      commentId: F:Backend.ProductType.Labour
      language: CSharp
      name:
        CSharp: Labour
        VB: Labour
      nameWithType:
        CSharp: ProductType.Labour
        VB: ProductType.Labour
      qualifiedName:
        CSharp: Backend.ProductType.Labour
        VB: Backend.ProductType.Labour
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Labour
        path: ''
        startLine: 1399
      syntax:
        content:
          CSharp: Labour = 5
          VB: Labour = 5
        return:
          type: Backend.ProductType
  - id: Backend.Product
    commentId: T:Backend.Product
    language: CSharp
    name:
      CSharp: Product
      VB: Product
    nameWithType:
      CSharp: Product
      VB: Product
    qualifiedName:
      CSharp: Backend.Product
      VB: Backend.Product
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: Product
      path: ''
      startLine: 1403
    syntax:
      content:
        CSharp: public class Product
        VB: Public Class Product
    inheritance:
    - System.Object
    items:
    - id: Backend.Product.Name
      commentId: P:Backend.Product.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: Product.Name
        VB: Product.Name
      qualifiedName:
        CSharp: Backend.Product.Name
        VB: Backend.Product.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Name
        path: ''
        startLine: 1405
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Backend.Product.Name*
    - id: Backend.Product.Price
      commentId: P:Backend.Product.Price
      language: CSharp
      name:
        CSharp: Price
        VB: Price
      nameWithType:
        CSharp: Product.Price
        VB: Product.Price
      qualifiedName:
        CSharp: Backend.Product.Price
        VB: Backend.Product.Price
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Price
        path: ''
        startLine: 1406
      syntax:
        content:
          CSharp: public int Price { get; set; }
          VB: Public Property Price As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Backend.Product.Price*
    - id: Backend.Product.PriceMultiplier
      commentId: P:Backend.Product.PriceMultiplier
      language: CSharp
      name:
        CSharp: PriceMultiplier
        VB: PriceMultiplier
      nameWithType:
        CSharp: Product.PriceMultiplier
        VB: Product.PriceMultiplier
      qualifiedName:
        CSharp: Backend.Product.PriceMultiplier
        VB: Backend.Product.PriceMultiplier
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: PriceMultiplier
        path: ''
        startLine: 1407
      syntax:
        content:
          CSharp: public float PriceMultiplier { get; set; }
          VB: Public Property PriceMultiplier As Single
        parameters: []
        return:
          type: System.Single
      overload: Backend.Product.PriceMultiplier*
    - id: Backend.Product.Buyable
      commentId: P:Backend.Product.Buyable
      language: CSharp
      name:
        CSharp: Buyable
        VB: Buyable
      nameWithType:
        CSharp: Product.Buyable
        VB: Product.Buyable
      qualifiedName:
        CSharp: Backend.Product.Buyable
        VB: Backend.Product.Buyable
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Buyable
        path: ''
        startLine: 1408
      syntax:
        content:
          CSharp: public bool Buyable { get; set; }
          VB: Public Property Buyable As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Backend.Product.Buyable*
    - id: Backend.Product.Type
      commentId: P:Backend.Product.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: Product.Type
        VB: Product.Type
      qualifiedName:
        CSharp: Backend.Product.Type
        VB: Backend.Product.Type
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Type
        path: ''
        startLine: 1409
      syntax:
        content:
          CSharp: public ProductType Type { get; set; }
          VB: Public Property Type As ProductType
        parameters: []
        return:
          type: Backend.ProductType
      overload: Backend.Product.Type*
    - id: Backend.Product.Description
      commentId: P:Backend.Product.Description
      language: CSharp
      name:
        CSharp: Description
        VB: Description
      nameWithType:
        CSharp: Product.Description
        VB: Product.Description
      qualifiedName:
        CSharp: Backend.Product.Description
        VB: Backend.Product.Description
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Description
        path: ''
        startLine: 1410
      syntax:
        content:
          CSharp: public string Description { get; set; }
          VB: Public Property Description As String
        parameters: []
        return:
          type: System.String
      overload: Backend.Product.Description*
    - id: Backend.Product.PurchaseCondition
      commentId: P:Backend.Product.PurchaseCondition
      language: CSharp
      name:
        CSharp: PurchaseCondition
        VB: PurchaseCondition
      nameWithType:
        CSharp: Product.PurchaseCondition
        VB: Product.PurchaseCondition
      qualifiedName:
        CSharp: Backend.Product.PurchaseCondition
        VB: Backend.Product.PurchaseCondition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: PurchaseCondition
        path: ''
        startLine: 1411
      syntax:
        content:
          CSharp: public Func<Household, bool> PurchaseCondition { get; set; }
          VB: Public Property PurchaseCondition As Func(Of Household, Boolean)
        parameters: []
        return:
          type: Global.Func{Backend.Household,System.Boolean}
      overload: Backend.Product.PurchaseCondition*
    - id: Backend.Product.BuyAction
      commentId: P:Backend.Product.BuyAction
      language: CSharp
      name:
        CSharp: BuyAction
        VB: BuyAction
      nameWithType:
        CSharp: Product.BuyAction
        VB: Product.BuyAction
      qualifiedName:
        CSharp: Backend.Product.BuyAction
        VB: Backend.Product.BuyAction
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: BuyAction
        path: ''
        startLine: 1412
      syntax:
        content:
          CSharp: public Action<Household> BuyAction { get; set; }
          VB: Public Property BuyAction As Action(Of Household)
        parameters: []
        return:
          type: Global.Action{Backend.Household}
      overload: Backend.Product.BuyAction*
  - id: Backend.Market
    commentId: T:Backend.Market
    language: CSharp
    name:
      CSharp: Market
      VB: Market
    nameWithType:
      CSharp: Market
      VB: Market
    qualifiedName:
      CSharp: Backend.Market
      VB: Backend.Market
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: Market
      path: ''
      startLine: 1414
    syntax:
      content:
        CSharp: public static class Market
        VB: Public Module Market
    inheritance:
    - System.Object
    items:
    - id: Backend.Market.PlotsPerTubewell
      commentId: F:Backend.Market.PlotsPerTubewell
      language: CSharp
      name:
        CSharp: PlotsPerTubewell
        VB: PlotsPerTubewell
      nameWithType:
        CSharp: Market.PlotsPerTubewell
        VB: Market.PlotsPerTubewell
      qualifiedName:
        CSharp: Backend.Market.PlotsPerTubewell
        VB: Backend.Market.PlotsPerTubewell
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: PlotsPerTubewell
        path: ''
        startLine: 1417
      syntax:
        content:
          CSharp: public const int PlotsPerTubewell = 8
          VB: Public Const PlotsPerTubewell As Integer = 8
        return:
          type: System.Int32
    - id: Backend.Market.Initialize
      commentId: M:Backend.Market.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: Market.Initialize()
        VB: Market.Initialize()
      qualifiedName:
        CSharp: Backend.Market.Initialize()
        VB: Backend.Market.Initialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Initialize
        path: ''
        startLine: 1420
      syntax:
        content:
          CSharp: public static void Initialize()
          VB: Public Shared Sub Initialize()
      overload: Backend.Market.Initialize*
    - id: Backend.Market.Buy(System.String,Backend.Household)
      commentId: M:Backend.Market.Buy(System.String,Backend.Household)
      language: CSharp
      name:
        CSharp: Buy(string, Household)
        VB: Buy(String, Household)
      nameWithType:
        CSharp: Market.Buy(string, Household)
        VB: Market.Buy(String, Household)
      qualifiedName:
        CSharp: Backend.Market.Buy(string, Backend.Household)
        VB: Backend.Market.Buy(String, Backend.Household)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Buy
        path: ''
        startLine: 1462
      syntax:
        content:
          CSharp: public static string Buy(string name, Household buyer)
          VB: Public Shared Function Buy(name As String, buyer As Household) As String
        parameters:
        - id: name
          type: System.String
        - id: buyer
          type: Backend.Household
        return:
          type: System.String
      overload: Backend.Market.Buy*
    - id: Backend.Market.Sell(Backend.Household,System.Int32,System.String)
      commentId: M:Backend.Market.Sell(Backend.Household,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: Sell(Household, int, string)
        VB: Sell(Household, Integer, String)
      nameWithType:
        CSharp: Market.Sell(Household, int, string)
        VB: Market.Sell(Household, Integer, String)
      qualifiedName:
        CSharp: Backend.Market.Sell(Backend.Household, int, string)
        VB: Backend.Market.Sell(Backend.Household, Integer, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: Sell
        path: ''
        startLine: 1486
      syntax:
        content:
          CSharp: public static void Sell(Household seller, int quantity, string product)
          VB: Public Shared Sub Sell(seller As Household, quantity As Integer, product As String)
        parameters:
        - id: seller
          type: Backend.Household
        - id: quantity
          type: System.Int32
        - id: product
          type: System.String
      overload: Backend.Market.Sell*
    - id: Backend.Market.UpdateWheatPrice
      commentId: M:Backend.Market.UpdateWheatPrice
      language: CSharp
      name:
        CSharp: UpdateWheatPrice()
        VB: UpdateWheatPrice()
      nameWithType:
        CSharp: Market.UpdateWheatPrice()
        VB: Market.UpdateWheatPrice()
      qualifiedName:
        CSharp: Backend.Market.UpdateWheatPrice()
        VB: Backend.Market.UpdateWheatPrice()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: UpdateWheatPrice
        path: ''
        startLine: 1517
      syntax:
        content:
          CSharp: public static void UpdateWheatPrice()
          VB: Public Shared Sub UpdateWheatPrice()
      overload: Backend.Market.UpdateWheatPrice*
    - id: Backend.Market.AddProduct(System.String,System.Int32,Backend.ProductType,System.String,System.Single)
      commentId: M:Backend.Market.AddProduct(System.String,System.Int32,Backend.ProductType,System.String,System.Single)
      language: CSharp
      name:
        CSharp: AddProduct(string, int, ProductType, string, float)
        VB: AddProduct(String, Integer, ProductType, String, Single)
      nameWithType:
        CSharp: Market.AddProduct(string, int, ProductType, string, float)
        VB: Market.AddProduct(String, Integer, ProductType, String, Single)
      qualifiedName:
        CSharp: Backend.Market.AddProduct(string, int, Backend.ProductType, string, float)
        VB: Backend.Market.AddProduct(String, Integer, Backend.ProductType, String, Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: AddProduct
        path: ''
        startLine: 1524
      syntax:
        content:
          CSharp: public static void AddProduct(string name, int price, ProductType type, string description = "", float multiplier = 1)
          VB: Public Shared Sub AddProduct(name As String, price As Integer, type As ProductType, description As String = "", multiplier As Single = 1)
        parameters:
        - id: name
          type: System.String
        - id: price
          type: System.Int32
        - id: type
          type: Backend.ProductType
        - id: description
          type: System.String
        - id: multiplier
          type: System.Single
      overload: Backend.Market.AddProduct*
    - id: Backend.Market.RemoveProduct(System.String)
      commentId: M:Backend.Market.RemoveProduct(System.String)
      language: CSharp
      name:
        CSharp: RemoveProduct(string)
        VB: RemoveProduct(String)
      nameWithType:
        CSharp: Market.RemoveProduct(string)
        VB: Market.RemoveProduct(String)
      qualifiedName:
        CSharp: Backend.Market.RemoveProduct(string)
        VB: Backend.Market.RemoveProduct(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: RemoveProduct
        path: ''
        startLine: 1544
      syntax:
        content:
          CSharp: public static void RemoveProduct(string name)
          VB: Public Shared Sub RemoveProduct(name As String)
        parameters:
        - id: name
          type: System.String
      overload: Backend.Market.RemoveProduct*
    - id: Backend.Market.CanBuyerBuy(Backend.Household,System.String)
      commentId: M:Backend.Market.CanBuyerBuy(Backend.Household,System.String)
      language: CSharp
      name:
        CSharp: CanBuyerBuy(Household, string)
        VB: CanBuyerBuy(Household, String)
      nameWithType:
        CSharp: Market.CanBuyerBuy(Household, string)
        VB: Market.CanBuyerBuy(Household, String)
      qualifiedName:
        CSharp: Backend.Market.CanBuyerBuy(Backend.Household, string)
        VB: Backend.Market.CanBuyerBuy(Backend.Household, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: CanBuyerBuy
        path: ''
        startLine: 1550
      syntax:
        content:
          CSharp: public static bool CanBuyerBuy(Household buyer, string productName)
          VB: Public Shared Function CanBuyerBuy(buyer As Household, productName As String) As Boolean
        parameters:
        - id: buyer
          type: Backend.Household
        - id: productName
          type: System.String
        return:
          type: System.Boolean
      overload: Backend.Market.CanBuyerBuy*
    - id: Backend.Market.GetPrice(System.String)
      commentId: M:Backend.Market.GetPrice(System.String)
      language: CSharp
      name:
        CSharp: GetPrice(string)
        VB: GetPrice(String)
      nameWithType:
        CSharp: Market.GetPrice(string)
        VB: Market.GetPrice(String)
      qualifiedName:
        CSharp: Backend.Market.GetPrice(string)
        VB: Backend.Market.GetPrice(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: GetPrice
        path: ''
        startLine: 1559
      syntax:
        content:
          CSharp: public static int GetPrice(string name)
          VB: Public Shared Function GetPrice(name As String) As Integer
        parameters:
        - id: name
          type: System.String
        return:
          type: System.Int32
      overload: Backend.Market.GetPrice*
    - id: Backend.Market.SetPriceMultiplier(System.String,System.Single)
      commentId: M:Backend.Market.SetPriceMultiplier(System.String,System.Single)
      language: CSharp
      name:
        CSharp: SetPriceMultiplier(string, float)
        VB: SetPriceMultiplier(String, Single)
      nameWithType:
        CSharp: Market.SetPriceMultiplier(string, float)
        VB: Market.SetPriceMultiplier(String, Single)
      qualifiedName:
        CSharp: Backend.Market.SetPriceMultiplier(string, float)
        VB: Backend.Market.SetPriceMultiplier(String, Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: SetPriceMultiplier
        path: ''
        startLine: 1566
      syntax:
        content:
          CSharp: public static void SetPriceMultiplier(string name, float mult)
          VB: Public Shared Sub SetPriceMultiplier(name As String, mult As Single)
        parameters:
        - id: name
          type: System.String
        - id: mult
          type: System.Single
      overload: Backend.Market.SetPriceMultiplier*
    - id: Backend.Market.ActivateProduct(System.String)
      commentId: M:Backend.Market.ActivateProduct(System.String)
      language: CSharp
      name:
        CSharp: ActivateProduct(string)
        VB: ActivateProduct(String)
      nameWithType:
        CSharp: Market.ActivateProduct(string)
        VB: Market.ActivateProduct(String)
      qualifiedName:
        CSharp: Backend.Market.ActivateProduct(string)
        VB: Backend.Market.ActivateProduct(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: ActivateProduct
        path: ''
        startLine: 1573
      syntax:
        content:
          CSharp: public static void ActivateProduct(string name)
          VB: Public Shared Sub ActivateProduct(name As String)
        parameters:
        - id: name
          type: System.String
      overload: Backend.Market.ActivateProduct*
    - id: Backend.Market.DeactivateProduct(System.String)
      commentId: M:Backend.Market.DeactivateProduct(System.String)
      language: CSharp
      name:
        CSharp: DeactivateProduct(string)
        VB: DeactivateProduct(String)
      nameWithType:
        CSharp: Market.DeactivateProduct(string)
        VB: Market.DeactivateProduct(String)
      qualifiedName:
        CSharp: Backend.Market.DeactivateProduct(string)
        VB: Backend.Market.DeactivateProduct(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: DeactivateProduct
        path: ''
        startLine: 1580
      syntax:
        content:
          CSharp: public static void DeactivateProduct(string name)
          VB: Public Shared Sub DeactivateProduct(name As String)
        parameters:
        - id: name
          type: System.String
      overload: Backend.Market.DeactivateProduct*
    - id: Backend.Market.IsBuyable(System.String)
      commentId: M:Backend.Market.IsBuyable(System.String)
      language: CSharp
      name:
        CSharp: IsBuyable(string)
        VB: IsBuyable(String)
      nameWithType:
        CSharp: Market.IsBuyable(string)
        VB: Market.IsBuyable(String)
      qualifiedName:
        CSharp: Backend.Market.IsBuyable(string)
        VB: Backend.Market.IsBuyable(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: IsBuyable
        path: ''
        startLine: 1587
      syntax:
        content:
          CSharp: public static bool IsBuyable(string name)
          VB: Public Shared Function IsBuyable(name As String) As Boolean
        parameters:
        - id: name
          type: System.String
        return:
          type: System.Boolean
      overload: Backend.Market.IsBuyable*
    - id: Backend.Market.GetDescription(System.String)
      commentId: M:Backend.Market.GetDescription(System.String)
      language: CSharp
      name:
        CSharp: GetDescription(string)
        VB: GetDescription(String)
      nameWithType:
        CSharp: Market.GetDescription(string)
        VB: Market.GetDescription(String)
      qualifiedName:
        CSharp: Backend.Market.GetDescription(string)
        VB: Backend.Market.GetDescription(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: GetDescription
        path: ''
        startLine: 1594
      syntax:
        content:
          CSharp: public static string GetDescription(string name)
          VB: Public Shared Function GetDescription(name As String) As String
        parameters:
        - id: name
          type: System.String
        return:
          type: System.String
      overload: Backend.Market.GetDescription*
  - id: Backend.YieldPerformanceTable
    commentId: T:Backend.YieldPerformanceTable
    language: CSharp
    name:
      CSharp: YieldPerformanceTable
      VB: YieldPerformanceTable
    nameWithType:
      CSharp: YieldPerformanceTable
      VB: YieldPerformanceTable
    qualifiedName:
      CSharp: Backend.YieldPerformanceTable
      VB: Backend.YieldPerformanceTable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Backend
    source:
      id: YieldPerformanceTable
      path: ''
      startLine: 1608
    syntax:
      content:
        CSharp: public static class YieldPerformanceTable
        VB: Public Module YieldPerformanceTable
    inheritance:
    - System.Object
    items:
    - id: Backend.YieldPerformanceTable.GetYield(Backend.FarmPlot)
      commentId: M:Backend.YieldPerformanceTable.GetYield(Backend.FarmPlot)
      language: CSharp
      name:
        CSharp: GetYield(FarmPlot)
        VB: GetYield(FarmPlot)
      nameWithType:
        CSharp: YieldPerformanceTable.GetYield(FarmPlot)
        VB: YieldPerformanceTable.GetYield(FarmPlot)
      qualifiedName:
        CSharp: Backend.YieldPerformanceTable.GetYield(Backend.FarmPlot)
        VB: Backend.YieldPerformanceTable.GetYield(Backend.FarmPlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Backend
      source:
        id: GetYield
        path: ''
        startLine: 1622
      syntax:
        content:
          CSharp: public static int GetYield(FarmPlot plot)
          VB: Public Shared Function GetYield(plot As FarmPlot) As Integer
        parameters:
        - id: plot
          type: Backend.FarmPlot
        return:
          type: System.Int32
      overload: Backend.YieldPerformanceTable.GetYield*
references:
  Global.UIDocument:
    name:
      CSharp:
      - id: Global.UIDocument
        name: UIDocument
        isExternal: true
      VB:
      - id: Global.UIDocument
        name: UIDocument
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.UIDocument
        name: UIDocument
        isExternal: true
      VB:
      - id: Global.UIDocument
        name: UIDocument
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.UIDocument
        name: UIDocument
        isExternal: true
      VB:
      - id: Global.UIDocument
        name: UIDocument
        isExternal: true
    isDefinition: true
  Global.AnswerCorrect1.OnCorrectClick*:
    name:
      CSharp:
      - id: Global.AnswerCorrect1.OnCorrectClick*
        name: OnCorrectClick
      VB:
      - id: Global.AnswerCorrect1.OnCorrectClick*
        name: OnCorrectClick
    nameWithType:
      CSharp:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnCorrectClick*
        name: OnCorrectClick
      VB:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnCorrectClick*
        name: OnCorrectClick
    qualifiedName:
      CSharp:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnCorrectClick*
        name: OnCorrectClick
      VB:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnCorrectClick*
        name: OnCorrectClick
    isDefinition: true
    commentId: Overload:Global.AnswerCorrect1.OnCorrectClick
  Global.AnswerCorrect1.OnWrongAClick*:
    name:
      CSharp:
      - id: Global.AnswerCorrect1.OnWrongAClick*
        name: OnWrongAClick
      VB:
      - id: Global.AnswerCorrect1.OnWrongAClick*
        name: OnWrongAClick
    nameWithType:
      CSharp:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnWrongAClick*
        name: OnWrongAClick
      VB:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnWrongAClick*
        name: OnWrongAClick
    qualifiedName:
      CSharp:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnWrongAClick*
        name: OnWrongAClick
      VB:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnWrongAClick*
        name: OnWrongAClick
    isDefinition: true
    commentId: Overload:Global.AnswerCorrect1.OnWrongAClick
  Global.AnswerCorrect1.OnWrongCClick*:
    name:
      CSharp:
      - id: Global.AnswerCorrect1.OnWrongCClick*
        name: OnWrongCClick
      VB:
      - id: Global.AnswerCorrect1.OnWrongCClick*
        name: OnWrongCClick
    nameWithType:
      CSharp:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnWrongCClick*
        name: OnWrongCClick
      VB:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnWrongCClick*
        name: OnWrongCClick
    qualifiedName:
      CSharp:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnWrongCClick*
        name: OnWrongCClick
      VB:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnWrongCClick*
        name: OnWrongCClick
    isDefinition: true
    commentId: Overload:Global.AnswerCorrect1.OnWrongCClick
  Global.AnswerCorrect1.OnWrongDClick*:
    name:
      CSharp:
      - id: Global.AnswerCorrect1.OnWrongDClick*
        name: OnWrongDClick
      VB:
      - id: Global.AnswerCorrect1.OnWrongDClick*
        name: OnWrongDClick
    nameWithType:
      CSharp:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnWrongDClick*
        name: OnWrongDClick
      VB:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnWrongDClick*
        name: OnWrongDClick
    qualifiedName:
      CSharp:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnWrongDClick*
        name: OnWrongDClick
      VB:
      - id: Global.AnswerCorrect1*
        name: AnswerCorrect1
      - name: .
      - id: Global.AnswerCorrect1.OnWrongDClick*
        name: OnWrongDClick
    isDefinition: true
    commentId: Overload:Global.AnswerCorrect1.OnWrongDClick
  Global.AnswerCorrect1:
    name:
      CSharp:
      - id: Global.AnswerCorrect1
        name: AnswerCorrect1
      VB:
      - id: Global.AnswerCorrect1
        name: AnswerCorrect1
    nameWithType:
      CSharp:
      - id: Global.AnswerCorrect1
        name: AnswerCorrect1
      VB:
      - id: Global.AnswerCorrect1
        name: AnswerCorrect1
    qualifiedName:
      CSharp:
      - id: Global.AnswerCorrect1
        name: AnswerCorrect1
      VB:
      - id: Global.AnswerCorrect1
        name: AnswerCorrect1
    isDefinition: true
    commentId: T:Global.AnswerCorrect1
  Global.Assessment2.OnCorrectClick*:
    name:
      CSharp:
      - id: Global.Assessment2.OnCorrectClick*
        name: OnCorrectClick
      VB:
      - id: Global.Assessment2.OnCorrectClick*
        name: OnCorrectClick
    nameWithType:
      CSharp:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnCorrectClick*
        name: OnCorrectClick
      VB:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnCorrectClick*
        name: OnCorrectClick
    qualifiedName:
      CSharp:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnCorrectClick*
        name: OnCorrectClick
      VB:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnCorrectClick*
        name: OnCorrectClick
    isDefinition: true
    commentId: Overload:Global.Assessment2.OnCorrectClick
  Global.Assessment2.OnWrongAClick*:
    name:
      CSharp:
      - id: Global.Assessment2.OnWrongAClick*
        name: OnWrongAClick
      VB:
      - id: Global.Assessment2.OnWrongAClick*
        name: OnWrongAClick
    nameWithType:
      CSharp:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongAClick*
        name: OnWrongAClick
      VB:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongAClick*
        name: OnWrongAClick
    qualifiedName:
      CSharp:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongAClick*
        name: OnWrongAClick
      VB:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongAClick*
        name: OnWrongAClick
    isDefinition: true
    commentId: Overload:Global.Assessment2.OnWrongAClick
  Global.Assessment2.OnWrongBClick*:
    name:
      CSharp:
      - id: Global.Assessment2.OnWrongBClick*
        name: OnWrongBClick
      VB:
      - id: Global.Assessment2.OnWrongBClick*
        name: OnWrongBClick
    nameWithType:
      CSharp:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongBClick*
        name: OnWrongBClick
      VB:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongBClick*
        name: OnWrongBClick
    qualifiedName:
      CSharp:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongBClick*
        name: OnWrongBClick
      VB:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongBClick*
        name: OnWrongBClick
    isDefinition: true
    commentId: Overload:Global.Assessment2.OnWrongBClick
  Global.Assessment2.OnWrongCClick*:
    name:
      CSharp:
      - id: Global.Assessment2.OnWrongCClick*
        name: OnWrongCClick
      VB:
      - id: Global.Assessment2.OnWrongCClick*
        name: OnWrongCClick
    nameWithType:
      CSharp:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongCClick*
        name: OnWrongCClick
      VB:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongCClick*
        name: OnWrongCClick
    qualifiedName:
      CSharp:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongCClick*
        name: OnWrongCClick
      VB:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongCClick*
        name: OnWrongCClick
    isDefinition: true
    commentId: Overload:Global.Assessment2.OnWrongCClick
  Global.Assessment2.OnWrongDClick*:
    name:
      CSharp:
      - id: Global.Assessment2.OnWrongDClick*
        name: OnWrongDClick
      VB:
      - id: Global.Assessment2.OnWrongDClick*
        name: OnWrongDClick
    nameWithType:
      CSharp:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongDClick*
        name: OnWrongDClick
      VB:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongDClick*
        name: OnWrongDClick
    qualifiedName:
      CSharp:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongDClick*
        name: OnWrongDClick
      VB:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongDClick*
        name: OnWrongDClick
    isDefinition: true
    commentId: Overload:Global.Assessment2.OnWrongDClick
  Global.Assessment2.OnWrongFClick*:
    name:
      CSharp:
      - id: Global.Assessment2.OnWrongFClick*
        name: OnWrongFClick
      VB:
      - id: Global.Assessment2.OnWrongFClick*
        name: OnWrongFClick
    nameWithType:
      CSharp:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongFClick*
        name: OnWrongFClick
      VB:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongFClick*
        name: OnWrongFClick
    qualifiedName:
      CSharp:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongFClick*
        name: OnWrongFClick
      VB:
      - id: Global.Assessment2*
        name: Assessment2
      - name: .
      - id: Global.Assessment2.OnWrongFClick*
        name: OnWrongFClick
    isDefinition: true
    commentId: Overload:Global.Assessment2.OnWrongFClick
  Global.Assessment2:
    name:
      CSharp:
      - id: Global.Assessment2
        name: Assessment2
      VB:
      - id: Global.Assessment2
        name: Assessment2
    nameWithType:
      CSharp:
      - id: Global.Assessment2
        name: Assessment2
      VB:
      - id: Global.Assessment2
        name: Assessment2
    qualifiedName:
      CSharp:
      - id: Global.Assessment2
        name: Assessment2
      VB:
      - id: Global.Assessment2
        name: Assessment2
    isDefinition: true
    commentId: T:Global.Assessment2
  Global.Assessment3.OnCorrectClick*:
    name:
      CSharp:
      - id: Global.Assessment3.OnCorrectClick*
        name: OnCorrectClick
      VB:
      - id: Global.Assessment3.OnCorrectClick*
        name: OnCorrectClick
    nameWithType:
      CSharp:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnCorrectClick*
        name: OnCorrectClick
      VB:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnCorrectClick*
        name: OnCorrectClick
    qualifiedName:
      CSharp:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnCorrectClick*
        name: OnCorrectClick
      VB:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnCorrectClick*
        name: OnCorrectClick
    isDefinition: true
    commentId: Overload:Global.Assessment3.OnCorrectClick
  Global.Assessment3.OnWrongAClick*:
    name:
      CSharp:
      - id: Global.Assessment3.OnWrongAClick*
        name: OnWrongAClick
      VB:
      - id: Global.Assessment3.OnWrongAClick*
        name: OnWrongAClick
    nameWithType:
      CSharp:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongAClick*
        name: OnWrongAClick
      VB:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongAClick*
        name: OnWrongAClick
    qualifiedName:
      CSharp:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongAClick*
        name: OnWrongAClick
      VB:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongAClick*
        name: OnWrongAClick
    isDefinition: true
    commentId: Overload:Global.Assessment3.OnWrongAClick
  Global.Assessment3.OnWrongBClick*:
    name:
      CSharp:
      - id: Global.Assessment3.OnWrongBClick*
        name: OnWrongBClick
      VB:
      - id: Global.Assessment3.OnWrongBClick*
        name: OnWrongBClick
    nameWithType:
      CSharp:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongBClick*
        name: OnWrongBClick
      VB:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongBClick*
        name: OnWrongBClick
    qualifiedName:
      CSharp:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongBClick*
        name: OnWrongBClick
      VB:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongBClick*
        name: OnWrongBClick
    isDefinition: true
    commentId: Overload:Global.Assessment3.OnWrongBClick
  Global.Assessment3.OnWrongCClick*:
    name:
      CSharp:
      - id: Global.Assessment3.OnWrongCClick*
        name: OnWrongCClick
      VB:
      - id: Global.Assessment3.OnWrongCClick*
        name: OnWrongCClick
    nameWithType:
      CSharp:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongCClick*
        name: OnWrongCClick
      VB:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongCClick*
        name: OnWrongCClick
    qualifiedName:
      CSharp:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongCClick*
        name: OnWrongCClick
      VB:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongCClick*
        name: OnWrongCClick
    isDefinition: true
    commentId: Overload:Global.Assessment3.OnWrongCClick
  Global.Assessment3.OnWrongDClick*:
    name:
      CSharp:
      - id: Global.Assessment3.OnWrongDClick*
        name: OnWrongDClick
      VB:
      - id: Global.Assessment3.OnWrongDClick*
        name: OnWrongDClick
    nameWithType:
      CSharp:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongDClick*
        name: OnWrongDClick
      VB:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongDClick*
        name: OnWrongDClick
    qualifiedName:
      CSharp:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongDClick*
        name: OnWrongDClick
      VB:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongDClick*
        name: OnWrongDClick
    isDefinition: true
    commentId: Overload:Global.Assessment3.OnWrongDClick
  Global.Assessment3.OnWrongEClick*:
    name:
      CSharp:
      - id: Global.Assessment3.OnWrongEClick*
        name: OnWrongEClick
      VB:
      - id: Global.Assessment3.OnWrongEClick*
        name: OnWrongEClick
    nameWithType:
      CSharp:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongEClick*
        name: OnWrongEClick
      VB:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongEClick*
        name: OnWrongEClick
    qualifiedName:
      CSharp:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongEClick*
        name: OnWrongEClick
      VB:
      - id: Global.Assessment3*
        name: Assessment3
      - name: .
      - id: Global.Assessment3.OnWrongEClick*
        name: OnWrongEClick
    isDefinition: true
    commentId: Overload:Global.Assessment3.OnWrongEClick
  Global.Assessment3:
    name:
      CSharp:
      - id: Global.Assessment3
        name: Assessment3
      VB:
      - id: Global.Assessment3
        name: Assessment3
    nameWithType:
      CSharp:
      - id: Global.Assessment3
        name: Assessment3
      VB:
      - id: Global.Assessment3
        name: Assessment3
    qualifiedName:
      CSharp:
      - id: Global.Assessment3
        name: Assessment3
      VB:
      - id: Global.Assessment3
        name: Assessment3
    isDefinition: true
    commentId: T:Global.Assessment3
  Global.ClickEvent:
    name:
      CSharp:
      - id: Global.ClickEvent
        name: ClickEvent
        isExternal: true
      VB:
      - id: Global.ClickEvent
        name: ClickEvent
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.ClickEvent
        name: ClickEvent
        isExternal: true
      VB:
      - id: Global.ClickEvent
        name: ClickEvent
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.ClickEvent
        name: ClickEvent
        isExternal: true
      VB:
      - id: Global.ClickEvent
        name: ClickEvent
        isExternal: true
    isDefinition: true
    commentId: '!:Global.ClickEvent'
  Global.PopupButton.OnButtonClick*:
    name:
      CSharp:
      - id: Global.PopupButton.OnButtonClick*
        name: OnButtonClick
      VB:
      - id: Global.PopupButton.OnButtonClick*
        name: OnButtonClick
    nameWithType:
      CSharp:
      - id: Global.PopupButton*
        name: PopupButton
      - name: .
      - id: Global.PopupButton.OnButtonClick*
        name: OnButtonClick
      VB:
      - id: Global.PopupButton*
        name: PopupButton
      - name: .
      - id: Global.PopupButton.OnButtonClick*
        name: OnButtonClick
    qualifiedName:
      CSharp:
      - id: Global.PopupButton*
        name: PopupButton
      - name: .
      - id: Global.PopupButton.OnButtonClick*
        name: OnButtonClick
      VB:
      - id: Global.PopupButton*
        name: PopupButton
      - name: .
      - id: Global.PopupButton.OnButtonClick*
        name: OnButtonClick
    isDefinition: true
    commentId: Overload:Global.PopupButton.OnButtonClick
  Global.PopupButton:
    name:
      CSharp:
      - id: Global.PopupButton
        name: PopupButton
      VB:
      - id: Global.PopupButton
        name: PopupButton
    nameWithType:
      CSharp:
      - id: Global.PopupButton
        name: PopupButton
      VB:
      - id: Global.PopupButton
        name: PopupButton
    qualifiedName:
      CSharp:
      - id: Global.PopupButton
        name: PopupButton
      VB:
      - id: Global.PopupButton
        name: PopupButton
    isDefinition: true
    commentId: T:Global.PopupButton
  Global.Result:
    name:
      CSharp:
      - id: Global.Result
        name: Result
      VB:
      - id: Global.Result
        name: Result
    nameWithType:
      CSharp:
      - id: Global.Result
        name: Result
      VB:
      - id: Global.Result
        name: Result
    qualifiedName:
      CSharp:
      - id: Global.Result
        name: Result
      VB:
      - id: Global.Result
        name: Result
    isDefinition: true
    commentId: T:Global.Result
  Global.URLButtons.OnEwbClick*:
    name:
      CSharp:
      - id: Global.URLButtons.OnEwbClick*
        name: OnEwbClick
      VB:
      - id: Global.URLButtons.OnEwbClick*
        name: OnEwbClick
    nameWithType:
      CSharp:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnEwbClick*
        name: OnEwbClick
      VB:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnEwbClick*
        name: OnEwbClick
    qualifiedName:
      CSharp:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnEwbClick*
        name: OnEwbClick
      VB:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnEwbClick*
        name: OnEwbClick
    isDefinition: true
    commentId: Overload:Global.URLButtons.OnEwbClick
  Global.URLButtons.OnFbClick*:
    name:
      CSharp:
      - id: Global.URLButtons.OnFbClick*
        name: OnFbClick
      VB:
      - id: Global.URLButtons.OnFbClick*
        name: OnFbClick
    nameWithType:
      CSharp:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnFbClick*
        name: OnFbClick
      VB:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnFbClick*
        name: OnFbClick
    qualifiedName:
      CSharp:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnFbClick*
        name: OnFbClick
      VB:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnFbClick*
        name: OnFbClick
    isDefinition: true
    commentId: Overload:Global.URLButtons.OnFbClick
  Global.URLButtons.OnInsClick*:
    name:
      CSharp:
      - id: Global.URLButtons.OnInsClick*
        name: OnInsClick
      VB:
      - id: Global.URLButtons.OnInsClick*
        name: OnInsClick
    nameWithType:
      CSharp:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnInsClick*
        name: OnInsClick
      VB:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnInsClick*
        name: OnInsClick
    qualifiedName:
      CSharp:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnInsClick*
        name: OnInsClick
      VB:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnInsClick*
        name: OnInsClick
    isDefinition: true
    commentId: Overload:Global.URLButtons.OnInsClick
  Global.URLButtons.OnLinkedinClick*:
    name:
      CSharp:
      - id: Global.URLButtons.OnLinkedinClick*
        name: OnLinkedinClick
      VB:
      - id: Global.URLButtons.OnLinkedinClick*
        name: OnLinkedinClick
    nameWithType:
      CSharp:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnLinkedinClick*
        name: OnLinkedinClick
      VB:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnLinkedinClick*
        name: OnLinkedinClick
    qualifiedName:
      CSharp:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnLinkedinClick*
        name: OnLinkedinClick
      VB:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnLinkedinClick*
        name: OnLinkedinClick
    isDefinition: true
    commentId: Overload:Global.URLButtons.OnLinkedinClick
  Global.URLButtons.OnTwitterClick*:
    name:
      CSharp:
      - id: Global.URLButtons.OnTwitterClick*
        name: OnTwitterClick
      VB:
      - id: Global.URLButtons.OnTwitterClick*
        name: OnTwitterClick
    nameWithType:
      CSharp:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnTwitterClick*
        name: OnTwitterClick
      VB:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnTwitterClick*
        name: OnTwitterClick
    qualifiedName:
      CSharp:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnTwitterClick*
        name: OnTwitterClick
      VB:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnTwitterClick*
        name: OnTwitterClick
    isDefinition: true
    commentId: Overload:Global.URLButtons.OnTwitterClick
  Global.URLButtons.OnPrivacyPolicyClick*:
    name:
      CSharp:
      - id: Global.URLButtons.OnPrivacyPolicyClick*
        name: OnPrivacyPolicyClick
      VB:
      - id: Global.URLButtons.OnPrivacyPolicyClick*
        name: OnPrivacyPolicyClick
    nameWithType:
      CSharp:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnPrivacyPolicyClick*
        name: OnPrivacyPolicyClick
      VB:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnPrivacyPolicyClick*
        name: OnPrivacyPolicyClick
    qualifiedName:
      CSharp:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnPrivacyPolicyClick*
        name: OnPrivacyPolicyClick
      VB:
      - id: Global.URLButtons*
        name: URLButtons
      - name: .
      - id: Global.URLButtons.OnPrivacyPolicyClick*
        name: OnPrivacyPolicyClick
    isDefinition: true
    commentId: Overload:Global.URLButtons.OnPrivacyPolicyClick
  Global.URLButtons:
    name:
      CSharp:
      - id: Global.URLButtons
        name: URLButtons
      VB:
      - id: Global.URLButtons
        name: URLButtons
    nameWithType:
      CSharp:
      - id: Global.URLButtons
        name: URLButtons
      VB:
      - id: Global.URLButtons
        name: URLButtons
    qualifiedName:
      CSharp:
      - id: Global.URLButtons
        name: URLButtons
      VB:
      - id: Global.URLButtons
        name: URLButtons
    isDefinition: true
    commentId: T:Global.URLButtons
  Global.AdvancePhaseOnClick.OnClick*:
    name:
      CSharp:
      - id: Global.AdvancePhaseOnClick.OnClick*
        name: OnClick
      VB:
      - id: Global.AdvancePhaseOnClick.OnClick*
        name: OnClick
    nameWithType:
      CSharp:
      - id: Global.AdvancePhaseOnClick*
        name: AdvancePhaseOnClick
      - name: .
      - id: Global.AdvancePhaseOnClick.OnClick*
        name: OnClick
      VB:
      - id: Global.AdvancePhaseOnClick*
        name: AdvancePhaseOnClick
      - name: .
      - id: Global.AdvancePhaseOnClick.OnClick*
        name: OnClick
    qualifiedName:
      CSharp:
      - id: Global.AdvancePhaseOnClick*
        name: AdvancePhaseOnClick
      - name: .
      - id: Global.AdvancePhaseOnClick.OnClick*
        name: OnClick
      VB:
      - id: Global.AdvancePhaseOnClick*
        name: AdvancePhaseOnClick
      - name: .
      - id: Global.AdvancePhaseOnClick.OnClick*
        name: OnClick
    isDefinition: true
    commentId: Overload:Global.AdvancePhaseOnClick.OnClick
  Global.AdvancePhaseOnClick:
    name:
      CSharp:
      - id: Global.AdvancePhaseOnClick
        name: AdvancePhaseOnClick
      VB:
      - id: Global.AdvancePhaseOnClick
        name: AdvancePhaseOnClick
    nameWithType:
      CSharp:
      - id: Global.AdvancePhaseOnClick
        name: AdvancePhaseOnClick
      VB:
      - id: Global.AdvancePhaseOnClick
        name: AdvancePhaseOnClick
    qualifiedName:
      CSharp:
      - id: Global.AdvancePhaseOnClick
        name: AdvancePhaseOnClick
      VB:
      - id: Global.AdvancePhaseOnClick
        name: AdvancePhaseOnClick
    isDefinition: true
    commentId: T:Global.AdvancePhaseOnClick
  Global.AvailableLabourDisplayer:
    name:
      CSharp:
      - id: Global.AvailableLabourDisplayer
        name: AvailableLabourDisplayer
      VB:
      - id: Global.AvailableLabourDisplayer
        name: AvailableLabourDisplayer
    nameWithType:
      CSharp:
      - id: Global.AvailableLabourDisplayer
        name: AvailableLabourDisplayer
      VB:
      - id: Global.AvailableLabourDisplayer
        name: AvailableLabourDisplayer
    qualifiedName:
      CSharp:
      - id: Global.AvailableLabourDisplayer
        name: AvailableLabourDisplayer
      VB:
      - id: Global.AvailableLabourDisplayer
        name: AvailableLabourDisplayer
    isDefinition: true
    commentId: T:Global.AvailableLabourDisplayer
  Global.BuyButton.OnClick*:
    name:
      CSharp:
      - id: Global.BuyButton.OnClick*
        name: OnClick
      VB:
      - id: Global.BuyButton.OnClick*
        name: OnClick
    nameWithType:
      CSharp:
      - id: Global.BuyButton*
        name: BuyButton
      - name: .
      - id: Global.BuyButton.OnClick*
        name: OnClick
      VB:
      - id: Global.BuyButton*
        name: BuyButton
      - name: .
      - id: Global.BuyButton.OnClick*
        name: OnClick
    qualifiedName:
      CSharp:
      - id: Global.BuyButton*
        name: BuyButton
      - name: .
      - id: Global.BuyButton.OnClick*
        name: OnClick
      VB:
      - id: Global.BuyButton*
        name: BuyButton
      - name: .
      - id: Global.BuyButton.OnClick*
        name: OnClick
    isDefinition: true
    commentId: Overload:Global.BuyButton.OnClick
  Global.BuyButton:
    name:
      CSharp:
      - id: Global.BuyButton
        name: BuyButton
      VB:
      - id: Global.BuyButton
        name: BuyButton
    nameWithType:
      CSharp:
      - id: Global.BuyButton
        name: BuyButton
      VB:
      - id: Global.BuyButton
        name: BuyButton
    qualifiedName:
      CSharp:
      - id: Global.BuyButton
        name: BuyButton
      VB:
      - id: Global.BuyButton
        name: BuyButton
    isDefinition: true
    commentId: T:Global.BuyButton
  Global.ChildPopulator:
    name:
      CSharp:
      - id: Global.ChildPopulator
        name: ChildPopulator
      VB:
      - id: Global.ChildPopulator
        name: ChildPopulator
    nameWithType:
      CSharp:
      - id: Global.ChildPopulator
        name: ChildPopulator
      VB:
      - id: Global.ChildPopulator
        name: ChildPopulator
    qualifiedName:
      CSharp:
      - id: Global.ChildPopulator
        name: ChildPopulator
      VB:
      - id: Global.ChildPopulator
        name: ChildPopulator
    isDefinition: true
    commentId: T:Global.ChildPopulator
  Global.ClosePopUpOnClick.OnClick*:
    name:
      CSharp:
      - id: Global.ClosePopUpOnClick.OnClick*
        name: OnClick
      VB:
      - id: Global.ClosePopUpOnClick.OnClick*
        name: OnClick
    nameWithType:
      CSharp:
      - id: Global.ClosePopUpOnClick*
        name: ClosePopUpOnClick
      - name: .
      - id: Global.ClosePopUpOnClick.OnClick*
        name: OnClick
      VB:
      - id: Global.ClosePopUpOnClick*
        name: ClosePopUpOnClick
      - name: .
      - id: Global.ClosePopUpOnClick.OnClick*
        name: OnClick
    qualifiedName:
      CSharp:
      - id: Global.ClosePopUpOnClick*
        name: ClosePopUpOnClick
      - name: .
      - id: Global.ClosePopUpOnClick.OnClick*
        name: OnClick
      VB:
      - id: Global.ClosePopUpOnClick*
        name: ClosePopUpOnClick
      - name: .
      - id: Global.ClosePopUpOnClick.OnClick*
        name: OnClick
    isDefinition: true
    commentId: Overload:Global.ClosePopUpOnClick.OnClick
  Global.ClosePopUpOnClick:
    name:
      CSharp:
      - id: Global.ClosePopUpOnClick
        name: ClosePopUpOnClick
      VB:
      - id: Global.ClosePopUpOnClick
        name: ClosePopUpOnClick
    nameWithType:
      CSharp:
      - id: Global.ClosePopUpOnClick
        name: ClosePopUpOnClick
      VB:
      - id: Global.ClosePopUpOnClick
        name: ClosePopUpOnClick
    qualifiedName:
      CSharp:
      - id: Global.ClosePopUpOnClick
        name: ClosePopUpOnClick
      VB:
      - id: Global.ClosePopUpOnClick
        name: ClosePopUpOnClick
    isDefinition: true
    commentId: T:Global.ClosePopUpOnClick
  Global.Image:
    name:
      CSharp:
      - id: Global.Image
        name: Image
        isExternal: true
      VB:
      - id: Global.Image
        name: Image
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Image
        name: Image
        isExternal: true
      VB:
      - id: Global.Image
        name: Image
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Image
        name: Image
        isExternal: true
      VB:
      - id: Global.Image
        name: Image
        isExternal: true
    isDefinition: true
  Global.Button:
    name:
      CSharp:
      - id: Global.Button
        name: Button
        isExternal: true
      VB:
      - id: Global.Button
        name: Button
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Button
        name: Button
        isExternal: true
      VB:
      - id: Global.Button
        name: Button
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Button
        name: Button
        isExternal: true
      VB:
      - id: Global.Button
        name: Button
        isExternal: true
    isDefinition: true
  Global.CloseYieldTable:
    name:
      CSharp:
      - id: Global.CloseYieldTable
        name: CloseYieldTable
      VB:
      - id: Global.CloseYieldTable
        name: CloseYieldTable
    nameWithType:
      CSharp:
      - id: Global.CloseYieldTable
        name: CloseYieldTable
      VB:
      - id: Global.CloseYieldTable
        name: CloseYieldTable
    qualifiedName:
      CSharp:
      - id: Global.CloseYieldTable
        name: CloseYieldTable
      VB:
      - id: Global.CloseYieldTable
        name: CloseYieldTable
    isDefinition: true
    commentId: T:Global.CloseYieldTable
  Global.CollectAllWheat:
    name:
      CSharp:
      - id: Global.CollectAllWheat
        name: CollectAllWheat
      VB:
      - id: Global.CollectAllWheat
        name: CollectAllWheat
    nameWithType:
      CSharp:
      - id: Global.CollectAllWheat
        name: CollectAllWheat
      VB:
      - id: Global.CollectAllWheat
        name: CollectAllWheat
    qualifiedName:
      CSharp:
      - id: Global.CollectAllWheat
        name: CollectAllWheat
      VB:
      - id: Global.CollectAllWheat
        name: CollectAllWheat
    isDefinition: true
    commentId: T:Global.CollectAllWheat
  Global.DisplayTotalWheat:
    name:
      CSharp:
      - id: Global.DisplayTotalWheat
        name: DisplayTotalWheat
      VB:
      - id: Global.DisplayTotalWheat
        name: DisplayTotalWheat
    nameWithType:
      CSharp:
      - id: Global.DisplayTotalWheat
        name: DisplayTotalWheat
      VB:
      - id: Global.DisplayTotalWheat
        name: DisplayTotalWheat
    qualifiedName:
      CSharp:
      - id: Global.DisplayTotalWheat
        name: DisplayTotalWheat
      VB:
      - id: Global.DisplayTotalWheat
        name: DisplayTotalWheat
    isDefinition: true
    commentId: T:Global.DisplayTotalWheat
  Global.DisplayWeather:
    name:
      CSharp:
      - id: Global.DisplayWeather
        name: DisplayWeather
      VB:
      - id: Global.DisplayWeather
        name: DisplayWeather
    nameWithType:
      CSharp:
      - id: Global.DisplayWeather
        name: DisplayWeather
      VB:
      - id: Global.DisplayWeather
        name: DisplayWeather
    qualifiedName:
      CSharp:
      - id: Global.DisplayWeather
        name: DisplayWeather
      VB:
      - id: Global.DisplayWeather
        name: DisplayWeather
    isDefinition: true
    commentId: T:Global.DisplayWeather
  Global.EnableBasedOnPhase:
    name:
      CSharp:
      - id: Global.EnableBasedOnPhase
        name: EnableBasedOnPhase
      VB:
      - id: Global.EnableBasedOnPhase
        name: EnableBasedOnPhase
    nameWithType:
      CSharp:
      - id: Global.EnableBasedOnPhase
        name: EnableBasedOnPhase
      VB:
      - id: Global.EnableBasedOnPhase
        name: EnableBasedOnPhase
    qualifiedName:
      CSharp:
      - id: Global.EnableBasedOnPhase
        name: EnableBasedOnPhase
      VB:
      - id: Global.EnableBasedOnPhase
        name: EnableBasedOnPhase
    isDefinition: true
    commentId: T:Global.EnableBasedOnPhase
  Global.FamilyMemberPopulator:
    name:
      CSharp:
      - id: Global.FamilyMemberPopulator
        name: FamilyMemberPopulator
      VB:
      - id: Global.FamilyMemberPopulator
        name: FamilyMemberPopulator
    nameWithType:
      CSharp:
      - id: Global.FamilyMemberPopulator
        name: FamilyMemberPopulator
      VB:
      - id: Global.FamilyMemberPopulator
        name: FamilyMemberPopulator
    qualifiedName:
      CSharp:
      - id: Global.FamilyMemberPopulator
        name: FamilyMemberPopulator
      VB:
      - id: Global.FamilyMemberPopulator
        name: FamilyMemberPopulator
    isDefinition: true
    commentId: T:Global.FamilyMemberPopulator
  System:
    name:
      CSharp:
      - id: System
        name: System
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
    nameWithType:
      CSharp:
      - id: System
        name: System
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
    isDefinition: true
    commentId: N:System
  System.String:
    name:
      CSharp:
      - id: System.String
        name: string
        isExternal: true
      VB:
      - id: System.String
        name: String
        isExternal: true
    nameWithType:
      CSharp:
      - id: System.String
        name: string
        isExternal: true
      VB:
      - id: System.String
        name: String
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System.String
        name: string
        isExternal: true
      VB:
      - id: System.String
        name: String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Global.FarmManager.SelectedTool*:
    name:
      CSharp:
      - id: Global.FarmManager.SelectedTool*
        name: SelectedTool
      VB:
      - id: Global.FarmManager.SelectedTool*
        name: SelectedTool
    nameWithType:
      CSharp:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.SelectedTool*
        name: SelectedTool
      VB:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.SelectedTool*
        name: SelectedTool
    qualifiedName:
      CSharp:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.SelectedTool*
        name: SelectedTool
      VB:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.SelectedTool*
        name: SelectedTool
    isDefinition: true
    commentId: Overload:Global.FarmManager.SelectedTool
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
    nameWithType:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{FarmPlotCell}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.FarmPlotCell
        name: FarmPlotCell
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.FarmPlotCell
        name: FarmPlotCell
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.FarmPlotCell
        name: FarmPlotCell
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.FarmPlotCell
        name: FarmPlotCell
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.FarmPlotCell
        name: FarmPlotCell
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.FarmPlotCell
        name: FarmPlotCell
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{FarmPlotCell}
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: int
        isExternal: true
      VB:
      - id: System.Int32
        name: Integer
        isExternal: true
    nameWithType:
      CSharp:
      - id: System.Int32
        name: int
        isExternal: true
      VB:
      - id: System.Int32
        name: Integer
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System.Int32
        name: int
        isExternal: true
      VB:
      - id: System.Int32
        name: Integer
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Global.FarmManager.LabourPoints*:
    name:
      CSharp:
      - id: Global.FarmManager.LabourPoints*
        name: LabourPoints
      VB:
      - id: Global.FarmManager.LabourPoints*
        name: LabourPoints
    nameWithType:
      CSharp:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.LabourPoints*
        name: LabourPoints
      VB:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.LabourPoints*
        name: LabourPoints
    qualifiedName:
      CSharp:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.LabourPoints*
        name: LabourPoints
      VB:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.LabourPoints*
        name: LabourPoints
    isDefinition: true
    commentId: Overload:Global.FarmManager.LabourPoints
  Global.FarmManager.HarvestSelectedCells*:
    name:
      CSharp:
      - id: Global.FarmManager.HarvestSelectedCells*
        name: HarvestSelectedCells
      VB:
      - id: Global.FarmManager.HarvestSelectedCells*
        name: HarvestSelectedCells
    nameWithType:
      CSharp:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.HarvestSelectedCells*
        name: HarvestSelectedCells
      VB:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.HarvestSelectedCells*
        name: HarvestSelectedCells
    qualifiedName:
      CSharp:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.HarvestSelectedCells*
        name: HarvestSelectedCells
      VB:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.HarvestSelectedCells*
        name: HarvestSelectedCells
    isDefinition: true
    commentId: Overload:Global.FarmManager.HarvestSelectedCells
  Global.FarmManager.IrrigateSelectedCells*:
    name:
      CSharp:
      - id: Global.FarmManager.IrrigateSelectedCells*
        name: IrrigateSelectedCells
      VB:
      - id: Global.FarmManager.IrrigateSelectedCells*
        name: IrrigateSelectedCells
    nameWithType:
      CSharp:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.IrrigateSelectedCells*
        name: IrrigateSelectedCells
      VB:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.IrrigateSelectedCells*
        name: IrrigateSelectedCells
    qualifiedName:
      CSharp:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.IrrigateSelectedCells*
        name: IrrigateSelectedCells
      VB:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.IrrigateSelectedCells*
        name: IrrigateSelectedCells
    isDefinition: true
    commentId: Overload:Global.FarmManager.IrrigateSelectedCells
  Global.FarmManager.ClearSelectedCells*:
    name:
      CSharp:
      - id: Global.FarmManager.ClearSelectedCells*
        name: ClearSelectedCells
      VB:
      - id: Global.FarmManager.ClearSelectedCells*
        name: ClearSelectedCells
    nameWithType:
      CSharp:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.ClearSelectedCells*
        name: ClearSelectedCells
      VB:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.ClearSelectedCells*
        name: ClearSelectedCells
    qualifiedName:
      CSharp:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.ClearSelectedCells*
        name: ClearSelectedCells
      VB:
      - id: Global.FarmManager*
        name: FarmManager
      - name: .
      - id: Global.FarmManager.ClearSelectedCells*
        name: ClearSelectedCells
    isDefinition: true
    commentId: Overload:Global.FarmManager.ClearSelectedCells
  Global.FarmManager:
    name:
      CSharp:
      - id: Global.FarmManager
        name: FarmManager
      VB:
      - id: Global.FarmManager
        name: FarmManager
    nameWithType:
      CSharp:
      - id: Global.FarmManager
        name: FarmManager
      VB:
      - id: Global.FarmManager
        name: FarmManager
    qualifiedName:
      CSharp:
      - id: Global.FarmManager
        name: FarmManager
      VB:
      - id: Global.FarmManager
        name: FarmManager
    isDefinition: true
    commentId: T:Global.FarmManager
  Global.FarmPlot:
    name:
      CSharp:
      - id: Global.FarmPlot
        name: FarmPlot
        isExternal: true
      VB:
      - id: Global.FarmPlot
        name: FarmPlot
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.FarmPlot
        name: FarmPlot
        isExternal: true
      VB:
      - id: Global.FarmPlot
        name: FarmPlot
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.FarmPlot
        name: FarmPlot
        isExternal: true
      VB:
      - id: Global.FarmPlot
        name: FarmPlot
        isExternal: true
    isDefinition: true
    commentId: '!:Global.FarmPlot'
  Global.FarmPlotCell.Plot*:
    name:
      CSharp:
      - id: Global.FarmPlotCell.Plot*
        name: Plot
      VB:
      - id: Global.FarmPlotCell.Plot*
        name: Plot
    nameWithType:
      CSharp:
      - id: Global.FarmPlotCell*
        name: FarmPlotCell
      - name: .
      - id: Global.FarmPlotCell.Plot*
        name: Plot
      VB:
      - id: Global.FarmPlotCell*
        name: FarmPlotCell
      - name: .
      - id: Global.FarmPlotCell.Plot*
        name: Plot
    qualifiedName:
      CSharp:
      - id: Global.FarmPlotCell*
        name: FarmPlotCell
      - name: .
      - id: Global.FarmPlotCell.Plot*
        name: Plot
      VB:
      - id: Global.FarmPlotCell*
        name: FarmPlotCell
      - name: .
      - id: Global.FarmPlotCell.Plot*
        name: Plot
    isDefinition: true
    commentId: Overload:Global.FarmPlotCell.Plot
  Global.FarmPlotCell.RefreshVisuals*:
    name:
      CSharp:
      - id: Global.FarmPlotCell.RefreshVisuals*
        name: RefreshVisuals
      VB:
      - id: Global.FarmPlotCell.RefreshVisuals*
        name: RefreshVisuals
    nameWithType:
      CSharp:
      - id: Global.FarmPlotCell*
        name: FarmPlotCell
      - name: .
      - id: Global.FarmPlotCell.RefreshVisuals*
        name: RefreshVisuals
      VB:
      - id: Global.FarmPlotCell*
        name: FarmPlotCell
      - name: .
      - id: Global.FarmPlotCell.RefreshVisuals*
        name: RefreshVisuals
    qualifiedName:
      CSharp:
      - id: Global.FarmPlotCell*
        name: FarmPlotCell
      - name: .
      - id: Global.FarmPlotCell.RefreshVisuals*
        name: RefreshVisuals
      VB:
      - id: Global.FarmPlotCell*
        name: FarmPlotCell
      - name: .
      - id: Global.FarmPlotCell.RefreshVisuals*
        name: RefreshVisuals
    isDefinition: true
    commentId: Overload:Global.FarmPlotCell.RefreshVisuals
  Global.FarmPlotCell.RefreshStatus*:
    name:
      CSharp:
      - id: Global.FarmPlotCell.RefreshStatus*
        name: RefreshStatus
      VB:
      - id: Global.FarmPlotCell.RefreshStatus*
        name: RefreshStatus
    nameWithType:
      CSharp:
      - id: Global.FarmPlotCell*
        name: FarmPlotCell
      - name: .
      - id: Global.FarmPlotCell.RefreshStatus*
        name: RefreshStatus
      VB:
      - id: Global.FarmPlotCell*
        name: FarmPlotCell
      - name: .
      - id: Global.FarmPlotCell.RefreshStatus*
        name: RefreshStatus
    qualifiedName:
      CSharp:
      - id: Global.FarmPlotCell*
        name: FarmPlotCell
      - name: .
      - id: Global.FarmPlotCell.RefreshStatus*
        name: RefreshStatus
      VB:
      - id: Global.FarmPlotCell*
        name: FarmPlotCell
      - name: .
      - id: Global.FarmPlotCell.RefreshStatus*
        name: RefreshStatus
    isDefinition: true
    commentId: Overload:Global.FarmPlotCell.RefreshStatus
  Global.FarmPlotCell:
    name:
      CSharp:
      - id: Global.FarmPlotCell
        name: FarmPlotCell
      VB:
      - id: Global.FarmPlotCell
        name: FarmPlotCell
    nameWithType:
      CSharp:
      - id: Global.FarmPlotCell
        name: FarmPlotCell
      VB:
      - id: Global.FarmPlotCell
        name: FarmPlotCell
    qualifiedName:
      CSharp:
      - id: Global.FarmPlotCell
        name: FarmPlotCell
      VB:
      - id: Global.FarmPlotCell
        name: FarmPlotCell
    isDefinition: true
    commentId: T:Global.FarmPlotCell
  Global.FarmPlotCellPopulator:
    name:
      CSharp:
      - id: Global.FarmPlotCellPopulator
        name: FarmPlotCellPopulator
      VB:
      - id: Global.FarmPlotCellPopulator
        name: FarmPlotCellPopulator
    nameWithType:
      CSharp:
      - id: Global.FarmPlotCellPopulator
        name: FarmPlotCellPopulator
      VB:
      - id: Global.FarmPlotCellPopulator
        name: FarmPlotCellPopulator
    qualifiedName:
      CSharp:
      - id: Global.FarmPlotCellPopulator
        name: FarmPlotCellPopulator
      VB:
      - id: Global.FarmPlotCellPopulator
        name: FarmPlotCellPopulator
    isDefinition: true
    commentId: T:Global.FarmPlotCellPopulator
  Global.GameStateInfoDisplayer:
    name:
      CSharp:
      - id: Global.GameStateInfoDisplayer
        name: GameStateInfoDisplayer
      VB:
      - id: Global.GameStateInfoDisplayer
        name: GameStateInfoDisplayer
    nameWithType:
      CSharp:
      - id: Global.GameStateInfoDisplayer
        name: GameStateInfoDisplayer
      VB:
      - id: Global.GameStateInfoDisplayer
        name: GameStateInfoDisplayer
    qualifiedName:
      CSharp:
      - id: Global.GameStateInfoDisplayer
        name: GameStateInfoDisplayer
      VB:
      - id: Global.GameStateInfoDisplayer
        name: GameStateInfoDisplayer
    isDefinition: true
    commentId: T:Global.GameStateInfoDisplayer
  Global.Adult:
    name:
      CSharp:
      - id: Global.Adult
        name: Adult
        isExternal: true
      VB:
      - id: Global.Adult
        name: Adult
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Adult
        name: Adult
        isExternal: true
      VB:
      - id: Global.Adult
        name: Adult
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Adult
        name: Adult
        isExternal: true
      VB:
      - id: Global.Adult
        name: Adult
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Adult'
  Global.GiveOxButton.Adult*:
    name:
      CSharp:
      - id: Global.GiveOxButton.Adult*
        name: Adult
      VB:
      - id: Global.GiveOxButton.Adult*
        name: Adult
    nameWithType:
      CSharp:
      - id: Global.GiveOxButton*
        name: GiveOxButton
      - name: .
      - id: Global.GiveOxButton.Adult*
        name: Adult
      VB:
      - id: Global.GiveOxButton*
        name: GiveOxButton
      - name: .
      - id: Global.GiveOxButton.Adult*
        name: Adult
    qualifiedName:
      CSharp:
      - id: Global.GiveOxButton*
        name: GiveOxButton
      - name: .
      - id: Global.GiveOxButton.Adult*
        name: Adult
      VB:
      - id: Global.GiveOxButton*
        name: GiveOxButton
      - name: .
      - id: Global.GiveOxButton.Adult*
        name: Adult
    isDefinition: true
    commentId: Overload:Global.GiveOxButton.Adult
  Global.GiveOxButton:
    name:
      CSharp:
      - id: Global.GiveOxButton
        name: GiveOxButton
      VB:
      - id: Global.GiveOxButton
        name: GiveOxButton
    nameWithType:
      CSharp:
      - id: Global.GiveOxButton
        name: GiveOxButton
      VB:
      - id: Global.GiveOxButton
        name: GiveOxButton
    qualifiedName:
      CSharp:
      - id: Global.GiveOxButton
        name: GiveOxButton
      VB:
      - id: Global.GiveOxButton
        name: GiveOxButton
    isDefinition: true
    commentId: T:Global.GiveOxButton
  Global.Household:
    name:
      CSharp:
      - id: Global.Household
        name: Household
        isExternal: true
      VB:
      - id: Global.Household
        name: Household
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Household
        name: Household
        isExternal: true
      VB:
      - id: Global.Household
        name: Household
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Household
        name: Household
        isExternal: true
      VB:
      - id: Global.Household
        name: Household
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Household'
  Global.HouseholdOption.Household*:
    name:
      CSharp:
      - id: Global.HouseholdOption.Household*
        name: Household
      VB:
      - id: Global.HouseholdOption.Household*
        name: Household
    nameWithType:
      CSharp:
      - id: Global.HouseholdOption*
        name: HouseholdOption
      - name: .
      - id: Global.HouseholdOption.Household*
        name: Household
      VB:
      - id: Global.HouseholdOption*
        name: HouseholdOption
      - name: .
      - id: Global.HouseholdOption.Household*
        name: Household
    qualifiedName:
      CSharp:
      - id: Global.HouseholdOption*
        name: HouseholdOption
      - name: .
      - id: Global.HouseholdOption.Household*
        name: Household
      VB:
      - id: Global.HouseholdOption*
        name: HouseholdOption
      - name: .
      - id: Global.HouseholdOption.Household*
        name: Household
    isDefinition: true
    commentId: Overload:Global.HouseholdOption.Household
  Global.HouseholdOption:
    name:
      CSharp:
      - id: Global.HouseholdOption
        name: HouseholdOption
      VB:
      - id: Global.HouseholdOption
        name: HouseholdOption
    nameWithType:
      CSharp:
      - id: Global.HouseholdOption
        name: HouseholdOption
      VB:
      - id: Global.HouseholdOption
        name: HouseholdOption
    qualifiedName:
      CSharp:
      - id: Global.HouseholdOption
        name: HouseholdOption
      VB:
      - id: Global.HouseholdOption
        name: HouseholdOption
    isDefinition: true
    commentId: T:Global.HouseholdOption
  Global.HouseholdSelectionPopulator:
    name:
      CSharp:
      - id: Global.HouseholdSelectionPopulator
        name: HouseholdSelectionPopulator
      VB:
      - id: Global.HouseholdSelectionPopulator
        name: HouseholdSelectionPopulator
    nameWithType:
      CSharp:
      - id: Global.HouseholdSelectionPopulator
        name: HouseholdSelectionPopulator
      VB:
      - id: Global.HouseholdSelectionPopulator
        name: HouseholdSelectionPopulator
    qualifiedName:
      CSharp:
      - id: Global.HouseholdSelectionPopulator
        name: HouseholdSelectionPopulator
      VB:
      - id: Global.HouseholdSelectionPopulator
        name: HouseholdSelectionPopulator
    isDefinition: true
    commentId: T:Global.HouseholdSelectionPopulator
  Global.LabourDisplayer:
    name:
      CSharp:
      - id: Global.LabourDisplayer
        name: LabourDisplayer
      VB:
      - id: Global.LabourDisplayer
        name: LabourDisplayer
    nameWithType:
      CSharp:
      - id: Global.LabourDisplayer
        name: LabourDisplayer
      VB:
      - id: Global.LabourDisplayer
        name: LabourDisplayer
    qualifiedName:
      CSharp:
      - id: Global.LabourDisplayer
        name: LabourDisplayer
      VB:
      - id: Global.LabourDisplayer
        name: LabourDisplayer
    isDefinition: true
    commentId: T:Global.LabourDisplayer
  Global.LoadSceneOnClick.OnClick*:
    name:
      CSharp:
      - id: Global.LoadSceneOnClick.OnClick*
        name: OnClick
      VB:
      - id: Global.LoadSceneOnClick.OnClick*
        name: OnClick
    nameWithType:
      CSharp:
      - id: Global.LoadSceneOnClick*
        name: LoadSceneOnClick
      - name: .
      - id: Global.LoadSceneOnClick.OnClick*
        name: OnClick
      VB:
      - id: Global.LoadSceneOnClick*
        name: LoadSceneOnClick
      - name: .
      - id: Global.LoadSceneOnClick.OnClick*
        name: OnClick
    qualifiedName:
      CSharp:
      - id: Global.LoadSceneOnClick*
        name: LoadSceneOnClick
      - name: .
      - id: Global.LoadSceneOnClick.OnClick*
        name: OnClick
      VB:
      - id: Global.LoadSceneOnClick*
        name: LoadSceneOnClick
      - name: .
      - id: Global.LoadSceneOnClick.OnClick*
        name: OnClick
    isDefinition: true
    commentId: Overload:Global.LoadSceneOnClick.OnClick
  Global.LoadSceneOnClick:
    name:
      CSharp:
      - id: Global.LoadSceneOnClick
        name: LoadSceneOnClick
      VB:
      - id: Global.LoadSceneOnClick
        name: LoadSceneOnClick
    nameWithType:
      CSharp:
      - id: Global.LoadSceneOnClick
        name: LoadSceneOnClick
      VB:
      - id: Global.LoadSceneOnClick
        name: LoadSceneOnClick
    qualifiedName:
      CSharp:
      - id: Global.LoadSceneOnClick
        name: LoadSceneOnClick
      VB:
      - id: Global.LoadSceneOnClick
        name: LoadSceneOnClick
    isDefinition: true
    commentId: T:Global.LoadSceneOnClick
  Global.MaxIrrigationDisplayer:
    name:
      CSharp:
      - id: Global.MaxIrrigationDisplayer
        name: MaxIrrigationDisplayer
      VB:
      - id: Global.MaxIrrigationDisplayer
        name: MaxIrrigationDisplayer
    nameWithType:
      CSharp:
      - id: Global.MaxIrrigationDisplayer
        name: MaxIrrigationDisplayer
      VB:
      - id: Global.MaxIrrigationDisplayer
        name: MaxIrrigationDisplayer
    qualifiedName:
      CSharp:
      - id: Global.MaxIrrigationDisplayer
        name: MaxIrrigationDisplayer
      VB:
      - id: Global.MaxIrrigationDisplayer
        name: MaxIrrigationDisplayer
    isDefinition: true
    commentId: T:Global.MaxIrrigationDisplayer
  Global.NumFamilyMembersDisplayer:
    name:
      CSharp:
      - id: Global.NumFamilyMembersDisplayer
        name: NumFamilyMembersDisplayer
      VB:
      - id: Global.NumFamilyMembersDisplayer
        name: NumFamilyMembersDisplayer
    nameWithType:
      CSharp:
      - id: Global.NumFamilyMembersDisplayer
        name: NumFamilyMembersDisplayer
      VB:
      - id: Global.NumFamilyMembersDisplayer
        name: NumFamilyMembersDisplayer
    qualifiedName:
      CSharp:
      - id: Global.NumFamilyMembersDisplayer
        name: NumFamilyMembersDisplayer
      VB:
      - id: Global.NumFamilyMembersDisplayer
        name: NumFamilyMembersDisplayer
    isDefinition: true
    commentId: T:Global.NumFamilyMembersDisplayer
  Global.PlayerFarmSizeDisplayer:
    name:
      CSharp:
      - id: Global.PlayerFarmSizeDisplayer
        name: PlayerFarmSizeDisplayer
      VB:
      - id: Global.PlayerFarmSizeDisplayer
        name: PlayerFarmSizeDisplayer
    nameWithType:
      CSharp:
      - id: Global.PlayerFarmSizeDisplayer
        name: PlayerFarmSizeDisplayer
      VB:
      - id: Global.PlayerFarmSizeDisplayer
        name: PlayerFarmSizeDisplayer
    qualifiedName:
      CSharp:
      - id: Global.PlayerFarmSizeDisplayer
        name: PlayerFarmSizeDisplayer
      VB:
      - id: Global.PlayerFarmSizeDisplayer
        name: PlayerFarmSizeDisplayer
    isDefinition: true
    commentId: T:Global.PlayerFarmSizeDisplayer
  Global.PlayerMoneyDisplayer:
    name:
      CSharp:
      - id: Global.PlayerMoneyDisplayer
        name: PlayerMoneyDisplayer
      VB:
      - id: Global.PlayerMoneyDisplayer
        name: PlayerMoneyDisplayer
    nameWithType:
      CSharp:
      - id: Global.PlayerMoneyDisplayer
        name: PlayerMoneyDisplayer
      VB:
      - id: Global.PlayerMoneyDisplayer
        name: PlayerMoneyDisplayer
    qualifiedName:
      CSharp:
      - id: Global.PlayerMoneyDisplayer
        name: PlayerMoneyDisplayer
      VB:
      - id: Global.PlayerMoneyDisplayer
        name: PlayerMoneyDisplayer
    isDefinition: true
    commentId: T:Global.PlayerMoneyDisplayer
  Global.PlayerWheatDisplayer:
    name:
      CSharp:
      - id: Global.PlayerWheatDisplayer
        name: PlayerWheatDisplayer
      VB:
      - id: Global.PlayerWheatDisplayer
        name: PlayerWheatDisplayer
    nameWithType:
      CSharp:
      - id: Global.PlayerWheatDisplayer
        name: PlayerWheatDisplayer
      VB:
      - id: Global.PlayerWheatDisplayer
        name: PlayerWheatDisplayer
    qualifiedName:
      CSharp:
      - id: Global.PlayerWheatDisplayer
        name: PlayerWheatDisplayer
      VB:
      - id: Global.PlayerWheatDisplayer
        name: PlayerWheatDisplayer
    isDefinition: true
    commentId: T:Global.PlayerWheatDisplayer
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: bool
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        isExternal: true
    nameWithType:
      CSharp:
      - id: System.Boolean
        name: bool
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System.Boolean
        name: bool
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Global.PopupManager.QueuePopup*:
    name:
      CSharp:
      - id: Global.PopupManager.QueuePopup*
        name: QueuePopup
      VB:
      - id: Global.PopupManager.QueuePopup*
        name: QueuePopup
    nameWithType:
      CSharp:
      - id: Global.PopupManager*
        name: PopupManager
      - name: .
      - id: Global.PopupManager.QueuePopup*
        name: QueuePopup
      VB:
      - id: Global.PopupManager*
        name: PopupManager
      - name: .
      - id: Global.PopupManager.QueuePopup*
        name: QueuePopup
    qualifiedName:
      CSharp:
      - id: Global.PopupManager*
        name: PopupManager
      - name: .
      - id: Global.PopupManager.QueuePopup*
        name: QueuePopup
      VB:
      - id: Global.PopupManager*
        name: PopupManager
      - name: .
      - id: Global.PopupManager.QueuePopup*
        name: QueuePopup
    isDefinition: true
    commentId: Overload:Global.PopupManager.QueuePopup
  Global.PopupManager:
    name:
      CSharp:
      - id: Global.PopupManager
        name: PopupManager
      VB:
      - id: Global.PopupManager
        name: PopupManager
    nameWithType:
      CSharp:
      - id: Global.PopupManager
        name: PopupManager
      VB:
      - id: Global.PopupManager
        name: PopupManager
    qualifiedName:
      CSharp:
      - id: Global.PopupManager
        name: PopupManager
      VB:
      - id: Global.PopupManager
        name: PopupManager
    isDefinition: true
    commentId: T:Global.PopupManager
  Global.ProductAmountDisplayer:
    name:
      CSharp:
      - id: Global.ProductAmountDisplayer
        name: ProductAmountDisplayer
      VB:
      - id: Global.ProductAmountDisplayer
        name: ProductAmountDisplayer
    nameWithType:
      CSharp:
      - id: Global.ProductAmountDisplayer
        name: ProductAmountDisplayer
      VB:
      - id: Global.ProductAmountDisplayer
        name: ProductAmountDisplayer
    qualifiedName:
      CSharp:
      - id: Global.ProductAmountDisplayer
        name: ProductAmountDisplayer
      VB:
      - id: Global.ProductAmountDisplayer
        name: ProductAmountDisplayer
    isDefinition: true
    commentId: T:Global.ProductAmountDisplayer
  Global.ProductDescriptionDisplayer:
    name:
      CSharp:
      - id: Global.ProductDescriptionDisplayer
        name: ProductDescriptionDisplayer
      VB:
      - id: Global.ProductDescriptionDisplayer
        name: ProductDescriptionDisplayer
    nameWithType:
      CSharp:
      - id: Global.ProductDescriptionDisplayer
        name: ProductDescriptionDisplayer
      VB:
      - id: Global.ProductDescriptionDisplayer
        name: ProductDescriptionDisplayer
    qualifiedName:
      CSharp:
      - id: Global.ProductDescriptionDisplayer
        name: ProductDescriptionDisplayer
      VB:
      - id: Global.ProductDescriptionDisplayer
        name: ProductDescriptionDisplayer
    isDefinition: true
    commentId: T:Global.ProductDescriptionDisplayer
  Global.ProductPriceDisplayer:
    name:
      CSharp:
      - id: Global.ProductPriceDisplayer
        name: ProductPriceDisplayer
      VB:
      - id: Global.ProductPriceDisplayer
        name: ProductPriceDisplayer
    nameWithType:
      CSharp:
      - id: Global.ProductPriceDisplayer
        name: ProductPriceDisplayer
      VB:
      - id: Global.ProductPriceDisplayer
        name: ProductPriceDisplayer
    qualifiedName:
      CSharp:
      - id: Global.ProductPriceDisplayer
        name: ProductPriceDisplayer
      VB:
      - id: Global.ProductPriceDisplayer
        name: ProductPriceDisplayer
    isDefinition: true
    commentId: T:Global.ProductPriceDisplayer
  Global.SceneUtils.LoadScene*:
    name:
      CSharp:
      - id: Global.SceneUtils.LoadScene*
        name: LoadScene
      VB:
      - id: Global.SceneUtils.LoadScene*
        name: LoadScene
    nameWithType:
      CSharp:
      - id: Global.SceneUtils*
        name: SceneUtils
      - name: .
      - id: Global.SceneUtils.LoadScene*
        name: LoadScene
      VB:
      - id: Global.SceneUtils*
        name: SceneUtils
      - name: .
      - id: Global.SceneUtils.LoadScene*
        name: LoadScene
    qualifiedName:
      CSharp:
      - id: Global.SceneUtils*
        name: SceneUtils
      - name: .
      - id: Global.SceneUtils.LoadScene*
        name: LoadScene
      VB:
      - id: Global.SceneUtils*
        name: SceneUtils
      - name: .
      - id: Global.SceneUtils.LoadScene*
        name: LoadScene
    isDefinition: true
    commentId: Overload:Global.SceneUtils.LoadScene
  Global.SceneUtils:
    name:
      CSharp:
      - id: Global.SceneUtils
        name: SceneUtils
      VB:
      - id: Global.SceneUtils
        name: SceneUtils
    nameWithType:
      CSharp:
      - id: Global.SceneUtils
        name: SceneUtils
      VB:
      - id: Global.SceneUtils
        name: SceneUtils
    qualifiedName:
      CSharp:
      - id: Global.SceneUtils
        name: SceneUtils
      VB:
      - id: Global.SceneUtils
        name: SceneUtils
    isDefinition: true
    commentId: T:Global.SceneUtils
  Global.SellButton.OnClick*:
    name:
      CSharp:
      - id: Global.SellButton.OnClick*
        name: OnClick
      VB:
      - id: Global.SellButton.OnClick*
        name: OnClick
    nameWithType:
      CSharp:
      - id: Global.SellButton*
        name: SellButton
      - name: .
      - id: Global.SellButton.OnClick*
        name: OnClick
      VB:
      - id: Global.SellButton*
        name: SellButton
      - name: .
      - id: Global.SellButton.OnClick*
        name: OnClick
    qualifiedName:
      CSharp:
      - id: Global.SellButton*
        name: SellButton
      - name: .
      - id: Global.SellButton.OnClick*
        name: OnClick
      VB:
      - id: Global.SellButton*
        name: SellButton
      - name: .
      - id: Global.SellButton.OnClick*
        name: OnClick
    isDefinition: true
    commentId: Overload:Global.SellButton.OnClick
  Global.SellButton:
    name:
      CSharp:
      - id: Global.SellButton
        name: SellButton
      VB:
      - id: Global.SellButton
        name: SellButton
    nameWithType:
      CSharp:
      - id: Global.SellButton
        name: SellButton
      VB:
      - id: Global.SellButton
        name: SellButton
    qualifiedName:
      CSharp:
      - id: Global.SellButton
        name: SellButton
      VB:
      - id: Global.SellButton
        name: SellButton
    isDefinition: true
    commentId: T:Global.SellButton
  Global.ShowFamilyMembers:
    name:
      CSharp:
      - id: Global.ShowFamilyMembers
        name: ShowFamilyMembers
      VB:
      - id: Global.ShowFamilyMembers
        name: ShowFamilyMembers
    nameWithType:
      CSharp:
      - id: Global.ShowFamilyMembers
        name: ShowFamilyMembers
      VB:
      - id: Global.ShowFamilyMembers
        name: ShowFamilyMembers
    qualifiedName:
      CSharp:
      - id: Global.ShowFamilyMembers
        name: ShowFamilyMembers
      VB:
      - id: Global.ShowFamilyMembers
        name: ShowFamilyMembers
    isDefinition: true
    commentId: T:Global.ShowFamilyMembers
  Global.ShowPopupOnClick:
    name:
      CSharp:
      - id: Global.ShowPopupOnClick
        name: ShowPopupOnClick
      VB:
      - id: Global.ShowPopupOnClick
        name: ShowPopupOnClick
    nameWithType:
      CSharp:
      - id: Global.ShowPopupOnClick
        name: ShowPopupOnClick
      VB:
      - id: Global.ShowPopupOnClick
        name: ShowPopupOnClick
    qualifiedName:
      CSharp:
      - id: Global.ShowPopupOnClick
        name: ShowPopupOnClick
      VB:
      - id: Global.ShowPopupOnClick
        name: ShowPopupOnClick
    isDefinition: true
    commentId: T:Global.ShowPopupOnClick
  Global.TextMeshProUGUI:
    name:
      CSharp:
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        isExternal: true
      VB:
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        isExternal: true
      VB:
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        isExternal: true
      VB:
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        isExternal: true
    isDefinition: true
    commentId: '!:Global.TextMeshProUGUI'
  Global.ShowWheatPrice:
    name:
      CSharp:
      - id: Global.ShowWheatPrice
        name: ShowWheatPrice
      VB:
      - id: Global.ShowWheatPrice
        name: ShowWheatPrice
    nameWithType:
      CSharp:
      - id: Global.ShowWheatPrice
        name: ShowWheatPrice
      VB:
      - id: Global.ShowWheatPrice
        name: ShowWheatPrice
    qualifiedName:
      CSharp:
      - id: Global.ShowWheatPrice
        name: ShowWheatPrice
      VB:
      - id: Global.ShowWheatPrice
        name: ShowWheatPrice
    isDefinition: true
    commentId: T:Global.ShowWheatPrice
  Global.ShowYieldTable:
    name:
      CSharp:
      - id: Global.ShowYieldTable
        name: ShowYieldTable
      VB:
      - id: Global.ShowYieldTable
        name: ShowYieldTable
    nameWithType:
      CSharp:
      - id: Global.ShowYieldTable
        name: ShowYieldTable
      VB:
      - id: Global.ShowYieldTable
        name: ShowYieldTable
    qualifiedName:
      CSharp:
      - id: Global.ShowYieldTable
        name: ShowYieldTable
      VB:
      - id: Global.ShowYieldTable
        name: ShowYieldTable
    isDefinition: true
    commentId: T:Global.ShowYieldTable
  Global.TabToggler.Toggle*:
    name:
      CSharp:
      - id: Global.TabToggler.Toggle*
        name: Toggle
      VB:
      - id: Global.TabToggler.Toggle*
        name: Toggle
    nameWithType:
      CSharp:
      - id: Global.TabToggler*
        name: TabToggler
      - name: .
      - id: Global.TabToggler.Toggle*
        name: Toggle
      VB:
      - id: Global.TabToggler*
        name: TabToggler
      - name: .
      - id: Global.TabToggler.Toggle*
        name: Toggle
    qualifiedName:
      CSharp:
      - id: Global.TabToggler*
        name: TabToggler
      - name: .
      - id: Global.TabToggler.Toggle*
        name: Toggle
      VB:
      - id: Global.TabToggler*
        name: TabToggler
      - name: .
      - id: Global.TabToggler.Toggle*
        name: Toggle
    isDefinition: true
    commentId: Overload:Global.TabToggler.Toggle
  Global.TabToggler:
    name:
      CSharp:
      - id: Global.TabToggler
        name: TabToggler
      VB:
      - id: Global.TabToggler
        name: TabToggler
    nameWithType:
      CSharp:
      - id: Global.TabToggler
        name: TabToggler
      VB:
      - id: Global.TabToggler
        name: TabToggler
    qualifiedName:
      CSharp:
      - id: Global.TabToggler
        name: TabToggler
      VB:
      - id: Global.TabToggler
        name: TabToggler
    isDefinition: true
    commentId: T:Global.TabToggler
  Global.ToggleIfHasProduct:
    name:
      CSharp:
      - id: Global.ToggleIfHasProduct
        name: ToggleIfHasProduct
      VB:
      - id: Global.ToggleIfHasProduct
        name: ToggleIfHasProduct
    nameWithType:
      CSharp:
      - id: Global.ToggleIfHasProduct
        name: ToggleIfHasProduct
      VB:
      - id: Global.ToggleIfHasProduct
        name: ToggleIfHasProduct
    qualifiedName:
      CSharp:
      - id: Global.ToggleIfHasProduct
        name: ToggleIfHasProduct
      VB:
      - id: Global.ToggleIfHasProduct
        name: ToggleIfHasProduct
    isDefinition: true
    commentId: T:Global.ToggleIfHasProduct
  Global.ToolToggle:
    name:
      CSharp:
      - id: Global.ToolToggle
        name: ToolToggle
      VB:
      - id: Global.ToolToggle
        name: ToolToggle
    nameWithType:
      CSharp:
      - id: Global.ToolToggle
        name: ToolToggle
      VB:
      - id: Global.ToolToggle
        name: ToolToggle
    qualifiedName:
      CSharp:
      - id: Global.ToolToggle
        name: ToolToggle
      VB:
      - id: Global.ToolToggle
        name: ToolToggle
    isDefinition: true
    commentId: T:Global.ToolToggle
  Global.UIDocumentLoadSceneButton:
    name:
      CSharp:
      - id: Global.UIDocumentLoadSceneButton
        name: UIDocumentLoadSceneButton
      VB:
      - id: Global.UIDocumentLoadSceneButton
        name: UIDocumentLoadSceneButton
    nameWithType:
      CSharp:
      - id: Global.UIDocumentLoadSceneButton
        name: UIDocumentLoadSceneButton
      VB:
      - id: Global.UIDocumentLoadSceneButton
        name: UIDocumentLoadSceneButton
    qualifiedName:
      CSharp:
      - id: Global.UIDocumentLoadSceneButton
        name: UIDocumentLoadSceneButton
      VB:
      - id: Global.UIDocumentLoadSceneButton
        name: UIDocumentLoadSceneButton
    isDefinition: true
    commentId: T:Global.UIDocumentLoadSceneButton
  Global:
    name:
      CSharp: []
      VB: []
    nameWithType:
      CSharp: []
      VB: []
    qualifiedName:
      CSharp: []
      VB: []
    isDefinition: true
  Backend:
    name:
      CSharp:
      - id: Backend
        name: Backend
      VB:
      - id: Backend
        name: Backend
    nameWithType:
      CSharp:
      - id: Backend
        name: Backend
      VB:
      - id: Backend
        name: Backend
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      VB:
      - id: Backend
        name: Backend
    isDefinition: true
    commentId: N:Backend
  Backend.FamilyMember:
    name:
      CSharp:
      - id: Backend.FamilyMember
        name: FamilyMember
      VB:
      - id: Backend.FamilyMember
        name: FamilyMember
    nameWithType:
      CSharp:
      - id: Backend.FamilyMember
        name: FamilyMember
      VB:
      - id: Backend.FamilyMember
        name: FamilyMember
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FamilyMember
        name: FamilyMember
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FamilyMember
        name: FamilyMember
    isDefinition: true
    parent: Backend
    commentId: T:Backend.FamilyMember
  Backend.FamilyMember.FirstName:
    name:
      CSharp:
      - id: Backend.FamilyMember.FirstName
        name: FirstName
      VB:
      - id: Backend.FamilyMember.FirstName
        name: FirstName
    nameWithType:
      CSharp:
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.FirstName
        name: FirstName
      VB:
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.FirstName
        name: FirstName
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.FirstName
        name: FirstName
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.FirstName
        name: FirstName
    isDefinition: true
    parent: Backend.FamilyMember
    commentId: P:Backend.FamilyMember.FirstName
  Backend.FamilyMember.LastName:
    name:
      CSharp:
      - id: Backend.FamilyMember.LastName
        name: LastName
      VB:
      - id: Backend.FamilyMember.LastName
        name: LastName
    nameWithType:
      CSharp:
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.LastName
        name: LastName
      VB:
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.LastName
        name: LastName
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.LastName
        name: LastName
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.LastName
        name: LastName
    isDefinition: true
    parent: Backend.FamilyMember
    commentId: P:Backend.FamilyMember.LastName
  Backend.FamilyMember.s_FirstNames:
    name:
      CSharp:
      - id: Backend.FamilyMember.s_FirstNames
        name: s_FirstNames
      VB:
      - id: Backend.FamilyMember.s_FirstNames
        name: s_FirstNames
    nameWithType:
      CSharp:
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.s_FirstNames
        name: s_FirstNames
      VB:
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.s_FirstNames
        name: s_FirstNames
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.s_FirstNames
        name: s_FirstNames
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.s_FirstNames
        name: s_FirstNames
    isDefinition: true
    parent: Backend.FamilyMember
    commentId: F:Backend.FamilyMember.s_FirstNames
  Backend.FamilyMember.GetRandomFirstName:
    name:
      CSharp:
      - id: Backend.FamilyMember.GetRandomFirstName
        name: GetRandomFirstName
      - name: (
      - name: )
      VB:
      - id: Backend.FamilyMember.GetRandomFirstName
        name: GetRandomFirstName
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.GetRandomFirstName
        name: GetRandomFirstName
      - name: (
      - name: )
      VB:
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.GetRandomFirstName
        name: GetRandomFirstName
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.GetRandomFirstName
        name: GetRandomFirstName
      - name: (
      - name: )
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FamilyMember
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.GetRandomFirstName
        name: GetRandomFirstName
      - name: (
      - name: )
    isDefinition: true
    parent: Backend.FamilyMember
    commentId: M:Backend.FamilyMember.GetRandomFirstName
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        isExternal: true
    nameWithType:
      CSharp:
      - id: System.Object
        name: object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System.Object
        name: object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  Backend.Adult.HasOx*:
    name:
      CSharp:
      - id: Backend.Adult.HasOx*
        name: HasOx
      VB:
      - id: Backend.Adult.HasOx*
        name: HasOx
    nameWithType:
      CSharp:
      - id: Backend.Adult*
        name: Adult
      - name: .
      - id: Backend.Adult.HasOx*
        name: HasOx
      VB:
      - id: Backend.Adult*
        name: Adult
      - name: .
      - id: Backend.Adult.HasOx*
        name: HasOx
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Adult*
        name: Adult
      - name: .
      - id: Backend.Adult.HasOx*
        name: HasOx
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Adult*
        name: Adult
      - name: .
      - id: Backend.Adult.HasOx*
        name: HasOx
    isDefinition: true
    commentId: Overload:Backend.Adult.HasOx
  Backend.Adult.#ctor*:
    name:
      CSharp:
      - id: Backend.Adult.#ctor*
        name: Adult
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: Backend.Adult*
        name: Adult
      - name: .
      - id: Backend.Adult.#ctor*
        name: Adult
      VB:
      - id: Backend.Adult*
        name: Adult
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Adult*
        name: Adult
      - name: .
      - id: Backend.Adult.#ctor*
        name: Adult
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Adult*
        name: Adult
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:Backend.Adult.#ctor
  Backend.Adult.AssignOx*:
    name:
      CSharp:
      - id: Backend.Adult.AssignOx*
        name: AssignOx
      VB:
      - id: Backend.Adult.AssignOx*
        name: AssignOx
    nameWithType:
      CSharp:
      - id: Backend.Adult*
        name: Adult
      - name: .
      - id: Backend.Adult.AssignOx*
        name: AssignOx
      VB:
      - id: Backend.Adult*
        name: Adult
      - name: .
      - id: Backend.Adult.AssignOx*
        name: AssignOx
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Adult*
        name: Adult
      - name: .
      - id: Backend.Adult.AssignOx*
        name: AssignOx
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Adult*
        name: Adult
      - name: .
      - id: Backend.Adult.AssignOx*
        name: AssignOx
    isDefinition: true
    commentId: Overload:Backend.Adult.AssignOx
  Backend.Adult.GetLabourPoints*:
    name:
      CSharp:
      - id: Backend.Adult.GetLabourPoints*
        name: GetLabourPoints
      VB:
      - id: Backend.Adult.GetLabourPoints*
        name: GetLabourPoints
    nameWithType:
      CSharp:
      - id: Backend.Adult*
        name: Adult
      - name: .
      - id: Backend.Adult.GetLabourPoints*
        name: GetLabourPoints
      VB:
      - id: Backend.Adult*
        name: Adult
      - name: .
      - id: Backend.Adult.GetLabourPoints*
        name: GetLabourPoints
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Adult*
        name: Adult
      - name: .
      - id: Backend.Adult.GetLabourPoints*
        name: GetLabourPoints
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Adult*
        name: Adult
      - name: .
      - id: Backend.Adult.GetLabourPoints*
        name: GetLabourPoints
    isDefinition: true
    commentId: Overload:Backend.Adult.GetLabourPoints
  Backend.Adult:
    name:
      CSharp:
      - id: Backend.Adult
        name: Adult
      VB:
      - id: Backend.Adult
        name: Adult
    nameWithType:
      CSharp:
      - id: Backend.Adult
        name: Adult
      VB:
      - id: Backend.Adult
        name: Adult
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Adult
        name: Adult
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Adult
        name: Adult
    isDefinition: true
    parent: Backend
    commentId: T:Backend.Adult
  Backend.Child.Age*:
    name:
      CSharp:
      - id: Backend.Child.Age*
        name: Age
      VB:
      - id: Backend.Child.Age*
        name: Age
    nameWithType:
      CSharp:
      - id: Backend.Child*
        name: Child
      - name: .
      - id: Backend.Child.Age*
        name: Age
      VB:
      - id: Backend.Child*
        name: Child
      - name: .
      - id: Backend.Child.Age*
        name: Age
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Child*
        name: Child
      - name: .
      - id: Backend.Child.Age*
        name: Age
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Child*
        name: Child
      - name: .
      - id: Backend.Child.Age*
        name: Age
    isDefinition: true
    commentId: Overload:Backend.Child.Age
  Backend.Child.#ctor*:
    name:
      CSharp:
      - id: Backend.Child.#ctor*
        name: Child
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: Backend.Child*
        name: Child
      - name: .
      - id: Backend.Child.#ctor*
        name: Child
      VB:
      - id: Backend.Child*
        name: Child
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Child*
        name: Child
      - name: .
      - id: Backend.Child.#ctor*
        name: Child
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Child*
        name: Child
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:Backend.Child.#ctor
  Backend.Child.ToAdult*:
    name:
      CSharp:
      - id: Backend.Child.ToAdult*
        name: ToAdult
      VB:
      - id: Backend.Child.ToAdult*
        name: ToAdult
    nameWithType:
      CSharp:
      - id: Backend.Child*
        name: Child
      - name: .
      - id: Backend.Child.ToAdult*
        name: ToAdult
      VB:
      - id: Backend.Child*
        name: Child
      - name: .
      - id: Backend.Child.ToAdult*
        name: ToAdult
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Child*
        name: Child
      - name: .
      - id: Backend.Child.ToAdult*
        name: ToAdult
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Child*
        name: Child
      - name: .
      - id: Backend.Child.ToAdult*
        name: ToAdult
    isDefinition: true
    commentId: Overload:Backend.Child.ToAdult
  Backend.Child.IncrementAge*:
    name:
      CSharp:
      - id: Backend.Child.IncrementAge*
        name: IncrementAge
      VB:
      - id: Backend.Child.IncrementAge*
        name: IncrementAge
    nameWithType:
      CSharp:
      - id: Backend.Child*
        name: Child
      - name: .
      - id: Backend.Child.IncrementAge*
        name: IncrementAge
      VB:
      - id: Backend.Child*
        name: Child
      - name: .
      - id: Backend.Child.IncrementAge*
        name: IncrementAge
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Child*
        name: Child
      - name: .
      - id: Backend.Child.IncrementAge*
        name: IncrementAge
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Child*
        name: Child
      - name: .
      - id: Backend.Child.IncrementAge*
        name: IncrementAge
    isDefinition: true
    commentId: Overload:Backend.Child.IncrementAge
  Backend.Child:
    name:
      CSharp:
      - id: Backend.Child
        name: Child
      VB:
      - id: Backend.Child
        name: Child
    nameWithType:
      CSharp:
      - id: Backend.Child
        name: Child
      VB:
      - id: Backend.Child
        name: Child
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Child
        name: Child
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Child
        name: Child
    isDefinition: true
    commentId: T:Backend.Child
  Backend.HouseholdAsset:
    name:
      CSharp:
      - id: Backend.HouseholdAsset
        name: HouseholdAsset
      VB:
      - id: Backend.HouseholdAsset
        name: HouseholdAsset
    nameWithType:
      CSharp:
      - id: Backend.HouseholdAsset
        name: HouseholdAsset
      VB:
      - id: Backend.HouseholdAsset
        name: HouseholdAsset
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.HouseholdAsset
        name: HouseholdAsset
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.HouseholdAsset
        name: HouseholdAsset
    isDefinition: true
    parent: Backend
    commentId: T:Backend.HouseholdAsset
  Backend.HouseholdAsset.Owner:
    name:
      CSharp:
      - id: Backend.HouseholdAsset.Owner
        name: Owner
      VB:
      - id: Backend.HouseholdAsset.Owner
        name: Owner
    nameWithType:
      CSharp:
      - id: Backend.HouseholdAsset
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.Owner
        name: Owner
      VB:
      - id: Backend.HouseholdAsset
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.Owner
        name: Owner
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.HouseholdAsset
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.Owner
        name: Owner
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.HouseholdAsset
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.Owner
        name: Owner
    isDefinition: true
    parent: Backend.HouseholdAsset
    commentId: P:Backend.HouseholdAsset.Owner
  Backend.HouseholdAsset.SetOwner(Backend.Household):
    name:
      CSharp:
      - id: Backend.HouseholdAsset.SetOwner(Backend.Household)
        name: SetOwner
      - name: (
      - id: Backend.Household
        name: Household
      - name: )
      VB:
      - id: Backend.HouseholdAsset.SetOwner(Backend.Household)
        name: SetOwner
      - name: (
      - id: Backend.Household
        name: Household
      - name: )
    nameWithType:
      CSharp:
      - id: Backend.HouseholdAsset
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.SetOwner(Backend.Household)
        name: SetOwner
      - name: (
      - id: Backend.Household
        name: Household
      - name: )
      VB:
      - id: Backend.HouseholdAsset
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.SetOwner(Backend.Household)
        name: SetOwner
      - name: (
      - id: Backend.Household
        name: Household
      - name: )
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.HouseholdAsset
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.SetOwner(Backend.Household)
        name: SetOwner
      - name: (
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Household
        name: Household
      - name: )
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.HouseholdAsset
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.SetOwner(Backend.Household)
        name: SetOwner
      - name: (
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Household
        name: Household
      - name: )
    isDefinition: true
    parent: Backend.HouseholdAsset
    commentId: M:Backend.HouseholdAsset.SetOwner(Backend.Household)
  Backend.Family.Name*:
    name:
      CSharp:
      - id: Backend.Family.Name*
        name: Name
      VB:
      - id: Backend.Family.Name*
        name: Name
    nameWithType:
      CSharp:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.Name*
        name: Name
      VB:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.Name*
        name: Name
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.Name*
        name: Name
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.Name*
        name: Name
    isDefinition: true
    commentId: Overload:Backend.Family.Name
  System.Collections.Generic.List{Backend.Adult}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Backend.Adult
        name: Adult
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Backend.Adult
        name: Adult
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Backend.Adult
        name: Adult
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Backend.Adult
        name: Adult
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Adult
        name: Adult
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Adult
        name: Adult
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Backend.Adult}
  Backend.Family.Adults*:
    name:
      CSharp:
      - id: Backend.Family.Adults*
        name: Adults
      VB:
      - id: Backend.Family.Adults*
        name: Adults
    nameWithType:
      CSharp:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.Adults*
        name: Adults
      VB:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.Adults*
        name: Adults
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.Adults*
        name: Adults
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.Adults*
        name: Adults
    isDefinition: true
    commentId: Overload:Backend.Family.Adults
  System.Collections.Generic.List{Backend.Child}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Backend.Child
        name: Child
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Backend.Child
        name: Child
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Backend.Child
        name: Child
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Backend.Child
        name: Child
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Child
        name: Child
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Child
        name: Child
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Backend.Child}
  Backend.Family.Children*:
    name:
      CSharp:
      - id: Backend.Family.Children*
        name: Children
      VB:
      - id: Backend.Family.Children*
        name: Children
    nameWithType:
      CSharp:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.Children*
        name: Children
      VB:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.Children*
        name: Children
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.Children*
        name: Children
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.Children*
        name: Children
    isDefinition: true
    commentId: Overload:Backend.Family.Children
  Backend.Family.HiredWorkers*:
    name:
      CSharp:
      - id: Backend.Family.HiredWorkers*
        name: HiredWorkers
      VB:
      - id: Backend.Family.HiredWorkers*
        name: HiredWorkers
    nameWithType:
      CSharp:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.HiredWorkers*
        name: HiredWorkers
      VB:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.HiredWorkers*
        name: HiredWorkers
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.HiredWorkers*
        name: HiredWorkers
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.HiredWorkers*
        name: HiredWorkers
    isDefinition: true
    commentId: Overload:Backend.Family.HiredWorkers
  Backend.Family.#ctor*:
    name:
      CSharp:
      - id: Backend.Family.#ctor*
        name: Family
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.#ctor*
        name: Family
      VB:
      - id: Backend.Family*
        name: Family
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.#ctor*
        name: Family
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:Backend.Family.#ctor
  Backend.Family.CreateChild*:
    name:
      CSharp:
      - id: Backend.Family.CreateChild*
        name: CreateChild
      VB:
      - id: Backend.Family.CreateChild*
        name: CreateChild
    nameWithType:
      CSharp:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.CreateChild*
        name: CreateChild
      VB:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.CreateChild*
        name: CreateChild
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.CreateChild*
        name: CreateChild
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.CreateChild*
        name: CreateChild
    isDefinition: true
    commentId: Overload:Backend.Family.CreateChild
  Backend.Family.CreateAdult*:
    name:
      CSharp:
      - id: Backend.Family.CreateAdult*
        name: CreateAdult
      VB:
      - id: Backend.Family.CreateAdult*
        name: CreateAdult
    nameWithType:
      CSharp:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.CreateAdult*
        name: CreateAdult
      VB:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.CreateAdult*
        name: CreateAdult
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.CreateAdult*
        name: CreateAdult
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.CreateAdult*
        name: CreateAdult
    isDefinition: true
    commentId: Overload:Backend.Family.CreateAdult
  Backend.Family.GetTotalConsumption*:
    name:
      CSharp:
      - id: Backend.Family.GetTotalConsumption*
        name: GetTotalConsumption
      VB:
      - id: Backend.Family.GetTotalConsumption*
        name: GetTotalConsumption
    nameWithType:
      CSharp:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetTotalConsumption*
        name: GetTotalConsumption
      VB:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetTotalConsumption*
        name: GetTotalConsumption
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetTotalConsumption*
        name: GetTotalConsumption
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetTotalConsumption*
        name: GetTotalConsumption
    isDefinition: true
    commentId: Overload:Backend.Family.GetTotalConsumption
  Backend.Family.GetAdultAmount*:
    name:
      CSharp:
      - id: Backend.Family.GetAdultAmount*
        name: GetAdultAmount
      VB:
      - id: Backend.Family.GetAdultAmount*
        name: GetAdultAmount
    nameWithType:
      CSharp:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetAdultAmount*
        name: GetAdultAmount
      VB:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetAdultAmount*
        name: GetAdultAmount
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetAdultAmount*
        name: GetAdultAmount
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetAdultAmount*
        name: GetAdultAmount
    isDefinition: true
    commentId: Overload:Backend.Family.GetAdultAmount
  Backend.Family.GetChildrenAmount*:
    name:
      CSharp:
      - id: Backend.Family.GetChildrenAmount*
        name: GetChildrenAmount
      VB:
      - id: Backend.Family.GetChildrenAmount*
        name: GetChildrenAmount
    nameWithType:
      CSharp:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetChildrenAmount*
        name: GetChildrenAmount
      VB:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetChildrenAmount*
        name: GetChildrenAmount
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetChildrenAmount*
        name: GetChildrenAmount
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetChildrenAmount*
        name: GetChildrenAmount
    isDefinition: true
    commentId: Overload:Backend.Family.GetChildrenAmount
  Backend.Family.GetHiredWorkerAmount*:
    name:
      CSharp:
      - id: Backend.Family.GetHiredWorkerAmount*
        name: GetHiredWorkerAmount
      VB:
      - id: Backend.Family.GetHiredWorkerAmount*
        name: GetHiredWorkerAmount
    nameWithType:
      CSharp:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetHiredWorkerAmount*
        name: GetHiredWorkerAmount
      VB:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetHiredWorkerAmount*
        name: GetHiredWorkerAmount
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetHiredWorkerAmount*
        name: GetHiredWorkerAmount
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetHiredWorkerAmount*
        name: GetHiredWorkerAmount
    isDefinition: true
    commentId: Overload:Backend.Family.GetHiredWorkerAmount
  Backend.Family.GetLabourPoints*:
    name:
      CSharp:
      - id: Backend.Family.GetLabourPoints*
        name: GetLabourPoints
      VB:
      - id: Backend.Family.GetLabourPoints*
        name: GetLabourPoints
    nameWithType:
      CSharp:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetLabourPoints*
        name: GetLabourPoints
      VB:
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetLabourPoints*
        name: GetLabourPoints
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetLabourPoints*
        name: GetLabourPoints
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Family*
        name: Family
      - name: .
      - id: Backend.Family.GetLabourPoints*
        name: GetLabourPoints
    isDefinition: true
    commentId: Overload:Backend.Family.GetLabourPoints
  Backend.Family:
    name:
      CSharp:
      - id: Backend.Family
        name: Family
      VB:
      - id: Backend.Family
        name: Family
    nameWithType:
      CSharp:
      - id: Backend.Family
        name: Family
      VB:
      - id: Backend.Family
        name: Family
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Family
        name: Family
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Family
        name: Family
    isDefinition: true
    parent: Backend
    commentId: T:Backend.Family
  Backend.FamilyMember.FirstName*:
    name:
      CSharp:
      - id: Backend.FamilyMember.FirstName*
        name: FirstName
      VB:
      - id: Backend.FamilyMember.FirstName*
        name: FirstName
    nameWithType:
      CSharp:
      - id: Backend.FamilyMember*
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.FirstName*
        name: FirstName
      VB:
      - id: Backend.FamilyMember*
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.FirstName*
        name: FirstName
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FamilyMember*
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.FirstName*
        name: FirstName
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FamilyMember*
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.FirstName*
        name: FirstName
    isDefinition: true
    commentId: Overload:Backend.FamilyMember.FirstName
  Backend.FamilyMember.LastName*:
    name:
      CSharp:
      - id: Backend.FamilyMember.LastName*
        name: LastName
      VB:
      - id: Backend.FamilyMember.LastName*
        name: LastName
    nameWithType:
      CSharp:
      - id: Backend.FamilyMember*
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.LastName*
        name: LastName
      VB:
      - id: Backend.FamilyMember*
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.LastName*
        name: LastName
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FamilyMember*
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.LastName*
        name: LastName
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FamilyMember*
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.LastName*
        name: LastName
    isDefinition: true
    commentId: Overload:Backend.FamilyMember.LastName
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: string
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.String
        name: String
        isExternal: true
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: System.String
        name: string
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.String
        name: String
        isExternal: true
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: System.String
        name: string
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.String
        name: String
        isExternal: true
      - name: (
      - name: )
    isDefinition: false
  Backend.FamilyMember.GetRandomFirstName*:
    name:
      CSharp:
      - id: Backend.FamilyMember.GetRandomFirstName*
        name: GetRandomFirstName
      VB:
      - id: Backend.FamilyMember.GetRandomFirstName*
        name: GetRandomFirstName
    nameWithType:
      CSharp:
      - id: Backend.FamilyMember*
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.GetRandomFirstName*
        name: GetRandomFirstName
      VB:
      - id: Backend.FamilyMember*
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.GetRandomFirstName*
        name: GetRandomFirstName
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FamilyMember*
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.GetRandomFirstName*
        name: GetRandomFirstName
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FamilyMember*
        name: FamilyMember
      - name: .
      - id: Backend.FamilyMember.GetRandomFirstName*
        name: GetRandomFirstName
    isDefinition: true
    commentId: Overload:Backend.FamilyMember.GetRandomFirstName
  System.Collections.Generic.List{Backend.FarmPlot}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Backend.FarmPlot
        name: FarmPlot
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Backend.FarmPlot
        name: FarmPlot
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Backend.FarmPlot
        name: FarmPlot
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Backend.FarmPlot
        name: FarmPlot
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FarmPlot
        name: FarmPlot
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FarmPlot
        name: FarmPlot
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Backend.FarmPlot}
  Backend.Farmland.#ctor*:
    name:
      CSharp:
      - id: Backend.Farmland.#ctor*
        name: Farmland
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.#ctor*
        name: Farmland
      VB:
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.#ctor*
        name: Farmland
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:Backend.Farmland.#ctor
  Backend.Household:
    name:
      CSharp:
      - id: Backend.Household
        name: Household
      VB:
      - id: Backend.Household
        name: Household
    nameWithType:
      CSharp:
      - id: Backend.Household
        name: Household
      VB:
      - id: Backend.Household
        name: Household
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Household
        name: Household
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Household
        name: Household
    isDefinition: true
    parent: Backend
    commentId: T:Backend.Household
  Backend.Farmland.SetOwner*:
    name:
      CSharp:
      - id: Backend.Farmland.SetOwner*
        name: SetOwner
      VB:
      - id: Backend.Farmland.SetOwner*
        name: SetOwner
    nameWithType:
      CSharp:
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.SetOwner*
        name: SetOwner
      VB:
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.SetOwner*
        name: SetOwner
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.SetOwner*
        name: SetOwner
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.SetOwner*
        name: SetOwner
    isDefinition: true
    commentId: Overload:Backend.Farmland.SetOwner
  Backend.Farmland.GetTotalYield*:
    name:
      CSharp:
      - id: Backend.Farmland.GetTotalYield*
        name: GetTotalYield
      VB:
      - id: Backend.Farmland.GetTotalYield*
        name: GetTotalYield
    nameWithType:
      CSharp:
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.GetTotalYield*
        name: GetTotalYield
      VB:
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.GetTotalYield*
        name: GetTotalYield
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.GetTotalYield*
        name: GetTotalYield
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.GetTotalYield*
        name: GetTotalYield
    isDefinition: true
    commentId: Overload:Backend.Farmland.GetTotalYield
  Backend.Farmland.AddPlot*:
    name:
      CSharp:
      - id: Backend.Farmland.AddPlot*
        name: AddPlot
      VB:
      - id: Backend.Farmland.AddPlot*
        name: AddPlot
    nameWithType:
      CSharp:
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.AddPlot*
        name: AddPlot
      VB:
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.AddPlot*
        name: AddPlot
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.AddPlot*
        name: AddPlot
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.AddPlot*
        name: AddPlot
    isDefinition: true
    commentId: Overload:Backend.Farmland.AddPlot
  Backend.Farmland.ResetIrrigation*:
    name:
      CSharp:
      - id: Backend.Farmland.ResetIrrigation*
        name: ResetIrrigation
      VB:
      - id: Backend.Farmland.ResetIrrigation*
        name: ResetIrrigation
    nameWithType:
      CSharp:
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.ResetIrrigation*
        name: ResetIrrigation
      VB:
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.ResetIrrigation*
        name: ResetIrrigation
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.ResetIrrigation*
        name: ResetIrrigation
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.ResetIrrigation*
        name: ResetIrrigation
    isDefinition: true
    commentId: Overload:Backend.Farmland.ResetIrrigation
  Backend.Farmland.ClearPlots*:
    name:
      CSharp:
      - id: Backend.Farmland.ClearPlots*
        name: ClearPlots
      VB:
      - id: Backend.Farmland.ClearPlots*
        name: ClearPlots
    nameWithType:
      CSharp:
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.ClearPlots*
        name: ClearPlots
      VB:
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.ClearPlots*
        name: ClearPlots
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.ClearPlots*
        name: ClearPlots
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.ClearPlots*
        name: ClearPlots
    isDefinition: true
    commentId: Overload:Backend.Farmland.ClearPlots
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: float
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        isExternal: true
    nameWithType:
      CSharp:
      - id: System.Single
        name: float
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System.Single
        name: float
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  Backend.Farmland.SetYieldMultiplier*:
    name:
      CSharp:
      - id: Backend.Farmland.SetYieldMultiplier*
        name: SetYieldMultiplier
      VB:
      - id: Backend.Farmland.SetYieldMultiplier*
        name: SetYieldMultiplier
    nameWithType:
      CSharp:
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.SetYieldMultiplier*
        name: SetYieldMultiplier
      VB:
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.SetYieldMultiplier*
        name: SetYieldMultiplier
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.SetYieldMultiplier*
        name: SetYieldMultiplier
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Farmland*
        name: Farmland
      - name: .
      - id: Backend.Farmland.SetYieldMultiplier*
        name: SetYieldMultiplier
    isDefinition: true
    commentId: Overload:Backend.Farmland.SetYieldMultiplier
  Backend.Farmland:
    name:
      CSharp:
      - id: Backend.Farmland
        name: Farmland
      VB:
      - id: Backend.Farmland
        name: Farmland
    nameWithType:
      CSharp:
      - id: Backend.Farmland
        name: Farmland
      VB:
      - id: Backend.Farmland
        name: Farmland
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Farmland
        name: Farmland
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Farmland
        name: Farmland
    isDefinition: true
    parent: Backend
    commentId: T:Backend.Farmland
  Backend.FertilizerType:
    name:
      CSharp:
      - id: Backend.FertilizerType
        name: FertilizerType
      VB:
      - id: Backend.FertilizerType
        name: FertilizerType
    nameWithType:
      CSharp:
      - id: Backend.FertilizerType
        name: FertilizerType
      VB:
      - id: Backend.FertilizerType
        name: FertilizerType
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FertilizerType
        name: FertilizerType
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FertilizerType
        name: FertilizerType
    isDefinition: true
    parent: Backend
    commentId: T:Backend.FertilizerType
  Backend.SeedType:
    name:
      CSharp:
      - id: Backend.SeedType
        name: SeedType
      VB:
      - id: Backend.SeedType
        name: SeedType
    nameWithType:
      CSharp:
      - id: Backend.SeedType
        name: SeedType
      VB:
      - id: Backend.SeedType
        name: SeedType
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.SeedType
        name: SeedType
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.SeedType
        name: SeedType
    isDefinition: true
    parent: Backend
    commentId: T:Backend.SeedType
  Backend.FarmPlot.SeedType*:
    name:
      CSharp:
      - id: Backend.FarmPlot.SeedType*
        name: SeedType
      VB:
      - id: Backend.FarmPlot.SeedType*
        name: SeedType
    nameWithType:
      CSharp:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.SeedType*
        name: SeedType
      VB:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.SeedType*
        name: SeedType
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.SeedType*
        name: SeedType
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.SeedType*
        name: SeedType
    isDefinition: true
    commentId: Overload:Backend.FarmPlot.SeedType
  Backend.FarmPlot.FertilizerType*:
    name:
      CSharp:
      - id: Backend.FarmPlot.FertilizerType*
        name: FertilizerType
      VB:
      - id: Backend.FarmPlot.FertilizerType*
        name: FertilizerType
    nameWithType:
      CSharp:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.FertilizerType*
        name: FertilizerType
      VB:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.FertilizerType*
        name: FertilizerType
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.FertilizerType*
        name: FertilizerType
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.FertilizerType*
        name: FertilizerType
    isDefinition: true
    commentId: Overload:Backend.FarmPlot.FertilizerType
  Backend.FarmPlot.YieldMultiplier*:
    name:
      CSharp:
      - id: Backend.FarmPlot.YieldMultiplier*
        name: YieldMultiplier
      VB:
      - id: Backend.FarmPlot.YieldMultiplier*
        name: YieldMultiplier
    nameWithType:
      CSharp:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.YieldMultiplier*
        name: YieldMultiplier
      VB:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.YieldMultiplier*
        name: YieldMultiplier
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.YieldMultiplier*
        name: YieldMultiplier
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.YieldMultiplier*
        name: YieldMultiplier
    isDefinition: true
    commentId: Overload:Backend.FarmPlot.YieldMultiplier
  Backend.FarmPlot.Irrigated*:
    name:
      CSharp:
      - id: Backend.FarmPlot.Irrigated*
        name: Irrigated
      VB:
      - id: Backend.FarmPlot.Irrigated*
        name: Irrigated
    nameWithType:
      CSharp:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.Irrigated*
        name: Irrigated
      VB:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.Irrigated*
        name: Irrigated
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.Irrigated*
        name: Irrigated
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.Irrigated*
        name: Irrigated
    isDefinition: true
    commentId: Overload:Backend.FarmPlot.Irrigated
  Backend.FarmPlot.#ctor*:
    name:
      CSharp:
      - id: Backend.FarmPlot.#ctor*
        name: FarmPlot
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.#ctor*
        name: FarmPlot
      VB:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.#ctor*
        name: FarmPlot
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:Backend.FarmPlot.#ctor
  Backend.FarmPlot.GetWeatherEffect*:
    name:
      CSharp:
      - id: Backend.FarmPlot.GetWeatherEffect*
        name: GetWeatherEffect
      VB:
      - id: Backend.FarmPlot.GetWeatherEffect*
        name: GetWeatherEffect
    nameWithType:
      CSharp:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.GetWeatherEffect*
        name: GetWeatherEffect
      VB:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.GetWeatherEffect*
        name: GetWeatherEffect
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.GetWeatherEffect*
        name: GetWeatherEffect
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.GetWeatherEffect*
        name: GetWeatherEffect
    isDefinition: true
    commentId: Overload:Backend.FarmPlot.GetWeatherEffect
  Backend.FarmPlot.GetYield*:
    name:
      CSharp:
      - id: Backend.FarmPlot.GetYield*
        name: GetYield
      VB:
      - id: Backend.FarmPlot.GetYield*
        name: GetYield
    nameWithType:
      CSharp:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.GetYield*
        name: GetYield
      VB:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.GetYield*
        name: GetYield
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.GetYield*
        name: GetYield
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.GetYield*
        name: GetYield
    isDefinition: true
    commentId: Overload:Backend.FarmPlot.GetYield
  Backend.FarmPlot.ClearPlot*:
    name:
      CSharp:
      - id: Backend.FarmPlot.ClearPlot*
        name: ClearPlot
      VB:
      - id: Backend.FarmPlot.ClearPlot*
        name: ClearPlot
    nameWithType:
      CSharp:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.ClearPlot*
        name: ClearPlot
      VB:
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.ClearPlot*
        name: ClearPlot
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.ClearPlot*
        name: ClearPlot
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.FarmPlot*
        name: FarmPlot
      - name: .
      - id: Backend.FarmPlot.ClearPlot*
        name: ClearPlot
    isDefinition: true
    commentId: Overload:Backend.FarmPlot.ClearPlot
  Backend.FarmPlot:
    name:
      CSharp:
      - id: Backend.FarmPlot
        name: FarmPlot
      VB:
      - id: Backend.FarmPlot
        name: FarmPlot
    nameWithType:
      CSharp:
      - id: Backend.FarmPlot
        name: FarmPlot
      VB:
      - id: Backend.FarmPlot
        name: FarmPlot
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FarmPlot
        name: FarmPlot
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.FarmPlot
        name: FarmPlot
    isDefinition: true
    parent: Backend
    commentId: T:Backend.FarmPlot
  Backend.Fate.TriggerYearlyEvents*:
    name:
      CSharp:
      - id: Backend.Fate.TriggerYearlyEvents*
        name: TriggerYearlyEvents
      VB:
      - id: Backend.Fate.TriggerYearlyEvents*
        name: TriggerYearlyEvents
    nameWithType:
      CSharp:
      - id: Backend.Fate*
        name: Fate
      - name: .
      - id: Backend.Fate.TriggerYearlyEvents*
        name: TriggerYearlyEvents
      VB:
      - id: Backend.Fate*
        name: Fate
      - name: .
      - id: Backend.Fate.TriggerYearlyEvents*
        name: TriggerYearlyEvents
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Fate*
        name: Fate
      - name: .
      - id: Backend.Fate.TriggerYearlyEvents*
        name: TriggerYearlyEvents
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Fate*
        name: Fate
      - name: .
      - id: Backend.Fate.TriggerYearlyEvents*
        name: TriggerYearlyEvents
    isDefinition: true
    commentId: Overload:Backend.Fate.TriggerYearlyEvents
  Backend.Fate:
    name:
      CSharp:
      - id: Backend.Fate
        name: Fate
      VB:
      - id: Backend.Fate
        name: Fate
    nameWithType:
      CSharp:
      - id: Backend.Fate
        name: Fate
      VB:
      - id: Backend.Fate
        name: Fate
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Fate
        name: Fate
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Fate
        name: Fate
    isDefinition: true
    commentId: T:Backend.Fate
  Backend.Household[]:
    name:
      CSharp:
      - id: Backend.Household
        name: Household
      - name: '['
      - name: ']'
      VB:
      - id: Backend.Household
        name: Household
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Backend.Household
        name: Household
      - name: '['
      - name: ']'
      VB:
      - id: Backend.Household
        name: Household
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Household
        name: Household
      - name: '['
      - name: ']'
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Household
        name: Household
      - name: (
      - name: )
    isDefinition: false
  Backend.GameState.PopupManagerInstance*:
    name:
      CSharp:
      - id: Backend.GameState.PopupManagerInstance*
        name: PopupManagerInstance
      VB:
      - id: Backend.GameState.PopupManagerInstance*
        name: PopupManagerInstance
    nameWithType:
      CSharp:
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.PopupManagerInstance*
        name: PopupManagerInstance
      VB:
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.PopupManagerInstance*
        name: PopupManagerInstance
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.PopupManagerInstance*
        name: PopupManagerInstance
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.PopupManagerInstance*
        name: PopupManagerInstance
    isDefinition: true
    commentId: Overload:Backend.GameState.PopupManagerInstance
  Backend.GameState.Initialize*:
    name:
      CSharp:
      - id: Backend.GameState.Initialize*
        name: Initialize
      VB:
      - id: Backend.GameState.Initialize*
        name: Initialize
    nameWithType:
      CSharp:
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.Initialize*
        name: Initialize
      VB:
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.Initialize*
        name: Initialize
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.Initialize*
        name: Initialize
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.Initialize*
        name: Initialize
    isDefinition: true
    commentId: Overload:Backend.GameState.Initialize
  Backend.GameState.AdvanceToPhaseOne*:
    name:
      CSharp:
      - id: Backend.GameState.AdvanceToPhaseOne*
        name: AdvanceToPhaseOne
      VB:
      - id: Backend.GameState.AdvanceToPhaseOne*
        name: AdvanceToPhaseOne
    nameWithType:
      CSharp:
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.AdvanceToPhaseOne*
        name: AdvanceToPhaseOne
      VB:
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.AdvanceToPhaseOne*
        name: AdvanceToPhaseOne
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.AdvanceToPhaseOne*
        name: AdvanceToPhaseOne
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.AdvanceToPhaseOne*
        name: AdvanceToPhaseOne
    isDefinition: true
    commentId: Overload:Backend.GameState.AdvanceToPhaseOne
  Backend.GameState.AdvanceToPhaseTwo*:
    name:
      CSharp:
      - id: Backend.GameState.AdvanceToPhaseTwo*
        name: AdvanceToPhaseTwo
      VB:
      - id: Backend.GameState.AdvanceToPhaseTwo*
        name: AdvanceToPhaseTwo
    nameWithType:
      CSharp:
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.AdvanceToPhaseTwo*
        name: AdvanceToPhaseTwo
      VB:
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.AdvanceToPhaseTwo*
        name: AdvanceToPhaseTwo
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.AdvanceToPhaseTwo*
        name: AdvanceToPhaseTwo
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.AdvanceToPhaseTwo*
        name: AdvanceToPhaseTwo
    isDefinition: true
    commentId: Overload:Backend.GameState.AdvanceToPhaseTwo
  Backend.GameState.AdvanceToPhaseThree*:
    name:
      CSharp:
      - id: Backend.GameState.AdvanceToPhaseThree*
        name: AdvanceToPhaseThree
      VB:
      - id: Backend.GameState.AdvanceToPhaseThree*
        name: AdvanceToPhaseThree
    nameWithType:
      CSharp:
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.AdvanceToPhaseThree*
        name: AdvanceToPhaseThree
      VB:
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.AdvanceToPhaseThree*
        name: AdvanceToPhaseThree
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.AdvanceToPhaseThree*
        name: AdvanceToPhaseThree
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.AdvanceToPhaseThree*
        name: AdvanceToPhaseThree
    isDefinition: true
    commentId: Overload:Backend.GameState.AdvanceToPhaseThree
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic.Dictionary{System.String,System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int32}
  Backend.GameState.ResultReport*:
    name:
      CSharp:
      - id: Backend.GameState.ResultReport*
        name: ResultReport
      VB:
      - id: Backend.GameState.ResultReport*
        name: ResultReport
    nameWithType:
      CSharp:
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.ResultReport*
        name: ResultReport
      VB:
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.ResultReport*
        name: ResultReport
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.ResultReport*
        name: ResultReport
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.GameState*
        name: GameState
      - name: .
      - id: Backend.GameState.ResultReport*
        name: ResultReport
    isDefinition: true
    commentId: Overload:Backend.GameState.ResultReport
  Backend.GameState:
    name:
      CSharp:
      - id: Backend.GameState
        name: GameState
      VB:
      - id: Backend.GameState
        name: GameState
    nameWithType:
      CSharp:
      - id: Backend.GameState
        name: GameState
      VB:
      - id: Backend.GameState
        name: GameState
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.GameState
        name: GameState
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.GameState
        name: GameState
    isDefinition: true
    commentId: T:Backend.GameState
  Backend.Household.Land*:
    name:
      CSharp:
      - id: Backend.Household.Land*
        name: Land
      VB:
      - id: Backend.Household.Land*
        name: Land
    nameWithType:
      CSharp:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Land*
        name: Land
      VB:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Land*
        name: Land
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Land*
        name: Land
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Land*
        name: Land
    isDefinition: true
    commentId: Overload:Backend.Household.Land
  Backend.Household.Money*:
    name:
      CSharp:
      - id: Backend.Household.Money*
        name: Money
      VB:
      - id: Backend.Household.Money*
        name: Money
    nameWithType:
      CSharp:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Money*
        name: Money
      VB:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Money*
        name: Money
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Money*
        name: Money
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Money*
        name: Money
    isDefinition: true
    commentId: Overload:Backend.Household.Money
  Backend.Household.Family*:
    name:
      CSharp:
      - id: Backend.Household.Family*
        name: Family
      VB:
      - id: Backend.Household.Family*
        name: Family
    nameWithType:
      CSharp:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Family*
        name: Family
      VB:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Family*
        name: Family
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Family*
        name: Family
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Family*
        name: Family
    isDefinition: true
    commentId: Overload:Backend.Household.Family
  Backend.Inventory:
    name:
      CSharp:
      - id: Backend.Inventory
        name: Inventory
      VB:
      - id: Backend.Inventory
        name: Inventory
    nameWithType:
      CSharp:
      - id: Backend.Inventory
        name: Inventory
      VB:
      - id: Backend.Inventory
        name: Inventory
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Inventory
        name: Inventory
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Inventory
        name: Inventory
    isDefinition: true
    parent: Backend
    commentId: T:Backend.Inventory
  Backend.Household.Inventory*:
    name:
      CSharp:
      - id: Backend.Household.Inventory*
        name: Inventory
      VB:
      - id: Backend.Household.Inventory*
        name: Inventory
    nameWithType:
      CSharp:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Inventory*
        name: Inventory
      VB:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Inventory*
        name: Inventory
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Inventory*
        name: Inventory
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Inventory*
        name: Inventory
    isDefinition: true
    commentId: Overload:Backend.Household.Inventory
  Backend.Household.Wheat*:
    name:
      CSharp:
      - id: Backend.Household.Wheat*
        name: Wheat
      VB:
      - id: Backend.Household.Wheat*
        name: Wheat
    nameWithType:
      CSharp:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Wheat*
        name: Wheat
      VB:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Wheat*
        name: Wheat
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Wheat*
        name: Wheat
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.Wheat*
        name: Wheat
    isDefinition: true
    commentId: Overload:Backend.Household.Wheat
  Backend.Household.#ctor*:
    name:
      CSharp:
      - id: Backend.Household.#ctor*
        name: Household
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.#ctor*
        name: Household
      VB:
      - id: Backend.Household*
        name: Household
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.#ctor*
        name: Household
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:Backend.Household.#ctor
  Backend.Household.CalculateRemainingYield*:
    name:
      CSharp:
      - id: Backend.Household.CalculateRemainingYield*
        name: CalculateRemainingYield
      VB:
      - id: Backend.Household.CalculateRemainingYield*
        name: CalculateRemainingYield
    nameWithType:
      CSharp:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.CalculateRemainingYield*
        name: CalculateRemainingYield
      VB:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.CalculateRemainingYield*
        name: CalculateRemainingYield
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.CalculateRemainingYield*
        name: CalculateRemainingYield
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.CalculateRemainingYield*
        name: CalculateRemainingYield
    isDefinition: true
    commentId: Overload:Backend.Household.CalculateRemainingYield
  Backend.Household.HarvestCrops*:
    name:
      CSharp:
      - id: Backend.Household.HarvestCrops*
        name: HarvestCrops
      VB:
      - id: Backend.Household.HarvestCrops*
        name: HarvestCrops
    nameWithType:
      CSharp:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.HarvestCrops*
        name: HarvestCrops
      VB:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.HarvestCrops*
        name: HarvestCrops
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.HarvestCrops*
        name: HarvestCrops
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.HarvestCrops*
        name: HarvestCrops
    isDefinition: true
    commentId: Overload:Backend.Household.HarvestCrops
  Backend.Household.HireLabour*:
    name:
      CSharp:
      - id: Backend.Household.HireLabour*
        name: HireLabour
      VB:
      - id: Backend.Household.HireLabour*
        name: HireLabour
    nameWithType:
      CSharp:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.HireLabour*
        name: HireLabour
      VB:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.HireLabour*
        name: HireLabour
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.HireLabour*
        name: HireLabour
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.HireLabour*
        name: HireLabour
    isDefinition: true
    commentId: Overload:Backend.Household.HireLabour
  Backend.Household.RemoveLabour*:
    name:
      CSharp:
      - id: Backend.Household.RemoveLabour*
        name: RemoveLabour
      VB:
      - id: Backend.Household.RemoveLabour*
        name: RemoveLabour
    nameWithType:
      CSharp:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.RemoveLabour*
        name: RemoveLabour
      VB:
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.RemoveLabour*
        name: RemoveLabour
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.RemoveLabour*
        name: RemoveLabour
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Household*
        name: Household
      - name: .
      - id: Backend.Household.RemoveLabour*
        name: RemoveLabour
    isDefinition: true
    commentId: Overload:Backend.Household.RemoveLabour
  Backend.HouseholdAsset.Owner*:
    name:
      CSharp:
      - id: Backend.HouseholdAsset.Owner*
        name: Owner
      VB:
      - id: Backend.HouseholdAsset.Owner*
        name: Owner
    nameWithType:
      CSharp:
      - id: Backend.HouseholdAsset*
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.Owner*
        name: Owner
      VB:
      - id: Backend.HouseholdAsset*
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.Owner*
        name: Owner
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.HouseholdAsset*
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.Owner*
        name: Owner
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.HouseholdAsset*
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.Owner*
        name: Owner
    isDefinition: true
    commentId: Overload:Backend.HouseholdAsset.Owner
  Backend.HouseholdAsset.SetOwner*:
    name:
      CSharp:
      - id: Backend.HouseholdAsset.SetOwner*
        name: SetOwner
      VB:
      - id: Backend.HouseholdAsset.SetOwner*
        name: SetOwner
    nameWithType:
      CSharp:
      - id: Backend.HouseholdAsset*
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.SetOwner*
        name: SetOwner
      VB:
      - id: Backend.HouseholdAsset*
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.SetOwner*
        name: SetOwner
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.HouseholdAsset*
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.SetOwner*
        name: SetOwner
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.HouseholdAsset*
        name: HouseholdAsset
      - name: .
      - id: Backend.HouseholdAsset.SetOwner*
        name: SetOwner
    isDefinition: true
    commentId: Overload:Backend.HouseholdAsset.SetOwner
  Backend.Inventory.#ctor*:
    name:
      CSharp:
      - id: Backend.Inventory.#ctor*
        name: Inventory
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.#ctor*
        name: Inventory
      VB:
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.#ctor*
        name: Inventory
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:Backend.Inventory.#ctor
  Backend.Inventory.AddItem*:
    name:
      CSharp:
      - id: Backend.Inventory.AddItem*
        name: AddItem
      VB:
      - id: Backend.Inventory.AddItem*
        name: AddItem
    nameWithType:
      CSharp:
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.AddItem*
        name: AddItem
      VB:
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.AddItem*
        name: AddItem
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.AddItem*
        name: AddItem
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.AddItem*
        name: AddItem
    isDefinition: true
    commentId: Overload:Backend.Inventory.AddItem
  Backend.Inventory.RemoveItem*:
    name:
      CSharp:
      - id: Backend.Inventory.RemoveItem*
        name: RemoveItem
      VB:
      - id: Backend.Inventory.RemoveItem*
        name: RemoveItem
    nameWithType:
      CSharp:
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.RemoveItem*
        name: RemoveItem
      VB:
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.RemoveItem*
        name: RemoveItem
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.RemoveItem*
        name: RemoveItem
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.RemoveItem*
        name: RemoveItem
    isDefinition: true
    commentId: Overload:Backend.Inventory.RemoveItem
  Backend.Inventory.GetAmount*:
    name:
      CSharp:
      - id: Backend.Inventory.GetAmount*
        name: GetAmount
      VB:
      - id: Backend.Inventory.GetAmount*
        name: GetAmount
    nameWithType:
      CSharp:
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.GetAmount*
        name: GetAmount
      VB:
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.GetAmount*
        name: GetAmount
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.GetAmount*
        name: GetAmount
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.GetAmount*
        name: GetAmount
    isDefinition: true
    commentId: Overload:Backend.Inventory.GetAmount
  Backend.Inventory.Contains*:
    name:
      CSharp:
      - id: Backend.Inventory.Contains*
        name: Contains
      VB:
      - id: Backend.Inventory.Contains*
        name: Contains
    nameWithType:
      CSharp:
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.Contains*
        name: Contains
      VB:
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.Contains*
        name: Contains
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.Contains*
        name: Contains
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Inventory*
        name: Inventory
      - name: .
      - id: Backend.Inventory.Contains*
        name: Contains
    isDefinition: true
    commentId: Overload:Backend.Inventory.Contains
  Backend.ProductType:
    name:
      CSharp:
      - id: Backend.ProductType
        name: ProductType
      VB:
      - id: Backend.ProductType
        name: ProductType
    nameWithType:
      CSharp:
      - id: Backend.ProductType
        name: ProductType
      VB:
      - id: Backend.ProductType
        name: ProductType
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.ProductType
        name: ProductType
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.ProductType
        name: ProductType
    isDefinition: true
    parent: Backend
    commentId: T:Backend.ProductType
  Backend.Product.Name*:
    name:
      CSharp:
      - id: Backend.Product.Name*
        name: Name
      VB:
      - id: Backend.Product.Name*
        name: Name
    nameWithType:
      CSharp:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Name*
        name: Name
      VB:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Name*
        name: Name
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Name*
        name: Name
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Name*
        name: Name
    isDefinition: true
    commentId: Overload:Backend.Product.Name
  Backend.Product.Price*:
    name:
      CSharp:
      - id: Backend.Product.Price*
        name: Price
      VB:
      - id: Backend.Product.Price*
        name: Price
    nameWithType:
      CSharp:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Price*
        name: Price
      VB:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Price*
        name: Price
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Price*
        name: Price
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Price*
        name: Price
    isDefinition: true
    commentId: Overload:Backend.Product.Price
  Backend.Product.PriceMultiplier*:
    name:
      CSharp:
      - id: Backend.Product.PriceMultiplier*
        name: PriceMultiplier
      VB:
      - id: Backend.Product.PriceMultiplier*
        name: PriceMultiplier
    nameWithType:
      CSharp:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.PriceMultiplier*
        name: PriceMultiplier
      VB:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.PriceMultiplier*
        name: PriceMultiplier
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.PriceMultiplier*
        name: PriceMultiplier
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.PriceMultiplier*
        name: PriceMultiplier
    isDefinition: true
    commentId: Overload:Backend.Product.PriceMultiplier
  Backend.Product.Buyable*:
    name:
      CSharp:
      - id: Backend.Product.Buyable*
        name: Buyable
      VB:
      - id: Backend.Product.Buyable*
        name: Buyable
    nameWithType:
      CSharp:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Buyable*
        name: Buyable
      VB:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Buyable*
        name: Buyable
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Buyable*
        name: Buyable
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Buyable*
        name: Buyable
    isDefinition: true
    commentId: Overload:Backend.Product.Buyable
  Backend.Product.Type*:
    name:
      CSharp:
      - id: Backend.Product.Type*
        name: Type
      VB:
      - id: Backend.Product.Type*
        name: Type
    nameWithType:
      CSharp:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Type*
        name: Type
      VB:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Type*
        name: Type
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Type*
        name: Type
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Type*
        name: Type
    isDefinition: true
    commentId: Overload:Backend.Product.Type
  Backend.Product.Description*:
    name:
      CSharp:
      - id: Backend.Product.Description*
        name: Description
      VB:
      - id: Backend.Product.Description*
        name: Description
    nameWithType:
      CSharp:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Description*
        name: Description
      VB:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Description*
        name: Description
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Description*
        name: Description
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.Description*
        name: Description
    isDefinition: true
    commentId: Overload:Backend.Product.Description
  Global.Func`2:
    name:
      CSharp:
      - id: Global.Func`2
        name: Func
        isExternal: true
      - name: <
      - name: ''
      - name: ','
      - name: " "
      - name: ''
      - name: '>'
      VB:
      - id: Global.Func`2
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: ''
      - name: ','
      - name: " "
      - name: ''
      - name: )
    nameWithType:
      CSharp:
      - id: Global.Func`2
        name: Func
        isExternal: true
      - name: <
      - name: ''
      - name: ','
      - name: " "
      - name: ''
      - name: '>'
      VB:
      - id: Global.Func`2
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: ''
      - name: ','
      - name: " "
      - name: ''
      - name: )
    qualifiedName:
      CSharp:
      - id: Global.Func`2
        name: Func
        isExternal: true
      - name: <
      - name: ''
      - name: ','
      - name: " "
      - name: ''
      - name: '>'
      VB:
      - id: Global.Func`2
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: ''
      - name: ','
      - name: " "
      - name: ''
      - name: )
    isDefinition: true
    commentId: '!:Global.Func`2'
  Global.Func{Backend.Household,System.Boolean}:
    name:
      CSharp:
      - id: Global.Func`2
        name: Func
        isExternal: true
      - name: <
      - id: Backend.Household
        name: Household
      - name: ','
      - name: " "
      - id: System.Boolean
        name: bool
        isExternal: true
      - name: '>'
      VB:
      - id: Global.Func`2
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Backend.Household
        name: Household
      - name: ','
      - name: " "
      - id: System.Boolean
        name: Boolean
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Global.Func`2
        name: Func
        isExternal: true
      - name: <
      - id: Backend.Household
        name: Household
      - name: ','
      - name: " "
      - id: System.Boolean
        name: bool
        isExternal: true
      - name: '>'
      VB:
      - id: Global.Func`2
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Backend.Household
        name: Household
      - name: ','
      - name: " "
      - id: System.Boolean
        name: Boolean
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Global.Func`2
        name: Func
        isExternal: true
      - name: <
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Household
        name: Household
      - name: ','
      - name: " "
      - id: System.Boolean
        name: bool
        isExternal: true
      - name: '>'
      VB:
      - id: Global.Func`2
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Household
        name: Household
      - name: ','
      - name: " "
      - id: System.Boolean
        name: Boolean
        isExternal: true
      - name: )
    isDefinition: false
    definition: Global.Func`2
    commentId: '!:Global.Func{Backend.Household,System.Boolean}'
  Backend.Product.PurchaseCondition*:
    name:
      CSharp:
      - id: Backend.Product.PurchaseCondition*
        name: PurchaseCondition
      VB:
      - id: Backend.Product.PurchaseCondition*
        name: PurchaseCondition
    nameWithType:
      CSharp:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.PurchaseCondition*
        name: PurchaseCondition
      VB:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.PurchaseCondition*
        name: PurchaseCondition
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.PurchaseCondition*
        name: PurchaseCondition
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.PurchaseCondition*
        name: PurchaseCondition
    isDefinition: true
    commentId: Overload:Backend.Product.PurchaseCondition
  Global.Action`1:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        isExternal: true
      - name: <
      - name: ''
      - name: '>'
      VB:
      - id: Global.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: ''
      - name: )
    nameWithType:
      CSharp:
      - id: Global.Action`1
        name: Action
        isExternal: true
      - name: <
      - name: ''
      - name: '>'
      VB:
      - id: Global.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: ''
      - name: )
    qualifiedName:
      CSharp:
      - id: Global.Action`1
        name: Action
        isExternal: true
      - name: <
      - name: ''
      - name: '>'
      VB:
      - id: Global.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: ''
      - name: )
    isDefinition: true
    commentId: '!:Global.Action`1'
  Global.Action{Backend.Household}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: Backend.Household
        name: Household
      - name: '>'
      VB:
      - id: Global.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Backend.Household
        name: Household
      - name: )
    nameWithType:
      CSharp:
      - id: Global.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: Backend.Household
        name: Household
      - name: '>'
      VB:
      - id: Global.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Backend.Household
        name: Household
      - name: )
    qualifiedName:
      CSharp:
      - id: Global.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Household
        name: Household
      - name: '>'
      VB:
      - id: Global.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Household
        name: Household
      - name: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{Backend.Household}'
  Backend.Product.BuyAction*:
    name:
      CSharp:
      - id: Backend.Product.BuyAction*
        name: BuyAction
      VB:
      - id: Backend.Product.BuyAction*
        name: BuyAction
    nameWithType:
      CSharp:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.BuyAction*
        name: BuyAction
      VB:
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.BuyAction*
        name: BuyAction
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.BuyAction*
        name: BuyAction
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Product*
        name: Product
      - name: .
      - id: Backend.Product.BuyAction*
        name: BuyAction
    isDefinition: true
    commentId: Overload:Backend.Product.BuyAction
  Backend.Product:
    name:
      CSharp:
      - id: Backend.Product
        name: Product
      VB:
      - id: Backend.Product
        name: Product
    nameWithType:
      CSharp:
      - id: Backend.Product
        name: Product
      VB:
      - id: Backend.Product
        name: Product
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Product
        name: Product
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Product
        name: Product
    isDefinition: true
    commentId: T:Backend.Product
  Backend.Market.Initialize*:
    name:
      CSharp:
      - id: Backend.Market.Initialize*
        name: Initialize
      VB:
      - id: Backend.Market.Initialize*
        name: Initialize
    nameWithType:
      CSharp:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.Initialize*
        name: Initialize
      VB:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.Initialize*
        name: Initialize
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.Initialize*
        name: Initialize
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.Initialize*
        name: Initialize
    isDefinition: true
    commentId: Overload:Backend.Market.Initialize
  Backend.Market.Buy*:
    name:
      CSharp:
      - id: Backend.Market.Buy*
        name: Buy
      VB:
      - id: Backend.Market.Buy*
        name: Buy
    nameWithType:
      CSharp:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.Buy*
        name: Buy
      VB:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.Buy*
        name: Buy
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.Buy*
        name: Buy
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.Buy*
        name: Buy
    isDefinition: true
    commentId: Overload:Backend.Market.Buy
  Backend.Market.Sell*:
    name:
      CSharp:
      - id: Backend.Market.Sell*
        name: Sell
      VB:
      - id: Backend.Market.Sell*
        name: Sell
    nameWithType:
      CSharp:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.Sell*
        name: Sell
      VB:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.Sell*
        name: Sell
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.Sell*
        name: Sell
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.Sell*
        name: Sell
    isDefinition: true
    commentId: Overload:Backend.Market.Sell
  Backend.Market.UpdateWheatPrice*:
    name:
      CSharp:
      - id: Backend.Market.UpdateWheatPrice*
        name: UpdateWheatPrice
      VB:
      - id: Backend.Market.UpdateWheatPrice*
        name: UpdateWheatPrice
    nameWithType:
      CSharp:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.UpdateWheatPrice*
        name: UpdateWheatPrice
      VB:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.UpdateWheatPrice*
        name: UpdateWheatPrice
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.UpdateWheatPrice*
        name: UpdateWheatPrice
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.UpdateWheatPrice*
        name: UpdateWheatPrice
    isDefinition: true
    commentId: Overload:Backend.Market.UpdateWheatPrice
  Backend.Market.AddProduct*:
    name:
      CSharp:
      - id: Backend.Market.AddProduct*
        name: AddProduct
      VB:
      - id: Backend.Market.AddProduct*
        name: AddProduct
    nameWithType:
      CSharp:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.AddProduct*
        name: AddProduct
      VB:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.AddProduct*
        name: AddProduct
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.AddProduct*
        name: AddProduct
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.AddProduct*
        name: AddProduct
    isDefinition: true
    commentId: Overload:Backend.Market.AddProduct
  Backend.Market.RemoveProduct*:
    name:
      CSharp:
      - id: Backend.Market.RemoveProduct*
        name: RemoveProduct
      VB:
      - id: Backend.Market.RemoveProduct*
        name: RemoveProduct
    nameWithType:
      CSharp:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.RemoveProduct*
        name: RemoveProduct
      VB:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.RemoveProduct*
        name: RemoveProduct
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.RemoveProduct*
        name: RemoveProduct
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.RemoveProduct*
        name: RemoveProduct
    isDefinition: true
    commentId: Overload:Backend.Market.RemoveProduct
  Backend.Market.CanBuyerBuy*:
    name:
      CSharp:
      - id: Backend.Market.CanBuyerBuy*
        name: CanBuyerBuy
      VB:
      - id: Backend.Market.CanBuyerBuy*
        name: CanBuyerBuy
    nameWithType:
      CSharp:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.CanBuyerBuy*
        name: CanBuyerBuy
      VB:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.CanBuyerBuy*
        name: CanBuyerBuy
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.CanBuyerBuy*
        name: CanBuyerBuy
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.CanBuyerBuy*
        name: CanBuyerBuy
    isDefinition: true
    commentId: Overload:Backend.Market.CanBuyerBuy
  Backend.Market.GetPrice*:
    name:
      CSharp:
      - id: Backend.Market.GetPrice*
        name: GetPrice
      VB:
      - id: Backend.Market.GetPrice*
        name: GetPrice
    nameWithType:
      CSharp:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.GetPrice*
        name: GetPrice
      VB:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.GetPrice*
        name: GetPrice
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.GetPrice*
        name: GetPrice
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.GetPrice*
        name: GetPrice
    isDefinition: true
    commentId: Overload:Backend.Market.GetPrice
  Backend.Market.SetPriceMultiplier*:
    name:
      CSharp:
      - id: Backend.Market.SetPriceMultiplier*
        name: SetPriceMultiplier
      VB:
      - id: Backend.Market.SetPriceMultiplier*
        name: SetPriceMultiplier
    nameWithType:
      CSharp:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.SetPriceMultiplier*
        name: SetPriceMultiplier
      VB:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.SetPriceMultiplier*
        name: SetPriceMultiplier
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.SetPriceMultiplier*
        name: SetPriceMultiplier
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.SetPriceMultiplier*
        name: SetPriceMultiplier
    isDefinition: true
    commentId: Overload:Backend.Market.SetPriceMultiplier
  Backend.Market.ActivateProduct*:
    name:
      CSharp:
      - id: Backend.Market.ActivateProduct*
        name: ActivateProduct
      VB:
      - id: Backend.Market.ActivateProduct*
        name: ActivateProduct
    nameWithType:
      CSharp:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.ActivateProduct*
        name: ActivateProduct
      VB:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.ActivateProduct*
        name: ActivateProduct
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.ActivateProduct*
        name: ActivateProduct
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.ActivateProduct*
        name: ActivateProduct
    isDefinition: true
    commentId: Overload:Backend.Market.ActivateProduct
  Backend.Market.DeactivateProduct*:
    name:
      CSharp:
      - id: Backend.Market.DeactivateProduct*
        name: DeactivateProduct
      VB:
      - id: Backend.Market.DeactivateProduct*
        name: DeactivateProduct
    nameWithType:
      CSharp:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.DeactivateProduct*
        name: DeactivateProduct
      VB:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.DeactivateProduct*
        name: DeactivateProduct
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.DeactivateProduct*
        name: DeactivateProduct
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.DeactivateProduct*
        name: DeactivateProduct
    isDefinition: true
    commentId: Overload:Backend.Market.DeactivateProduct
  Backend.Market.IsBuyable*:
    name:
      CSharp:
      - id: Backend.Market.IsBuyable*
        name: IsBuyable
      VB:
      - id: Backend.Market.IsBuyable*
        name: IsBuyable
    nameWithType:
      CSharp:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.IsBuyable*
        name: IsBuyable
      VB:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.IsBuyable*
        name: IsBuyable
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.IsBuyable*
        name: IsBuyable
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.IsBuyable*
        name: IsBuyable
    isDefinition: true
    commentId: Overload:Backend.Market.IsBuyable
  Backend.Market.GetDescription*:
    name:
      CSharp:
      - id: Backend.Market.GetDescription*
        name: GetDescription
      VB:
      - id: Backend.Market.GetDescription*
        name: GetDescription
    nameWithType:
      CSharp:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.GetDescription*
        name: GetDescription
      VB:
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.GetDescription*
        name: GetDescription
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.GetDescription*
        name: GetDescription
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.Market*
        name: Market
      - name: .
      - id: Backend.Market.GetDescription*
        name: GetDescription
    isDefinition: true
    commentId: Overload:Backend.Market.GetDescription
  Backend.Market:
    name:
      CSharp:
      - id: Backend.Market
        name: Market
      VB:
      - id: Backend.Market
        name: Market
    nameWithType:
      CSharp:
      - id: Backend.Market
        name: Market
      VB:
      - id: Backend.Market
        name: Market
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Market
        name: Market
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.Market
        name: Market
    isDefinition: true
    commentId: T:Backend.Market
  Backend.YieldPerformanceTable.GetYield*:
    name:
      CSharp:
      - id: Backend.YieldPerformanceTable.GetYield*
        name: GetYield
      VB:
      - id: Backend.YieldPerformanceTable.GetYield*
        name: GetYield
    nameWithType:
      CSharp:
      - id: Backend.YieldPerformanceTable*
        name: YieldPerformanceTable
      - name: .
      - id: Backend.YieldPerformanceTable.GetYield*
        name: GetYield
      VB:
      - id: Backend.YieldPerformanceTable*
        name: YieldPerformanceTable
      - name: .
      - id: Backend.YieldPerformanceTable.GetYield*
        name: GetYield
    qualifiedName:
      CSharp:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.YieldPerformanceTable*
        name: YieldPerformanceTable
      - name: .
      - id: Backend.YieldPerformanceTable.GetYield*
        name: GetYield
      VB:
      - id: Backend*
        name: Backend
      - name: .
      - id: Backend.YieldPerformanceTable*
        name: YieldPerformanceTable
      - name: .
      - id: Backend.YieldPerformanceTable.GetYield*
        name: GetYield
    isDefinition: true
    commentId: Overload:Backend.YieldPerformanceTable.GetYield
  Backend.YieldPerformanceTable:
    name:
      CSharp:
      - id: Backend.YieldPerformanceTable
        name: YieldPerformanceTable
      VB:
      - id: Backend.YieldPerformanceTable
        name: YieldPerformanceTable
    nameWithType:
      CSharp:
      - id: Backend.YieldPerformanceTable
        name: YieldPerformanceTable
      VB:
      - id: Backend.YieldPerformanceTable
        name: YieldPerformanceTable
    qualifiedName:
      CSharp:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.YieldPerformanceTable
        name: YieldPerformanceTable
      VB:
      - id: Backend
        name: Backend
      - name: .
      - id: Backend.YieldPerformanceTable
        name: YieldPerformanceTable
    isDefinition: true
    commentId: T:Backend.YieldPerformanceTable
