### YamlMime:ManagedReference
items:
- uid: Backend.Inventory
  commentId: T:Backend.Inventory
  id: Inventory
  parent: Backend
  children:
  - Backend.Inventory.#ctor
  - Backend.Inventory.AddItem(System.String)
  - Backend.Inventory.Contains(System.String)
  - Backend.Inventory.GetAmount(System.String)
  - Backend.Inventory.RemoveItem(System.String)
  langs:
  - csharp
  - vb
  name: Inventory
  nameWithType: Inventory
  fullName: Backend.Inventory
  type: Class
  source:
    id: Inventory
    path: ''
    startLine: 1416
  assemblies:
  - cs.temp.dll
  namespace: Backend
  summary: "\nA household&apos;s inventory. Can store items.\n"
  example: []
  syntax:
    content: 'public class Inventory : HouseholdAsset'
    content.vb: Public Class Inventory Inherits HouseholdAsset
  inheritance:
  - System.Object
  - Backend.HouseholdAsset
  inheritedMembers:
  - Backend.HouseholdAsset.Owner
  - Backend.HouseholdAsset.SetOwner(Backend.Household)
- uid: Backend.Inventory.#ctor
  commentId: M:Backend.Inventory.#ctor
  id: '#ctor'
  parent: Backend.Inventory
  langs:
  - csharp
  - vb
  name: Inventory()
  nameWithType: Inventory.Inventory()
  fullName: Backend.Inventory.Inventory()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1423
  assemblies:
  - cs.temp.dll
  namespace: Backend
  summary: "\nCreates an empty inventory.\n"
  example: []
  syntax:
    content: public Inventory()
    content.vb: Public Sub New()
  overload: Backend.Inventory.#ctor*
  nameWithType.vb: Inventory.New()
  fullName.vb: Backend.Inventory.New()
  name.vb: New()
- uid: Backend.Inventory.AddItem(System.String)
  commentId: M:Backend.Inventory.AddItem(System.String)
  id: AddItem(System.String)
  parent: Backend.Inventory
  langs:
  - csharp
  - vb
  name: AddItem(string)
  nameWithType: Inventory.AddItem(string)
  fullName: Backend.Inventory.AddItem(string)
  type: Method
  source:
    id: AddItem
    path: ''
    startLine: 1432
  assemblies:
  - cs.temp.dll
  namespace: Backend
  summary: "\nAdds <code data-dev-comment-type=\"paramref\" class=\"paramref\">newItem</code> to the inventory. If it already exists, increment its count.\n"
  example: []
  syntax:
    content: public void AddItem(string newItem)
    parameters:
    - id: newItem
      type: System.String
      description: The item to add.
    content.vb: Public Sub AddItem(newItem As String)
  overload: Backend.Inventory.AddItem*
  nameWithType.vb: Inventory.AddItem(String)
  fullName.vb: Backend.Inventory.AddItem(String)
  name.vb: AddItem(String)
- uid: Backend.Inventory.RemoveItem(System.String)
  commentId: M:Backend.Inventory.RemoveItem(System.String)
  id: RemoveItem(System.String)
  parent: Backend.Inventory
  langs:
  - csharp
  - vb
  name: RemoveItem(string)
  nameWithType: Inventory.RemoveItem(string)
  fullName: Backend.Inventory.RemoveItem(string)
  type: Method
  source:
    id: RemoveItem
    path: ''
    startLine: 1448
  assemblies:
  - cs.temp.dll
  namespace: Backend
  summary: "\nRemoves one <code data-dev-comment-type=\"paramref\" class=\"paramref\">item</code> from the inventory. If it exists, decrement its count. If its count becomes 0, remove the key entry.\nIf it doesn&apos;t exist, log a message in the Unity console.\n"
  example: []
  syntax:
    content: public void RemoveItem(string item)
    parameters:
    - id: item
      type: System.String
      description: The item to remove.
    content.vb: Public Sub RemoveItem(item As String)
  overload: Backend.Inventory.RemoveItem*
  nameWithType.vb: Inventory.RemoveItem(String)
  fullName.vb: Backend.Inventory.RemoveItem(String)
  name.vb: RemoveItem(String)
- uid: Backend.Inventory.GetAmount(System.String)
  commentId: M:Backend.Inventory.GetAmount(System.String)
  id: GetAmount(System.String)
  parent: Backend.Inventory
  langs:
  - csharp
  - vb
  name: GetAmount(string)
  nameWithType: Inventory.GetAmount(string)
  fullName: Backend.Inventory.GetAmount(string)
  type: Method
  source:
    id: GetAmount
    path: ''
    startLine: 1469
  assemblies:
  - cs.temp.dll
  namespace: Backend
  summary: "\nGets the count of <code data-dev-comment-type=\"paramref\" class=\"paramref\">item</code> in the inventory.\n"
  example: []
  syntax:
    content: public int GetAmount(string item)
    parameters:
    - id: item
      type: System.String
      description: Item to count.
    return:
      type: System.Int32
      description: Count of item in inventory, 0 if none.
    content.vb: Public Function GetAmount(item As String) As Integer
  overload: Backend.Inventory.GetAmount*
  nameWithType.vb: Inventory.GetAmount(String)
  fullName.vb: Backend.Inventory.GetAmount(String)
  name.vb: GetAmount(String)
- uid: Backend.Inventory.Contains(System.String)
  commentId: M:Backend.Inventory.Contains(System.String)
  id: Contains(System.String)
  parent: Backend.Inventory
  langs:
  - csharp
  - vb
  name: Contains(string)
  nameWithType: Inventory.Contains(string)
  fullName: Backend.Inventory.Contains(string)
  type: Method
  source:
    id: Contains
    path: ''
    startLine: 1484
  assemblies:
  - cs.temp.dll
  namespace: Backend
  summary: "\nCheck if <code data-dev-comment-type=\"paramref\" class=\"paramref\">item</code> is in the inventory.\n"
  example: []
  syntax:
    content: public bool Contains(string item)
    parameters:
    - id: item
      type: System.String
      description: The item to look for.
    return:
      type: System.Boolean
      description: Whether the item is in the inventory.
    content.vb: Public Function Contains(item As String) As Boolean
  overload: Backend.Inventory.Contains*
  nameWithType.vb: Inventory.Contains(String)
  fullName.vb: Backend.Inventory.Contains(String)
  name.vb: Contains(String)
references:
- uid: Backend
  commentId: N:Backend
  name: Backend
  nameWithType: Backend
  fullName: Backend
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Backend.HouseholdAsset
  commentId: T:Backend.HouseholdAsset
  parent: Backend
  name: HouseholdAsset
  nameWithType: HouseholdAsset
  fullName: Backend.HouseholdAsset
- uid: Backend.HouseholdAsset.Owner
  commentId: P:Backend.HouseholdAsset.Owner
  parent: Backend.HouseholdAsset
  name: Owner
  nameWithType: HouseholdAsset.Owner
  fullName: Backend.HouseholdAsset.Owner
- uid: Backend.HouseholdAsset.SetOwner(Backend.Household)
  commentId: M:Backend.HouseholdAsset.SetOwner(Backend.Household)
  parent: Backend.HouseholdAsset
  name: SetOwner(Household)
  nameWithType: HouseholdAsset.SetOwner(Household)
  fullName: Backend.HouseholdAsset.SetOwner(Backend.Household)
  spec.csharp:
  - uid: Backend.HouseholdAsset.SetOwner(Backend.Household)
    name: SetOwner
  - name: (
  - uid: Backend.Household
    name: Household
  - name: )
  spec.vb:
  - uid: Backend.HouseholdAsset.SetOwner(Backend.Household)
    name: SetOwner
  - name: (
  - uid: Backend.Household
    name: Household
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Backend.Inventory.#ctor*
  commentId: Overload:Backend.Inventory.#ctor
  name: Inventory
  nameWithType: Inventory.Inventory
  fullName: Backend.Inventory.Inventory
  nameWithType.vb: Inventory.New
  fullName.vb: Backend.Inventory.New
  name.vb: New
- uid: Backend.Inventory.AddItem*
  commentId: Overload:Backend.Inventory.AddItem
  name: AddItem
  nameWithType: Inventory.AddItem
  fullName: Backend.Inventory.AddItem
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Backend.Inventory.RemoveItem*
  commentId: Overload:Backend.Inventory.RemoveItem
  name: RemoveItem
  nameWithType: Inventory.RemoveItem
  fullName: Backend.Inventory.RemoveItem
- uid: Backend.Inventory.GetAmount*
  commentId: Overload:Backend.Inventory.GetAmount
  name: GetAmount
  nameWithType: Inventory.GetAmount
  fullName: Backend.Inventory.GetAmount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Backend.Inventory.Contains*
  commentId: Overload:Backend.Inventory.Contains
  name: Contains
  nameWithType: Inventory.Contains
  fullName: Backend.Inventory.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
